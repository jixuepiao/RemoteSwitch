

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Wed Jan 22 10:20:38 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text679,local,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text680,local,class=CODE,delta=2
    17                           	psect	text681,local,class=CODE,delta=2
    18                           	psect	text682,local,class=CODE,delta=2
    19                           	psect	text683,local,class=CODE,delta=2
    20                           	psect	text684,local,class=CODE,delta=2
    21                           	psect	text685,local,class=CODE,delta=2
    22                           	psect	text686,local,class=CODE,delta=2
    23                           	psect	text687,local,class=CODE,delta=2
    24                           	psect	text688,local,class=CODE,delta=2
    25                           	psect	text689,local,class=CODE,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text690,local,class=CODE,delta=2
    28                           	psect	swtext1,local,class=CONST,delta=2
    29                           	psect	text691,local,class=CODE,delta=2
    30                           	psect	text692,local,class=CODE,delta=2
    31                           	psect	text693,local,class=CODE,delta=2
    32                           	psect	text694,local,class=CODE,delta=2
    33                           	psect	text695,local,class=CODE,delta=2
    34                           	psect	text696,local,class=CODE,delta=2
    35                           	psect	text697,local,class=CODE,delta=2
    36                           	psect	text698,local,class=CODE,delta=2
    37                           	psect	text699,local,class=CODE,delta=2
    38                           	psect	text700,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x11E,1
    41                           	dabs	1,0x11F,1
    42                           	dabs	1,0x119,1
    43                           	dabs	1,0x11A,1
    44                           	dabs	1,0x11B,1
    45                           	dabs	1,0x10F,1
    46                           	dabs	1,0x10E,1
    47                           	dabs	1,0x116,1
    48                           	dabs	1,0x19D,1
    49                           	dabs	1,0x19E,1
    50                           	dabs	1,0x118,1
    51                           	dabs	1,0x115,1
    52                           	dabs	1,0x11E,1
    53                           	dabs	1,0x11E,1
    54                           	dabs	1,0x11F,1
    55                           	dabs	1,0x11F,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11E,1
    61                           	dabs	1,0x11E,1
    62                           	dabs	1,0x11F,1
    63                           	dabs	1,0x11F,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x119,1
    70                           	dabs	1,0x119,1
    71                           	dabs	1,0x19E,1
    72                           	dabs	1,0x118,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x11A,1
    79                           	dabs	1,0x11A,1
    80                           	dabs	1,0x19E,1
    81                           	dabs	1,0x11B,1
    82                           	dabs	1,0x118,1
    83                           	dabs	1,0x18C,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x116,1
    87                           	dabs	1,0x116,1
    88                           	dabs	1,0x11B,1
    89                           	dabs	1,0x11B,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19E,1
    93                           	dabs	1,0x19E,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x19D,1
    98                           	dabs	1,0x19D,1
    99                           	dabs	1,0x11B,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x118,1
   105                           	dabs	1,0x118,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x115,1
   109                           	dabs	1,0x115,1
   110                           	dabs	1,0x18C,1
   111                           	dabs	1,0x7E,2
   112  000A                     
   113                           	psect	text679
   114  0000                     __ptext679:	
   115  011E                     _ANSEL	set	286	;_ANSEL
   116  011F                     _ANSELH	set	287	;_ANSELH
   117  0119                     _CM1CON0	set	281	;_CM1CON0
   118  011A                     _CM2CON0	set	282	;_CM2CON0
   119  011B                     _CM2CON1	set	283	;_CM2CON1
   120  010F                     _EEADRH	set	271	;_EEADRH
   121  010E                     _EEDATH	set	270	;_EEDATH
   122  0116                     _IOCB	set	278	;_IOCB
   123  019D                     _PSTRCON	set	413	;_PSTRCON
   124  019E                     _SRCON	set	414	;_SRCON
   125  0118                     _VRCON	set	280	;_VRCON
   126  0115                     _WPUB	set	277	;_WPUB
   127  08F0                     _ANS0	set	2288	;_ANS0
   128  08F1                     _ANS1	set	2289	;_ANS1
   129  08FA                     _ANS10	set	2298	;_ANS10
   130  08FB                     _ANS11	set	2299	;_ANS11
   131  08F2                     _ANS2	set	2290	;_ANS2
   132  08F3                     _ANS3	set	2291	;_ANS3
   133  08F4                     _ANS4	set	2292	;_ANS4
   134  08F5                     _ANS5	set	2293	;_ANS5
   135  08F6                     _ANS6	set	2294	;_ANS6
   136  08F7                     _ANS7	set	2295	;_ANS7
   137  08F8                     _ANS8	set	2296	;_ANS8
   138  08F9                     _ANS9	set	2297	;_ANS9
   139  08C8                     _C1CH0	set	2248	;_C1CH0
   140  08C9                     _C1CH1	set	2249	;_C1CH1
   141  08CD                     _C1OE	set	2253	;_C1OE
   142  08CF                     _C1ON	set	2255	;_C1ON
   143  08CE                     _C1OUT	set	2254	;_C1OUT
   144  08CC                     _C1POL	set	2252	;_C1POL
   145  08CA                     _C1R	set	2250	;_C1R
   146  0CF5                     _C1SEN	set	3317	;_C1SEN
   147  08C7                     _C1VREN	set	2247	;_C1VREN
   148  08D0                     _C2CH0	set	2256	;_C2CH0
   149  08D1                     _C2CH1	set	2257	;_C2CH1
   150  08D5                     _C2OE	set	2261	;_C2OE
   151  08D7                     _C2ON	set	2263	;_C2ON
   152  08D6                     _C2OUT	set	2262	;_C2OUT
   153  08D4                     _C2POL	set	2260	;_C2POL
   154  08D2                     _C2R	set	2258	;_C2R
   155  0CF4                     _C2REN	set	3316	;_C2REN
   156  08D8                     _C2SYNC	set	2264	;_C2SYNC
   157  08C6                     _C2VREN	set	2246	;_C2VREN
   158  0C67                     _EEPGD	set	3175	;_EEPGD
   159  08B4                     _IOCB4	set	2228	;_IOCB4
   160  08B5                     _IOCB5	set	2229	;_IOCB5
   161  08B6                     _IOCB6	set	2230	;_IOCB6
   162  08B7                     _IOCB7	set	2231	;_IOCB7
   163  08DF                     _MC1OUT	set	2271	;_MC1OUT
   164  08DE                     _MC2OUT	set	2270	;_MC2OUT
   165  0CF2                     _PULSR	set	3314	;_PULSR
   166  0CF3                     _PULSS	set	3315	;_PULSS
   167  0CF6                     _SR0	set	3318	;_SR0
   168  0CF7                     _SR1	set	3319	;_SR1
   169  0CE8                     _STRA	set	3304	;_STRA
   170  0CE9                     _STRB	set	3305	;_STRB
   171  0CEA                     _STRC	set	3306	;_STRC
   172  0CEB                     _STRD	set	3307	;_STRD
   173  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   174  08D9                     _T1GSS	set	2265	;_T1GSS
   175  08C4                     _VP6EN	set	2244	;_VP6EN
   176  08C0                     _VR0	set	2240	;_VR0
   177  08C1                     _VR1	set	2241	;_VR1
   178  08C2                     _VR2	set	2242	;_VR2
   179  08C3                     _VR3	set	2243	;_VR3
   180  08C5                     _VRR	set	2245	;_VRR
   181  08AC                     _WPUB4	set	2220	;_WPUB4
   182  08AD                     _WPUB5	set	2221	;_WPUB5
   183  08AE                     _WPUB6	set	2222	;_WPUB6
   184  08AF                     _WPUB7	set	2223	;_WPUB7
   185  0C62                     _WREN	set	3170	;_WREN
   186                           
   187                           	psect	nvBANK0
   188  0067                     __pnvBANK0:	
   189  0067                     _CH1_remotekey_num:	
   190  0067                     	ds	1
   191  0068                     _CH2_remotekey_num:	
   192  0068                     	ds	1
   193  0069                     _CH3_remotekey_num:	
   194  0069                     	ds	1
   195  000B                     _INTCON	set	11
   196  0005                     _PORTA	set	5
   197  0007                     _PORTC	set	7
   198  0012                     _T2CON0	set	18
   199  0001                     _TMR0	set	1
   200  0013                     _TMR2H	set	19
   201  0011                     _TMR2L	set	17
   202  0018                     _WDTCON	set	24
   203  0067                     _EEIF	set	103
   204  005F                     _GIE	set	95
   205  005C                     _INTE	set	92
   206  0059                     _INTF	set	89
   207  002A                     _PA2	set	42
   208  002B                     _PA3	set	43
   209  002C                     _PA4	set	44
   210  002D                     _PA5	set	45
   211  002E                     _PA6	set	46
   212  002F                     _PA7	set	47
   213  0038                     _PC0	set	56
   214  003C                     _PC4	set	60
   215  003D                     _PC5	set	61
   216  005E                     _PEIE	set	94
   217  005D                     _T0IE	set	93
   218  005A                     _T0IF	set	90
   219  0061                     _TMR2IF	set	97
   220  0092                     _TMR2ON	set	146
   221  009B                     _EEADR	set	155
   222  009C                     _EECON1	set	156
   223  009A                     _EEDAT	set	154
   224  0081                     _OPTION	set	129
   225  008F                     _OSCCON	set	143
   226  0092                     _PR2H	set	146
   227  0091                     _PR2L	set	145
   228  0097                     _PSINKA	set	151
   229  009F                     _PSINKC	set	159
   230  0088                     _PSRCA	set	136
   231  0094                     _PSRCC	set	148
   232  009E                     _T2CON1	set	158
   233  0085                     _TRISA	set	133
   234  0087                     _TRISC	set	135
   235  0095                     _WPUA	set	149
   236  0093                     _WPUC	set	147
   237  040E                     _INTEDG	set	1038
   238  04B2                     _IOCA2	set	1202
   239  040B                     _PSA	set	1035
   240  04E0                     _RD	set	1248
   241  040D                     _T0CS	set	1037
   242  0461                     _TMR2IE	set	1121
   243  042A                     _TRISA2	set	1066
   244  04E8                     _WR	set	1256
   245                           
   246                           	psect	nvBANK1
   247  00B3                     __pnvBANK1:	
   248  00B3                     _CH1_remotekey_Latest:	
   249  00B3                     	ds	1
   250  00B4                     _CH2_remotekey_Latest:	
   251  00B4                     	ds	1
   252  00B5                     _CH3_remotekey_Latest:	
   253  00B5                     	ds	1
   254  00B6                     _EE_Buff:	
   255  00B6                     	ds	1
   256                           
   257                           	psect	cinit
   258  0661                     start_initialization:	
   259                           
   260                           ; Clear objects allocated to COMMON
   261  0661  3070               	movlw	low __pbssCOMMON
   262  0662  0084               	movwf	4
   263  0663  3076               	movlw	low (__pbssCOMMON+6)
   264  0664  267C               	fcall	clear_ram
   265  0665  3020               	movlw	low __pbssBANK0
   266                           
   267                           ; Clear objects allocated to BANK0
   268  0666  1383               	bcf	3,7	;select IRP bank0
   269  0667  0084               	movwf	4
   270  0668  305D               	movlw	low (__pbssBANK0+61)
   271  0669  267C               	fcall	clear_ram
   272                           
   273                           ; Clear objects allocated to BANK1
   274  066A  30A0               	movlw	low __pbssBANK1
   275  066B  0084               	movwf	4
   276  066C  30AB               	movlw	low (__pbssBANK1+11)
   277  066D  267C               	fcall	clear_ram
   278  066E                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  066E  0183               	clrf	3
   282  066F  2E28               	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  0070                     __pbssCOMMON:	
   286  0070                     _Match_remotekey:	
   287  0070                     	ds	4
   288  0074                     _FLAGs:	
   289  0074                     	ds	1
   290  0075                     _PRESSED:	
   291  0075                     	ds	1
   292                           
   293                           	psect	bssBANK0
   294  0020                     __pbssBANK0:	
   295  0020                     _buff:	
   296  0020                     	ds	2
   297  0022                     _KEY1_LongPress:	
   298  0022                     	ds	1
   299  0023                     _KEY2_LongPress:	
   300  0023                     	ds	1
   301  0024                     _KEY3_LongPress:	
   302  0024                     	ds	1
   303  0025                     _KEY_Match_counter:	
   304  0025                     	ds	1
   305  0026                     _Key_dealed_counter:	
   306  0026                     	ds	1
   307  0027                     _PRESS_FLAG:	
   308  0027                     	ds	1
   309  0028                     _match_slice:	
   310  0028                     	ds	1
   311  0029                     _ms16_counter:	
   312  0029                     	ds	1
   313  002A                     _num:	
   314  002A                     	ds	1
   315  002B                     _remotekey_Receive_num:	
   316  002B                     	ds	1
   317  002C                     _remotekey_slice:	
   318  002C                     	ds	1
   319  002D                     _CH1_remotekey:	
   320  002D                     	ds	16
   321  003D                     _CH2_remotekey:	
   322  003D                     	ds	16
   323  004D                     _CH3_remotekey:	
   324  004D                     	ds	16
   325                           
   326                           	psect	bssBANK1
   327  00A0                     __pbssBANK1:	
   328  00A0                     _Ctrl_remotekey:	
   329  00A0                     	ds	4
   330  00A4                     _remotekey:	
   331  00A4                     	ds	4
   332  00A8                     _Indata:	
   333  00A8                     	ds	2
   334  00AA                     _LONGPRESS_OverTime_Counter:	
   335  00AA                     	ds	1
   336                           
   337                           	psect	clrtext
   338  067C                     clear_ram:	
   339                           ;	Called with FSR containing the base address, and
   340                           ;	W with the last address+1
   341                           
   342  067C  0064               	clrwdt	;clear the watchdog before getting into this loop
   343  067D                     clrloop:	
   344  067D  0180               	clrf	0	;clear RAM location pointed to by FSR
   345  067E  0A84               	incf	4,f	;increment pointer
   346  067F  0604               	xorwf	4,w	;XOR with final address
   347  0680  1903               	btfsc	3,2	;have we reached the end yet?
   348  0681  3400               	retlw	0	;all done for this memory range, return
   349  0682  0604               	xorwf	4,w	;XOR again to restore value
   350  0683  2E7D               	goto	clrloop	;do the next byte
   351                           
   352                           	psect	cstackBANK1
   353  00AB                     __pcstackBANK1:	
   354  00AB                     ??_EX_INT_FallingEdge:	
   355  00AB                     ??_INT_INITIAL:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  00AB                     ??_OSC_INIT:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  00AB                     ??_WDT_INITIAL:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  00AB                     ??_TIMER0_INITIAL:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  00AB                     ??_TIMER2_INITIAL:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  00AB                     ??_IAPRead:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  00AB                     IAPRead@EEAddr:	
   374                           ; 0 bytes @ 0x0
   375                           
   376                           
   377                           ; 1 bytes @ 0x0
   378  00AB                     	ds	1
   379  00AC                     IAPRead@ReEEPROMread:	
   380                           
   381                           ; 1 bytes @ 0x1
   382  00AC                     	ds	1
   383  00AD                     ?_EEPROM_ReadWord:	
   384  00AD                     EEPROM_ReadWord@data:	
   385                           ; 0 bytes @ 0x2
   386                           
   387                           
   388                           ; 1 bytes @ 0x2
   389  00AD                     	ds	1
   390  00AE                     ??_EEPROM_ReadWord:	
   391                           
   392                           ; 0 bytes @ 0x3
   393  00AE                     	ds	4
   394  00B2                     EEPROM_ReadWord@buff:	
   395                           
   396                           ; 1 bytes @ 0x7
   397  00B2                     	ds	1
   398  00B3                     ??_EEPROM_Read:	
   399  00B3                     ??_main:	
   400                           ; 0 bytes @ 0x8
   401                           
   402                           
   403                           	psect	cstackCOMMON
   404  0076                     __pcstackCOMMON:	
   405                           ; 0 bytes @ 0x8
   406                           
   407  0076                     ?_EX_INT_RisingEdge:	
   408  0076                     ??_EX_INT_RisingEdge:	
   409                           ; 0 bytes @ 0x0
   410                           
   411  0076                     ?_EX_INT_FallingEdge:	
   412                           ; 0 bytes @ 0x0
   413                           
   414  0076                     ?_led1_debug:	
   415                           ; 0 bytes @ 0x0
   416                           
   417  0076                     ??_led1_debug:	
   418                           ; 0 bytes @ 0x0
   419                           
   420  0076                     ?_KEYSCAN:	
   421                           ; 0 bytes @ 0x0
   422                           
   423  0076                     ??_KEYSCAN:	
   424                           ; 0 bytes @ 0x0
   425                           
   426  0076                     ?_KEY:	
   427                           ; 0 bytes @ 0x0
   428                           
   429  0076                     ?_ISR:	
   430                           ; 0 bytes @ 0x0
   431                           
   432  0076                     ?_INT_INITIAL:	
   433                           ; 0 bytes @ 0x0
   434                           
   435  0076                     ?_OSC_INIT:	
   436                           ; 0 bytes @ 0x0
   437                           
   438  0076                     ?_WDT_INITIAL:	
   439                           ; 0 bytes @ 0x0
   440                           
   441  0076                     ?_TIMER0_INITIAL:	
   442                           ; 0 bytes @ 0x0
   443                           
   444  0076                     ?_TIMER2_INITIAL:	
   445                           ; 0 bytes @ 0x0
   446                           
   447  0076                     ?_IAPWrite:	
   448                           ; 0 bytes @ 0x0
   449                           
   450  0076                     ?_CH1_EEPROM_Write:	
   451                           ; 0 bytes @ 0x0
   452                           
   453  0076                     ?_CH2_EEPROM_Write:	
   454                           ; 0 bytes @ 0x0
   455                           
   456  0076                     ?_CH3_EEPROM_Write:	
   457                           ; 0 bytes @ 0x0
   458                           
   459  0076                     ?_EEPROM_Read:	
   460                           ; 0 bytes @ 0x0
   461                           
   462  0076                     ?i1_EX_INT_FallingEdge:	
   463                           ; 0 bytes @ 0x0
   464                           
   465  0076                     ??i1_EX_INT_FallingEdge:	
   466                           ; 0 bytes @ 0x0
   467                           
   468  0076                     ?_IAPRead:	
   469                           ; 0 bytes @ 0x0
   470                           
   471  0076                     ?_main:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0076                     ?___wmul:	
   475                           ; 2 bytes @ 0x0
   476                           
   477  0076                     IAPWrite@Data:	
   478                           ; 2 bytes @ 0x0
   479                           
   480  0076                     ___wmul@multiplier:	
   481                           ; 1 bytes @ 0x0
   482                           
   483                           
   484                           ; 2 bytes @ 0x0
   485  0076                     	ds	1
   486  0077                     ??_IAPWrite:	
   487  0077                     IAPWrite@EEAddr:	
   488                           ; 0 bytes @ 0x1
   489                           
   490                           
   491                           ; 1 bytes @ 0x1
   492  0077                     	ds	1
   493  0078                     ??_KEY:	
   494  0078                     ??_CH1_EEPROM_Write:	
   495                           ; 0 bytes @ 0x2
   496                           
   497  0078                     ??_CH2_EEPROM_Write:	
   498                           ; 0 bytes @ 0x2
   499                           
   500  0078                     ??_CH3_EEPROM_Write:	
   501                           ; 0 bytes @ 0x2
   502                           
   503  0078                     ___wmul@multiplicand:	
   504                           ; 0 bytes @ 0x2
   505                           
   506                           
   507                           ; 2 bytes @ 0x2
   508  0078                     	ds	2
   509  007A                     ??___wmul:	
   510  007A                     ___wmul@product:	
   511                           ; 0 bytes @ 0x4
   512                           
   513                           
   514                           ; 2 bytes @ 0x4
   515  007A                     	ds	2
   516                           
   517                           	psect	cstackBANK0
   518  005D                     __pcstackBANK0:	
   519  005D                     ??_ISR:	
   520                           
   521                           ; 0 bytes @ 0x0
   522  005D                     	ds	10
   523                           
   524                           	psect	maintext
   525  0628                     __pmaintext:	
   526 ;;Data sizes: Strings 0, constant 0, data 0, bss 78, persistent 7 stack 0
   527 ;;Auto spaces:   Size  Autos    Used
   528 ;; COMMON          14      6      12
   529 ;; BANK0           80     10      74
   530 ;; BANK1           32      8      23
   531 ;;
   532 ;; Pointer list with targets:
   533 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   534 ;;
   535 ;; EEPROM_ReadWord@buff	PTR unsigned long  size(1) Largest target is 16
   536 ;;		 -> CH3_remotekey(BANK0[16]), CH2_remotekey(BANK0[16]), CH1_remotekey(BANK0[16]), 
   537 ;;
   538 ;;
   539 ;; Critical Paths under _main in COMMON
   540 ;;
   541 ;;   None.
   542 ;;
   543 ;; Critical Paths under _ISR in COMMON
   544 ;;
   545 ;;   _ISR->___wmul
   546 ;;   _CH3_EEPROM_Write->_IAPWrite
   547 ;;   _CH2_EEPROM_Write->_IAPWrite
   548 ;;   _CH1_EEPROM_Write->_IAPWrite
   549 ;;
   550 ;; Critical Paths under _main in BANK0
   551 ;;
   552 ;;   None.
   553 ;;
   554 ;; Critical Paths under _ISR in BANK0
   555 ;;
   556 ;;   None.
   557 ;;
   558 ;; Critical Paths under _main in BANK1
   559 ;;
   560 ;;   _EEPROM_Read->_EEPROM_ReadWord
   561 ;;   _EEPROM_ReadWord->_IAPRead
   562 ;;
   563 ;; Critical Paths under _ISR in BANK1
   564 ;;
   565 ;;   None.
   566 ;;
   567 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   568 ;;
   569 ;;
   570 ;;Call Graph Tables:
   571 ;;
   572 ;; ---------------------------------------------------------------------------------
   573 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   574 ;; ---------------------------------------------------------------------------------
   575 ;; (0) _main                                                 0     0      0     471
   576 ;;                           _OSC_INIT
   577 ;;                     _TIMER0_INITIAL
   578 ;;                     _TIMER2_INITIAL
   579 ;;                        _INT_INITIAL
   580 ;;                        _EEPROM_Read
   581 ;;                        _WDT_INITIAL
   582 ;;                 _EX_INT_FallingEdge
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (1) _EEPROM_Read                                          0     0      0     471
   585 ;;                    _EEPROM_ReadWord
   586 ;;                            _IAPRead
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (2) _EEPROM_ReadWord                                      6     5      1     406
   589 ;;                                              2 BANK1      6     5      1
   590 ;;                            _IAPRead
   591 ;; ---------------------------------------------------------------------------------
   592 ;; (1) _INT_INITIAL                                          0     0      0       0
   593 ;;                 _EX_INT_FallingEdge
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (2) _IAPRead                                              2     2      0      65
   596 ;;                                              0 BANK1      2     2      0
   597 ;; ---------------------------------------------------------------------------------
   598 ;; (1) _TIMER2_INITIAL                                       0     0      0       0
   599 ;; ---------------------------------------------------------------------------------
   600 ;; (1) _TIMER0_INITIAL                                       0     0      0       0
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (1) _WDT_INITIAL                                          0     0      0       0
   603 ;; ---------------------------------------------------------------------------------
   604 ;; (1) _OSC_INIT                                             0     0      0       0
   605 ;; ---------------------------------------------------------------------------------
   606 ;; (1) _EX_INT_FallingEdge                                   0     0      0       0
   607 ;; ---------------------------------------------------------------------------------
   608 ;; Estimated maximum stack depth 2
   609 ;; ---------------------------------------------------------------------------------
   610 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (4) _ISR                                                 10    10      0     224
   613 ;;                                              0 BANK0     10    10      0
   614 ;;                  _EX_INT_RisingEdge
   615 ;;               i1_EX_INT_FallingEdge
   616 ;;                             ___wmul
   617 ;;                         _led1_debug
   618 ;;                            _KEYSCAN
   619 ;;                                _KEY
   620 ;; ---------------------------------------------------------------------------------
   621 ;; (5) _KEY                                                  2     2      0     132
   622 ;;                                              2 COMMON     2     2      0
   623 ;;                   _CH1_EEPROM_Write
   624 ;;                   _CH2_EEPROM_Write
   625 ;;                   _CH3_EEPROM_Write
   626 ;;                         _led1_debug
   627 ;; ---------------------------------------------------------------------------------
   628 ;; (6) _CH3_EEPROM_Write                                     0     0      0      44
   629 ;;                           _IAPWrite
   630 ;; ---------------------------------------------------------------------------------
   631 ;; (6) _CH2_EEPROM_Write                                     0     0      0      44
   632 ;;                           _IAPWrite
   633 ;; ---------------------------------------------------------------------------------
   634 ;; (6) _CH1_EEPROM_Write                                     0     0      0      44
   635 ;;                           _IAPWrite
   636 ;; ---------------------------------------------------------------------------------
   637 ;; (5) i1_EX_INT_FallingEdge                                 0     0      0       0
   638 ;; ---------------------------------------------------------------------------------
   639 ;; (5) ___wmul                                               6     2      4      92
   640 ;;                                              0 COMMON     6     2      4
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (7) _IAPWrite                                             2     1      1      44
   643 ;;                                              0 COMMON     2     1      1
   644 ;; ---------------------------------------------------------------------------------
   645 ;; (5) _KEYSCAN                                              0     0      0       0
   646 ;; ---------------------------------------------------------------------------------
   647 ;; (6) _led1_debug                                           0     0      0       0
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (5) _EX_INT_RisingEdge                                    0     0      0       0
   650 ;; ---------------------------------------------------------------------------------
   651 ;; Estimated maximum stack depth 7
   652 ;; ---------------------------------------------------------------------------------
   653 ;; Call Graph Graphs:
   654 ;; _main (ROOT)
   655 ;;   _OSC_INIT
   656 ;;   _TIMER0_INITIAL
   657 ;;   _TIMER2_INITIAL
   658 ;;   _INT_INITIAL
   659 ;;     _EX_INT_FallingEdge
   660 ;;   _EEPROM_Read
   661 ;;     _EEPROM_ReadWord
   662 ;;       _IAPRead
   663 ;;     _IAPRead
   664 ;;   _WDT_INITIAL
   665 ;;   _EX_INT_FallingEdge
   666 ;;
   667 ;; _ISR (ROOT)
   668 ;;   _EX_INT_RisingEdge
   669 ;;   i1_EX_INT_FallingEdge
   670 ;;   ___wmul
   671 ;;   _led1_debug
   672 ;;   _KEYSCAN
   673 ;;   _KEY
   674 ;;     _CH1_EEPROM_Write
   675 ;;       _IAPWrite
   676 ;;     _CH2_EEPROM_Write
   677 ;;       _IAPWrite
   678 ;;     _CH3_EEPROM_Write
   679 ;;       _IAPWrite
   680 ;;     _led1_debug
   681 ;;
   682 ;; Address spaces:
   683 ;;Name               Size   Autos  Total    Cost      Usage
   684 ;;BITCOMMON            E      0       0       0        0.0%
   685 ;;EEDATA             100      0       0       0        0.0%
   686 ;;NULL                 0      0       0       0        0.0%
   687 ;;CODE                 0      0       0       0        0.0%
   688 ;;COMMON               E      6       C       1       85.7%
   689 ;;BITSFR0              0      0       0       1        0.0%
   690 ;;SFR0                 0      0       0       1        0.0%
   691 ;;BITSFR1              0      0       0       2        0.0%
   692 ;;SFR1                 0      0       0       2        0.0%
   693 ;;STACK                0      0       B       2        0.0%
   694 ;;BITBANK0            50      0       0       3        0.0%
   695 ;;BANK0               50      A      4A       4       92.5%
   696 ;;BANK1               20      8      17       5       71.9%
   697 ;;ABS                  0      0      6D       6        0.0%
   698 ;;BITBANK1            20      0       0       7        0.0%
   699 ;;DATA                 0      0      78       8        0.0%
   700                           
   701                           
   702 ;; *************** function _main *****************
   703 ;; Defined at:
   704 ;;		line 788 in file "1.C"
   705 ;; Parameters:    Size  Location     Type
   706 ;;		None
   707 ;; Auto vars:     Size  Location     Type
   708 ;;		None
   709 ;; Return value:  Size  Location     Type
   710 ;;                  2  1044[COMMON] int 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : 17F/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: FFE00/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1
   718 ;;      Params:         0       0       0
   719 ;;      Locals:         0       0       0
   720 ;;      Temps:          0       0       0
   721 ;;      Totals:         0       0       0
   722 ;;Total ram usage:        0 bytes
   723 ;; Hardware stack levels required when called:    7
   724 ;; This function calls:
   725 ;;		_OSC_INIT
   726 ;;		_TIMER0_INITIAL
   727 ;;		_TIMER2_INITIAL
   728 ;;		_INT_INITIAL
   729 ;;		_EEPROM_Read
   730 ;;		_WDT_INITIAL
   731 ;;		_EX_INT_FallingEdge
   732 ;; This function is called by:
   733 ;;		Startup code after reset
   734 ;; This function uses a non-reentrant model
   735 ;;
   736  0628                     _main:	
   737                           
   738                           ;1.C: 789: OSC_INIT();
   739                           
   740                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   741  0628  25F6               	fcall	_OSC_INIT
   742                           
   743                           ;1.C: 790: TIMER0_INITIAL();
   744  0629  2670               	fcall	_TIMER0_INITIAL
   745                           
   746                           ;1.C: 791: TIMER2_INITIAL();
   747  062A  264F               	fcall	_TIMER2_INITIAL
   748                           
   749                           ;1.C: 792: INT_INITIAL();
   750  062B  2684               	fcall	_INT_INITIAL
   751                           
   752                           ;1.C: 793: EEPROM_Read();
   753  062C  24F4               	fcall	_EEPROM_Read
   754                           
   755                           ;1.C: 794: WDT_INITIAL();
   756  062D  2691               	fcall	_WDT_INITIAL
   757                           
   758                           ;1.C: 795: PC0 = 1;
   759  062E  1407               	bsf	7,0
   760                           
   761                           ;1.C: 796: PA7 = 1;
   762  062F  1785               	bsf	5,7
   763                           
   764                           ;1.C: 797: PA6 = 1;
   765  0630  1705               	bsf	5,6
   766                           
   767                           ;1.C: 798: PA5 = 1;
   768  0631  1685               	bsf	5,5
   769                           
   770                           ;1.C: 800: PA3 = 0;
   771  0632  1185               	bcf	5,3
   772                           
   773                           ;1.C: 801: FLAGs &= ~0x08;
   774  0633  11F4               	bcf	_FLAGs,3
   775                           
   776                           ;1.C: 802: EX_INT_FallingEdge();
   777  0634  2696               	fcall	_EX_INT_FallingEdge
   778                           
   779                           ;1.C: 803: INTE =1;
   780  0635  160B               	bsf	11,4
   781                           
   782                           ;1.C: 805: TMR2ON =1;
   783  0636  1283               	bcf	3,5	;RP0=0, select bank0
   784  0637  1512               	bsf	18,2
   785                           
   786                           ;1.C: 807: PEIE = 1;
   787  0638  170B               	bsf	11,6
   788                           
   789                           ;1.C: 808: GIE = 1;
   790  0639  178B               	bsf	11,7
   791  063A                     l3723:	
   792  063A  0064               	clrwdt	;#
   793  063B  2E3A               	goto	l3723
   794  063C                     __end_of_main:	
   795                           
   796                           	psect	text680
   797  04F4                     __ptext680:	
   798 ;; =============== function _main ends ============
   799                           
   800                           
   801 ;; *************** function _EEPROM_Read *****************
   802 ;; Defined at:
   803 ;;		line 573 in file "1.C"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;		None               void
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 17F/20
   814 ;;		On exit  : 17F/20
   815 ;;		Unchanged: FFE80/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1
   817 ;;      Params:         0       0       0
   818 ;;      Locals:         0       0       0
   819 ;;      Temps:          0       0       0
   820 ;;      Totals:         0       0       0
   821 ;;Total ram usage:        0 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    6
   824 ;; This function calls:
   825 ;;		_EEPROM_ReadWord
   826 ;;		_IAPRead
   827 ;; This function is called by:
   828 ;;		_main
   829 ;; This function uses a non-reentrant model
   830 ;;
   831  04F4                     _EEPROM_Read:	
   832                           
   833                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   834  04F4  302D               	movlw	_CH1_remotekey& (0+255)
   835                           
   836                           ;1.C: 574: EEPROM_ReadWord(&CH1_remotekey[0],0x00);
   837  04F5  01AD               	clrf	?_EEPROM_ReadWord^(0+128)
   838  04F6  24A5               	fcall	_EEPROM_ReadWord
   839                           
   840                           ;1.C: 575: EEPROM_ReadWord(&CH2_remotekey[0],0x04);
   841  04F7  3004               	movlw	4
   842  04F8  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   843  04F9  303D               	movlw	_CH2_remotekey& (0+255)
   844  04FA  24A5               	fcall	_EEPROM_ReadWord
   845                           
   846                           ;1.C: 576: EEPROM_ReadWord(&CH3_remotekey[0],0x08);
   847  04FB  3008               	movlw	8
   848  04FC  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   849  04FD  304D               	movlw	_CH3_remotekey& (0+255)
   850  04FE  24A5               	fcall	_EEPROM_ReadWord
   851                           
   852                           ;1.C: 577: EEPROM_ReadWord(&CH1_remotekey[1],0x0C);
   853  04FF  300C               	movlw	12
   854  0500  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   855  0501  3031               	movlw	(_CH1_remotekey+4)& (0+255)
   856  0502  24A5               	fcall	_EEPROM_ReadWord
   857                           
   858                           ;1.C: 578: EEPROM_ReadWord(&CH2_remotekey[1],0x10);
   859  0503  3010               	movlw	16
   860  0504  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   861  0505  3041               	movlw	(_CH2_remotekey+4)& (0+255)
   862  0506  24A5               	fcall	_EEPROM_ReadWord
   863                           
   864                           ;1.C: 579: EEPROM_ReadWord(&CH3_remotekey[1],0x14);
   865  0507  3014               	movlw	20
   866  0508  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   867  0509  3051               	movlw	(_CH3_remotekey+4)& (0+255)
   868  050A  24A5               	fcall	_EEPROM_ReadWord
   869                           
   870                           ;1.C: 580: EEPROM_ReadWord(&CH1_remotekey[2],0x18);
   871  050B  3018               	movlw	24
   872  050C  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   873  050D  3035               	movlw	(_CH1_remotekey+8)& (0+255)
   874  050E  24A5               	fcall	_EEPROM_ReadWord
   875                           
   876                           ;1.C: 581: EEPROM_ReadWord(&CH2_remotekey[2],0x1C);
   877  050F  301C               	movlw	28
   878  0510  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   879  0511  3045               	movlw	(_CH2_remotekey+8)& (0+255)
   880  0512  24A5               	fcall	_EEPROM_ReadWord
   881                           
   882                           ;1.C: 582: EEPROM_ReadWord(&CH3_remotekey[2],0x20);
   883  0513  3020               	movlw	32
   884  0514  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   885  0515  3055               	movlw	(_CH3_remotekey+8)& (0+255)
   886  0516  24A5               	fcall	_EEPROM_ReadWord
   887                           
   888                           ;1.C: 583: EEPROM_ReadWord(&CH1_remotekey[3],0x24);
   889  0517  3024               	movlw	36
   890  0518  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   891  0519  3039               	movlw	(_CH1_remotekey+12)& (0+255)
   892  051A  24A5               	fcall	_EEPROM_ReadWord
   893                           
   894                           ;1.C: 584: EEPROM_ReadWord(&CH2_remotekey[3],0x28);
   895  051B  3028               	movlw	40
   896  051C  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   897  051D  3049               	movlw	(_CH2_remotekey+12)& (0+255)
   898  051E  24A5               	fcall	_EEPROM_ReadWord
   899                           
   900                           ;1.C: 585: EEPROM_ReadWord(&CH3_remotekey[3],0x2C);
   901  051F  302C               	movlw	44
   902  0520  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   903  0521  3059               	movlw	(_CH3_remotekey+12)& (0+255)
   904  0522  24A5               	fcall	_EEPROM_ReadWord
   905                           
   906                           ;1.C: 586: CH1_remotekey_Latest = CH1_remotekey_num = IAPRead(0x30);
   907  0523  3030               	movlw	48
   908  0524  268B               	fcall	_IAPRead
   909  0525  1283               	bcf	3,5	;RP0=0, select bank0
   910  0526  00E7               	movwf	_CH1_remotekey_num
   911  0527  1683               	bsf	3,5	;RP0=1, select bank1
   912  0528  00B3               	movwf	_CH1_remotekey_Latest^(0+128)
   913                           
   914                           ;1.C: 587: CH2_remotekey_Latest = CH2_remotekey_num = IAPRead(0x31);
   915  0529  3031               	movlw	49
   916  052A  268B               	fcall	_IAPRead
   917  052B  1283               	bcf	3,5	;RP0=0, select bank0
   918  052C  00E8               	movwf	_CH2_remotekey_num
   919  052D  1683               	bsf	3,5	;RP0=1, select bank1
   920  052E  00B4               	movwf	_CH2_remotekey_Latest^(0+128)
   921                           
   922                           ;1.C: 588: CH3_remotekey_Latest = CH3_remotekey_num = IAPRead(0x32);
   923  052F  3032               	movlw	50
   924  0530  268B               	fcall	_IAPRead
   925  0531  1283               	bcf	3,5	;RP0=0, select bank0
   926  0532  00E9               	movwf	_CH3_remotekey_num
   927  0533  1683               	bsf	3,5	;RP0=1, select bank1
   928  0534  00B5               	movwf	_CH3_remotekey_Latest^(0+128)
   929  0535  0008               	return
   930  0536                     __end_of_EEPROM_Read:	
   931                           
   932                           	psect	text681
   933  04A5                     __ptext681:	
   934 ;; =============== function _EEPROM_Read ends ============
   935                           
   936                           
   937 ;; *************** function _EEPROM_ReadWord *****************
   938 ;; Defined at:
   939 ;;		line 562 in file "1.C"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  buff            1    wreg     PTR unsigned long 
   942 ;;		 -> CH3_remotekey(16), CH2_remotekey(16), CH1_remotekey(16), 
   943 ;;  data            1    2[BANK1 ] unsigned char 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  buff            1    7[BANK1 ] PTR unsigned long 
   946 ;;		 -> CH3_remotekey(16), CH2_remotekey(16), CH1_remotekey(16), 
   947 ;; Return value:  Size  Location     Type
   948 ;;		None               void
   949 ;; Registers used:
   950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 17F/20
   953 ;;		On exit  : 17F/20
   954 ;;		Unchanged: FFE80/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1
   956 ;;      Params:         0       0       1
   957 ;;      Locals:         0       0       1
   958 ;;      Temps:          0       0       4
   959 ;;      Totals:         0       0       6
   960 ;;Total ram usage:        6 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; Hardware stack levels required when called:    5
   963 ;; This function calls:
   964 ;;		_IAPRead
   965 ;; This function is called by:
   966 ;;		_EEPROM_Read
   967 ;; This function uses a non-reentrant model
   968 ;;
   969  04A5                     _EEPROM_ReadWord:	
   970                           
   971                           ; Regs used in _EEPROM_ReadWord: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   972                           ;EEPROM_ReadWord@buff stored from wreg
   973  04A5  00B2               	movwf	EEPROM_ReadWord@buff^(0+128)
   974                           
   975                           ;1.C: 563: *buff = 0;
   976  04A6  0084               	movwf	4
   977  04A7  0180               	clrf	0
   978  04A8  0A84               	incf	4,f
   979  04A9  0180               	clrf	0
   980  04AA  0A84               	incf	4,f
   981  04AB  0180               	clrf	0
   982  04AC  0A84               	incf	4,f
   983  04AD  0180               	clrf	0
   984                           
   985                           ;1.C: 564: EE_Buff = IAPRead(data+2);
   986  04AE  082D               	movf	EEPROM_ReadWord@data^(0+128),w
   987  04AF  3E02               	addlw	2
   988  04B0  268B               	fcall	_IAPRead
   989                           
   990                           ;1.C: 565: *buff |= EE_Buff;
   991  04B1  24E5               	fcall	PL5	;call to abstracted procedure
   992                           
   993                           ;1.C: 566: *buff = *buff<<8;
   994  04B2  24BF               	fcall	PL4	;call to abstracted procedure
   995                           
   996                           ;1.C: 567: EE_Buff = IAPRead(data+1);
   997  04B3  0A2D               	incf	EEPROM_ReadWord@data^(0+128),w
   998  04B4  268B               	fcall	_IAPRead
   999                           
  1000                           ;1.C: 568: *buff |= EE_Buff;
  1001  04B5  24E5               	fcall	PL5	;call to abstracted procedure
  1002                           
  1003                           ;1.C: 569: *buff = *buff<<8;
  1004  04B6  24BF               	fcall	PL4	;call to abstracted procedure
  1005                           
  1006                           ;1.C: 570: EE_Buff = IAPRead(data);
  1007  04B7  082D               	movf	EEPROM_ReadWord@data^(0+128),w
  1008  04B8  268B               	fcall	_IAPRead
  1009                           
  1010                           ;1.C: 571: *buff |= EE_Buff;
  1011  04B9  24E5               	fcall	PL5	;call to abstracted procedure
  1012  04BA  0480               	iorwf	0,f
  1013  04BB  0A84               	incf	4,f
  1014  04BC  0831               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1015  04BD  0480               	iorwf	0,f
  1016  04BE  0008               	return
  1017  04BF                     __end_of_EEPROM_ReadWord:	
  1018  04BF                     PL4:	
  1019  04BF  0480               	iorwf	0,f
  1020  04C0  0A84               	incf	4,f
  1021  04C1  0831               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1022  04C2  0480               	iorwf	0,f
  1023  04C3  0832               	movf	EEPROM_ReadWord@buff^(0+128),w
  1024  04C4  0084               	movwf	4
  1025  04C5  0800               	movf	0,w
  1026  04C6  00AE               	movwf	??_EEPROM_ReadWord^(0+128)
  1027  04C7  0A84               	incf	4,f
  1028  04C8  0800               	movf	0,w
  1029  04C9  00AF               	movwf	(??_EEPROM_ReadWord^(0+128)+1)
  1030  04CA  0A84               	incf	4,f
  1031  04CB  0800               	movf	0,w
  1032  04CC  00B0               	movwf	(??_EEPROM_ReadWord^(0+128)+2)
  1033  04CD  0A84               	incf	4,f
  1034  04CE  0800               	movf	0,w
  1035  04CF  00B1               	movwf	(??_EEPROM_ReadWord^(0+128)+3)
  1036  04D0  0830               	movf	(??_EEPROM_ReadWord^(0+128)+2),w
  1037  04D1  00B1               	movwf	(??_EEPROM_ReadWord^(0+128)+3)
  1038  04D2  082F               	movf	(??_EEPROM_ReadWord^(0+128)+1),w
  1039  04D3  00B0               	movwf	(??_EEPROM_ReadWord^(0+128)+2)
  1040  04D4  082E               	movf	??_EEPROM_ReadWord^(0+128),w
  1041  04D5  00AF               	movwf	(??_EEPROM_ReadWord^(0+128)+1)
  1042  04D6  01AE               	clrf	??_EEPROM_ReadWord^(0+128)
  1043  04D7  0832               	movf	EEPROM_ReadWord@buff^(0+128),w
  1044  04D8  0084               	movwf	4
  1045  04D9  082E               	movf	??_EEPROM_ReadWord^(0+128),w
  1046  04DA  0080               	movwf	0
  1047  04DB  0A84               	incf	4,f
  1048  04DC  082F               	movf	(??_EEPROM_ReadWord+1)^(0+128),w
  1049  04DD  0080               	movwf	0
  1050  04DE  0A84               	incf	4,f
  1051  04DF  0830               	movf	(??_EEPROM_ReadWord+2)^(0+128),w
  1052  04E0  0080               	movwf	0
  1053  04E1  0A84               	incf	4,f
  1054  04E2  0831               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1055  04E3  0080               	movwf	0
  1056  04E4  0008               	return
  1057  04E5                     PL5:	
  1058  04E5  00B6               	movwf	_EE_Buff^(0+128)
  1059  04E6  00AE               	movwf	??_EEPROM_ReadWord^(0+128)
  1060  04E7  01AF               	clrf	(??_EEPROM_ReadWord^(0+128)+1)
  1061  04E8  01B0               	clrf	(??_EEPROM_ReadWord^(0+128)+2)
  1062  04E9  01B1               	clrf	(??_EEPROM_ReadWord^(0+128)+3)
  1063  04EA  0832               	movf	EEPROM_ReadWord@buff^(0+128),w
  1064  04EB  0084               	movwf	4
  1065  04EC  082E               	movf	??_EEPROM_ReadWord^(0+128),w
  1066  04ED  0480               	iorwf	0,f
  1067  04EE  0A84               	incf	4,f
  1068  04EF  082F               	movf	(??_EEPROM_ReadWord+1)^(0+128),w
  1069  04F0  0480               	iorwf	0,f
  1070  04F1  0A84               	incf	4,f
  1071  04F2  0830               	movf	(??_EEPROM_ReadWord+2)^(0+128),w
  1072  04F3  0008               	return
  1073                           
  1074                           	psect	text682
  1075  0684                     __ptext682:	
  1076 ;; =============== function _EEPROM_ReadWord ends ============
  1077                           
  1078                           
  1079 ;; *************** function _INT_INITIAL *****************
  1080 ;; Defined at:
  1081 ;;		line 409 in file "1.C"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;		None               void
  1088 ;; Registers used:
  1089 ;;		status,2, status,0, pclath, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 17F/0
  1092 ;;		On exit  : 17F/20
  1093 ;;		Unchanged: FFE80/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1
  1095 ;;      Params:         0       0       0
  1096 ;;      Locals:         0       0       0
  1097 ;;      Temps:          0       0       0
  1098 ;;      Totals:         0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    5
  1102 ;; This function calls:
  1103 ;;		_EX_INT_FallingEdge
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108  0684                     _INT_INITIAL:	
  1109                           
  1110                           ;1.C: 410: TRISA2 =1;
  1111                           
  1112                           ; Regs used in _INT_INITIAL: [status,2+status,0+pclath+cstack]
  1113  0684  1683               	bsf	3,5	;RP0=1, select bank1
  1114  0685  1505               	bsf	5,2
  1115                           
  1116                           ;1.C: 411: IOCA2 =0;
  1117  0686  1116               	bcf	22,2
  1118                           
  1119                           ;1.C: 412: EX_INT_FallingEdge();
  1120  0687  2696               	fcall	_EX_INT_FallingEdge
  1121                           
  1122                           ;1.C: 413: INTF =0;
  1123  0688  108B               	bcf	11,1
  1124                           
  1125                           ;1.C: 415: INTE =0;
  1126  0689  120B               	bcf	11,4
  1127  068A  0008               	return
  1128  068B                     __end_of_INT_INITIAL:	
  1129                           
  1130                           	psect	text683
  1131  068B                     __ptext683:	
  1132 ;; =============== function _INT_INITIAL ends ============
  1133                           
  1134                           
  1135 ;; *************** function _IAPRead *****************
  1136 ;; Defined at:
  1137 ;;		line 487 in file "1.C"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  EEAddr          1    wreg     unsigned char 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  EEAddr          1    0[BANK1 ] unsigned char 
  1142 ;;  ReEEPROMread    1    1[BANK1 ] unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      unsigned char 
  1145 ;; Registers used:
  1146 ;;		wreg
  1147 ;; Tracked objects:
  1148 ;;		On entry : 17F/20
  1149 ;;		On exit  : 17F/20
  1150 ;;		Unchanged: FFE80/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1
  1152 ;;      Params:         0       0       0
  1153 ;;      Locals:         0       0       2
  1154 ;;      Temps:          0       0       0
  1155 ;;      Totals:         0       0       2
  1156 ;;Total ram usage:        2 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    4
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_EEPROM_ReadWord
  1163 ;;		_EEPROM_Read
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166  068B                     _IAPRead:	
  1167                           
  1168                           ; Regs used in _IAPRead: [wreg]
  1169                           ;IAPRead@EEAddr stored from wreg
  1170  068B  00AB               	movwf	IAPRead@EEAddr^(0+128)
  1171                           
  1172                           ;1.C: 488: unsigned char ReEEPROMread;
  1173                           ;1.C: 489: EEADR = EEAddr;
  1174  068C  009B               	movwf	27	;volatile
  1175                           
  1176                           ;1.C: 490: RD = 1;
  1177  068D  141C               	bsf	28,0
  1178                           
  1179                           ;1.C: 491: ReEEPROMread = EEDAT;
  1180  068E  081A               	movf	26,w	;volatile
  1181  068F  00AC               	movwf	IAPRead@ReEEPROMread^(0+128)
  1182                           
  1183                           ;1.C: 492: return ReEEPROMread;
  1184  0690  0008               	return
  1185  0691                     __end_of_IAPRead:	
  1186                           
  1187                           	psect	text684
  1188  064F                     __ptext684:	
  1189 ;; =============== function _IAPRead ends ============
  1190                           
  1191                           
  1192 ;; *************** function _TIMER2_INITIAL *****************
  1193 ;; Defined at:
  1194 ;;		line 463 in file "1.C"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;		None
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;		None               void
  1201 ;; Registers used:
  1202 ;;		wreg, status,2
  1203 ;; Tracked objects:
  1204 ;;		On entry : 17F/0
  1205 ;;		On exit  : 17F/0
  1206 ;;		Unchanged: FFE80/0
  1207 ;; Data sizes:     COMMON   BANK0   BANK1
  1208 ;;      Params:         0       0       0
  1209 ;;      Locals:         0       0       0
  1210 ;;      Temps:          0       0       0
  1211 ;;      Totals:         0       0       0
  1212 ;;Total ram usage:        0 bytes
  1213 ;; Hardware stack levels used:    1
  1214 ;; Hardware stack levels required when called:    4
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221  064F                     _TIMER2_INITIAL:	
  1222                           
  1223                           ;1.C: 464: T2CON0 = 0B00000001;
  1224                           
  1225                           ; Regs used in _TIMER2_INITIAL: [wreg+status,2]
  1226  064F  3001               	movlw	1
  1227  0650  0092               	movwf	18	;volatile
  1228                           
  1229                           ;1.C: 470: T2CON1 = 0B00000000;
  1230  0651  1683               	bsf	3,5	;RP0=1, select bank1
  1231  0652  019E               	clrf	30	;volatile
  1232                           
  1233                           ;1.C: 475: TMR2H = (53)/256;
  1234  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1235  0654  0193               	clrf	19	;volatile
  1236                           
  1237                           ;1.C: 476: TMR2L = (53)%256;
  1238  0655  3035               	movlw	53
  1239  0656  0091               	movwf	17	;volatile
  1240                           
  1241                           ;1.C: 479: PR2H = (53)/256;
  1242  0657  1683               	bsf	3,5	;RP0=1, select bank1
  1243  0658  0192               	clrf	18	;volatile
  1244                           
  1245                           ;1.C: 480: PR2L = (53)%256;
  1246  0659  0091               	movwf	17	;volatile
  1247                           
  1248                           ;1.C: 482: TMR2IF = 0;
  1249  065A  1283               	bcf	3,5	;RP0=0, select bank0
  1250  065B  108C               	bcf	12,1
  1251                           
  1252                           ;1.C: 483: TMR2IE = 1;
  1253  065C  1683               	bsf	3,5	;RP0=1, select bank1
  1254  065D  148C               	bsf	12,1
  1255                           
  1256                           ;1.C: 485: TMR2ON =0;
  1257  065E  1283               	bcf	3,5	;RP0=0, select bank0
  1258  065F  1112               	bcf	18,2
  1259  0660  0008               	return
  1260  0661                     __end_of_TIMER2_INITIAL:	
  1261                           
  1262                           	psect	text685
  1263  0670                     __ptext685:	
  1264 ;; =============== function _TIMER2_INITIAL ends ============
  1265                           
  1266                           
  1267 ;; *************** function _TIMER0_INITIAL *****************
  1268 ;; Defined at:
  1269 ;;		line 453 in file "1.C"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;		None
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;		None
  1274 ;; Return value:  Size  Location     Type
  1275 ;;		None               void
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 17F/20
  1280 ;;		On exit  : 17F/0
  1281 ;;		Unchanged: FFE80/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1
  1283 ;;      Params:         0       0       0
  1284 ;;      Locals:         0       0       0
  1285 ;;      Temps:          0       0       0
  1286 ;;      Totals:         0       0       0
  1287 ;;Total ram usage:        0 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    4
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296  0670                     _TIMER0_INITIAL:	
  1297  0670  30F8               	movlw	248
  1298                           
  1299                           ;1.C: 454: T0CS = 0;
  1300                           
  1301                           ; Regs used in _TIMER0_INITIAL: [wreg+status,2+status,0]
  1302  0671  1281               	bcf	1,5
  1303                           
  1304                           ;1.C: 455: PSA = 0;
  1305  0672  1181               	bcf	1,3
  1306                           
  1307                           ;1.C: 456: OPTION &= 0xF8;
  1308  0673  0581               	andwf	1,f	;volatile
  1309                           
  1310                           ;1.C: 457: OPTION |= 0x06;
  1311  0674  3006               	movlw	6
  1312  0675  0481               	iorwf	1,f	;volatile
  1313                           
  1314                           ;1.C: 459: TMR0 = 5;
  1315  0676  3005               	movlw	5
  1316  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0678  0081               	movwf	1	;volatile
  1318                           
  1319                           ;1.C: 460: T0IE = 1;
  1320  0679  168B               	bsf	11,5
  1321                           
  1322                           ;1.C: 461: T0IF = 0;
  1323  067A  110B               	bcf	11,2
  1324  067B  0008               	return
  1325  067C                     __end_of_TIMER0_INITIAL:	
  1326                           
  1327                           	psect	text686
  1328  0691                     __ptext686:	
  1329 ;; =============== function _TIMER0_INITIAL ends ============
  1330                           
  1331                           
  1332 ;; *************** function _WDT_INITIAL *****************
  1333 ;; Defined at:
  1334 ;;		line 448 in file "1.C"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;		None               void
  1341 ;; Registers used:
  1342 ;;		wreg
  1343 ;; Tracked objects:
  1344 ;;		On entry : 17F/20
  1345 ;;		On exit  : 20/0
  1346 ;;		Unchanged: FFE00/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1
  1348 ;;      Params:         0       0       0
  1349 ;;      Locals:         0       0       0
  1350 ;;      Temps:          0       0       0
  1351 ;;      Totals:         0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    4
  1355 ;; This function calls:
  1356 ;;		Nothing
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361  0691                     _WDT_INITIAL:	
  1362                           
  1363                           ; Regs used in _WDT_INITIAL: [wreg]
  1364  0691  0064               	clrwdt	;#
  1365                           
  1366                           ;1.C: 450: WDTCON = 0B00010110;
  1367  0692  3016               	movlw	22
  1368  0693  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0694  0098               	movwf	24	;volatile
  1370  0695  0008               	return
  1371  0696                     __end_of_WDT_INITIAL:	
  1372                           
  1373                           	psect	text687
  1374  05F6                     __ptext687:	
  1375 ;; =============== function _WDT_INITIAL ends ============
  1376                           
  1377                           
  1378 ;; *************** function _OSC_INIT *****************
  1379 ;; Defined at:
  1380 ;;		line 425 in file "1.C"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;		None               void
  1387 ;; Registers used:
  1388 ;;		wreg, status,2
  1389 ;; Tracked objects:
  1390 ;;		On entry : 17F/0
  1391 ;;		On exit  : 17F/20
  1392 ;;		Unchanged: FFE80/0
  1393 ;; Data sizes:     COMMON   BANK0   BANK1
  1394 ;;      Params:         0       0       0
  1395 ;;      Locals:         0       0       0
  1396 ;;      Temps:          0       0       0
  1397 ;;      Totals:         0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used:    1
  1400 ;; Hardware stack levels required when called:    4
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407  05F6                     _OSC_INIT:	
  1408                           
  1409                           ;1.C: 426: OSCCON = 0B01100001;
  1410                           
  1411                           ; Regs used in _OSC_INIT: [wreg+status,2]
  1412  05F6  3061               	movlw	97
  1413  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  1414  05F8  008F               	movwf	15	;volatile
  1415                           
  1416                           ;1.C: 431: INTCON = 0;
  1417  05F9  018B               	clrf	11	;volatile
  1418                           
  1419                           ;1.C: 433: PORTA = 0B00000000;
  1420  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1421  05FB  0185               	clrf	5	;volatile
  1422                           
  1423                           ;1.C: 434: TRISA = 0B00010111;
  1424  05FC  3017               	movlw	23
  1425  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  1426  05FE  0085               	movwf	5	;volatile
  1427                           
  1428                           ;1.C: 435: WPUA = 0B00000000;
  1429  05FF  0195               	clrf	21	;volatile
  1430                           
  1431                           ;1.C: 436: PSRCA = 0B11111111;
  1432  0600  30FF               	movlw	255
  1433  0601  0088               	movwf	8	;volatile
  1434                           
  1435                           ;1.C: 437: PSINKA = 0B11111111;
  1436  0602  0097               	movwf	23	;volatile
  1437                           
  1438                           ;1.C: 439: PORTC = 0B00000000;
  1439  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0604  0187               	clrf	7	;volatile
  1441                           
  1442                           ;1.C: 440: TRISC = 0B11110000;
  1443  0605  30F0               	movlw	240
  1444  0606  1683               	bsf	3,5	;RP0=1, select bank1
  1445  0607  0087               	movwf	7	;volatile
  1446                           
  1447                           ;1.C: 441: WPUC = 0B00000000;
  1448  0608  0193               	clrf	19	;volatile
  1449                           
  1450                           ;1.C: 442: PSRCC = 0B11111111;
  1451  0609  30FF               	movlw	255
  1452  060A  0094               	movwf	20	;volatile
  1453                           
  1454                           ;1.C: 443: PSINKC = 0B11111111;
  1455  060B  009F               	movwf	31	;volatile
  1456                           
  1457                           ;1.C: 445: OPTION = 0B00001000;
  1458  060C  3008               	movlw	8
  1459  060D  0081               	movwf	1	;volatile
  1460  060E  0008               	return
  1461  060F                     __end_of_OSC_INIT:	
  1462                           
  1463                           	psect	text688
  1464  0696                     __ptext688:	
  1465 ;; =============== function _OSC_INIT ends ============
  1466                           
  1467                           
  1468 ;; *************** function _EX_INT_FallingEdge *****************
  1469 ;; Defined at:
  1470 ;;		line 421 in file "1.C"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;		None               void
  1477 ;; Registers used:
  1478 ;;		None
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 20/20
  1482 ;;		Unchanged: FFFDF/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1
  1484 ;;      Params:         0       0       0
  1485 ;;      Locals:         0       0       0
  1486 ;;      Temps:          0       0       0
  1487 ;;      Totals:         0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used:    1
  1490 ;; Hardware stack levels required when called:    4
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_INT_INITIAL
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498  0696                     _EX_INT_FallingEdge:	
  1499                           
  1500                           ;1.C: 422: INTEDG =0;
  1501                           
  1502                           ; Regs used in _EX_INT_FallingEdge: []
  1503  0696  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0697  1301               	bcf	1,6
  1505                           
  1506                           ;1.C: 423: FLAGs &= ~0x01;
  1507  0698  1074               	bcf	_FLAGs,0
  1508  0699  0008               	return
  1509  069A                     __end_of_EX_INT_FallingEdge:	
  1510                           
  1511                           	psect	text689
  1512  0010                     __ptext689:	
  1513 ;; =============== function _EX_INT_FallingEdge ends ============
  1514                           
  1515                           
  1516 ;; *************** function _ISR *****************
  1517 ;; Defined at:
  1518 ;;		line 138 in file "1.C"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;		None               void
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 20/0
  1530 ;;		Unchanged: FFEDF/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1
  1532 ;;      Params:         0       0       0
  1533 ;;      Locals:         0       0       0
  1534 ;;      Temps:          0      10       0
  1535 ;;      Totals:         0      10       0
  1536 ;;Total ram usage:       10 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    3
  1539 ;; This function calls:
  1540 ;;		_EX_INT_RisingEdge
  1541 ;;		i1_EX_INT_FallingEdge
  1542 ;;		___wmul
  1543 ;;		_led1_debug
  1544 ;;		_KEYSCAN
  1545 ;;		_KEY
  1546 ;; This function is called by:
  1547 ;;		Interrupt level 1
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550  0010                     _ISR:	
  1551                           
  1552                           ;1.C: 140: if(INTE && INTF){
  1553  0010  1A0B               	btfsc	11,4
  1554  0011  1C8B               	btfss	11,1
  1555  0012  2962               	goto	i1l3021
  1556                           
  1557                           ;1.C: 141: INTF = 0;
  1558  0013  108B               	bcf	11,1
  1559                           
  1560                           ;1.C: 142: INTE = 0;
  1561  0014  120B               	bcf	11,4
  1562                           
  1563                           ;1.C: 143: TMR2ON =0;
  1564  0015  1112               	bcf	18,2
  1565                           
  1566                           ;1.C: 144: if((FLAGs&0x01) == 0){
  1567  0016  1874               	btfsc	_FLAGs,0
  1568  0017  281D               	goto	i1l860
  1569                           
  1570                           ;1.C: 145: Indata = 0;
  1571  0018  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0019  01A8               	clrf	_Indata^(0+128)
  1573  001A  01A9               	clrf	(_Indata+1)^(0+128)
  1574                           
  1575                           ;1.C: 146: EX_INT_RisingEdge();
  1576  001B  26A5               	fcall	_EX_INT_RisingEdge
  1577                           
  1578                           ;1.C: 147: }else if((FLAGs&0x01) == 0x01){
  1579  001C  295F               	goto	i1l3017
  1580  001D                     i1l860:	
  1581  001D  1C74               	btfss	_FLAGs,0
  1582  001E  295F               	goto	i1l3017
  1583                           
  1584                           ;1.C: 148: EX_INT_FallingEdge();
  1585  001F  269E               	fcall	i1_EX_INT_FallingEdge
  1586                           
  1587                           ;1.C: 149: buff = Indata*53;
  1588  0020  0829               	movf	(_Indata+1)^(0+128),w
  1589  0021  00F7               	movwf	?___wmul+1
  1590  0022  0828               	movf	_Indata^(0+128),w
  1591  0023  00F6               	movwf	?___wmul
  1592  0024  3035               	movlw	53
  1593  0025  00F8               	movwf	?___wmul+2
  1594  0026  01F9               	clrf	?___wmul+3
  1595  0027  260F               	fcall	___wmul
  1596  0028  0877               	movf	?___wmul+1,w
  1597  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1598  002A  00A1               	movwf	_buff+1
  1599  002B  0876               	movf	?___wmul,w
  1600  002C  00A0               	movwf	_buff
  1601                           
  1602                           ;1.C: 150: Indata = 0;
  1603  002D  1683               	bsf	3,5	;RP0=1, select bank1
  1604  002E  01A8               	clrf	_Indata^(0+128)
  1605  002F  01A9               	clrf	(_Indata+1)^(0+128)
  1606                           
  1607                           ;1.C: 152: if( ((FLAGs&0x10) == 0) &&
  1608                           ;1.C: 153: ((FLAGs&0x20) == 0) &&
  1609                           ;1.C: 154: ((FLAGs&0x40) == 0)
  1610                           ;1.C: 155: ){
  1611  0030  1E74               	btfss	_FLAGs,4
  1612  0031  1AF4               	btfsc	_FLAGs,5
  1613  0032  295F               	goto	i1l3017
  1614  0033  1B74               	btfsc	_FLAGs,6
  1615  0034  295F               	goto	i1l3017
  1616                           
  1617                           ;1.C: 156: if((FLAGs&0x08) == 0x08){
  1618  0035  1DF4               	btfss	_FLAGs,3
  1619  0036  294B               	goto	i1l2997
  1620                           
  1621                           ;1.C: 157: if(num < 24){
  1622  0037  3018               	movlw	24
  1623  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0039  022A               	subwf	_num,w
  1625  003A  1803               	skipnc
  1626  003B  2860               	goto	i1l2915
  1627                           
  1628                           ;1.C: 158: if((buff>200)&&(buff<600)){
  1629  003C  3000               	movlw	0
  1630  003D  0221               	subwf	_buff+1,w
  1631  003E  30C9               	movlw	201
  1632  003F  1903               	skipnz
  1633  0040  0220               	subwf	_buff,w
  1634  0041  3002               	movlw	2
  1635  0042  1C03               	skipc
  1636  0043  284E               	goto	L1
  1637  0044  0221               	subwf	_buff+1,w
  1638  0045  3058               	movlw	88
  1639  0046  1903               	skipnz
  1640  0047  0220               	subwf	_buff,w
  1641  0048  1803               	skipnc
  1642  0049  284D               	goto	i1l2909
  1643                           
  1644                           ;1.C: 159: remotekey = remotekey<<1;
  1645  004A  1003               	clrc
  1646  004B  225D               	fcall	PL12	;call to abstracted procedure
  1647                           
  1648                           ;1.C: 160: remotekey |= 0x00000001;
  1649  004C  1424               	bsf	_remotekey^(0+128),0
  1650  004D                     i1l2909:	
  1651                           
  1652                           ;1.C: 161: }
  1653                           ;1.C: 162: if((buff>700)&&(buff<1800)){
  1654  004D  3002               	movlw	2
  1655  004E                     L1:	
  1656  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1657  004F  0221               	subwf	_buff+1,w
  1658  0050  30BD               	movlw	189
  1659  0051  1903               	skipnz
  1660  0052  0220               	subwf	_buff,w
  1661  0053  1C03               	skipc
  1662  0054  285E               	goto	i1l867
  1663  0055  3007               	movlw	7
  1664  0056  0221               	subwf	_buff+1,w
  1665  0057  3008               	movlw	8
  1666  0058  1903               	skipnz
  1667  0059  0220               	subwf	_buff,w
  1668  005A  1803               	skipnc
  1669  005B  285E               	goto	i1l867
  1670                           
  1671                           ;1.C: 163: remotekey = remotekey<<1;
  1672  005C  1003               	clrc
  1673  005D  225D               	fcall	PL12	;call to abstracted procedure
  1674  005E                     i1l867:	
  1675                           
  1676                           ;1.C: 164: }
  1677                           ;1.C: 165: num++;
  1678  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1679  005F  0AAA               	incf	_num,f
  1680  0060                     i1l2915:	
  1681                           
  1682                           ;1.C: 166: }
  1683                           ;1.C: 168: if(num >= 24){
  1684  0060  3018               	movlw	24
  1685  0061  022A               	subwf	_num,w
  1686  0062  1C03               	skipc
  1687  0063  294B               	goto	i1l2997
  1688                           
  1689                           ;1.C: 170: if(remotekey>0){
  1690  0064  1683               	bsf	3,5	;RP0=1, select bank1
  1691  0065  0827               	movf	(_remotekey+3)^(0+128),w
  1692  0066  0426               	iorwf	(_remotekey+2)^(0+128),w
  1693  0067  0425               	iorwf	(_remotekey+1)^(0+128),w
  1694  0068  0424               	iorwf	_remotekey^(0+128),w
  1695  0069  1903               	skipnz
  1696  006A  288B               	goto	i1l869
  1697                           
  1698                           ;1.C: 171: if(Match_remotekey == remotekey){
  1699  006B  0827               	movf	(_remotekey+3)^(0+128),w
  1700  006C  0673               	xorwf	_Match_remotekey+3,w
  1701  006D  1D03               	skipz
  1702  006E  2879               	goto	u146_25
  1703  006F  0826               	movf	(_remotekey+2)^(0+128),w
  1704  0070  0672               	xorwf	_Match_remotekey+2,w
  1705  0071  1D03               	skipz
  1706  0072  2879               	goto	u146_25
  1707  0073  0825               	movf	(_remotekey+1)^(0+128),w
  1708  0074  0671               	xorwf	_Match_remotekey+1,w
  1709  0075  1D03               	skipz
  1710  0076  2879               	goto	u146_25
  1711  0077  0824               	movf	_remotekey^(0+128),w
  1712  0078  0670               	xorwf	_Match_remotekey,w
  1713  0079                     u146_25:	
  1714                           
  1715                           ;1.C: 172: remotekey_Receive_num++;
  1716  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1717  007A  1D03               	skipz
  1718  007B  287F               	goto	L2
  1719  007C  0AAB               	incf	_remotekey_Receive_num,f
  1720                           
  1721                           ;1.C: 173: match_slice = 0;
  1722  007D  01A8               	clrf	_match_slice
  1723                           
  1724                           ;1.C: 174: }
  1725                           ;1.C: 175: if(remotekey_Receive_num == 0) Match_remotekey = remotekey;
  1726  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1727  007F                     L2:	
  1728  007F  08AB               	movf	_remotekey_Receive_num,f
  1729  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1730  0081  1D03               	skipz
  1731  0082  288C               	goto	L3
  1732  0083  0827               	movf	(_remotekey+3)^(0+128),w
  1733  0084  00F3               	movwf	_Match_remotekey+3
  1734  0085  0826               	movf	(_remotekey+2)^(0+128),w
  1735  0086  00F2               	movwf	_Match_remotekey+2
  1736  0087  0825               	movf	(_remotekey+1)^(0+128),w
  1737  0088  00F1               	movwf	_Match_remotekey+1
  1738  0089  0824               	movf	_remotekey^(0+128),w
  1739  008A  00F0               	movwf	_Match_remotekey
  1740  008B                     i1l869:	
  1741                           
  1742                           ;1.C: 176: }
  1743                           ;1.C: 178: Ctrl_remotekey = remotekey;
  1744  008B  1683               	bsf	3,5	;RP0=1, select bank1
  1745  008C                     L3:	
  1746  008C  0827               	movf	(_remotekey+3)^(0+128),w
  1747  008D  00A3               	movwf	(_Ctrl_remotekey+3)^(0+128)
  1748  008E  0826               	movf	(_remotekey+2)^(0+128),w
  1749  008F  00A2               	movwf	(_Ctrl_remotekey+2)^(0+128)
  1750  0090  0825               	movf	(_remotekey+1)^(0+128),w
  1751  0091  00A1               	movwf	(_Ctrl_remotekey+1)^(0+128)
  1752  0092  0824               	movf	_remotekey^(0+128),w
  1753  0093  00A0               	movwf	_Ctrl_remotekey^(0+128)
  1754                           
  1755                           ;1.C: 180: if( ((PRESSED&0x10) == 0) &&
  1756                           ;1.C: 181: ((PRESSED&0x20) == 0) &&
  1757                           ;1.C: 182: ((PRESSED&0x40) == 0)
  1758                           ;1.C: 183: ){
  1759  0094  1E75               	btfss	_PRESSED,4
  1760  0095  1AF5               	btfsc	_PRESSED,5
  1761  0096  2941               	goto	i1l872
  1762  0097  1B75               	btfsc	_PRESSED,6
  1763  0098  2941               	goto	i1l872
  1764                           
  1765                           ;1.C: 184: if((FLAGs&0x10) == 0){
  1766  0099  1A74               	btfsc	_FLAGs,4
  1767  009A  28D1               	goto	i1l873
  1768                           
  1769                           ;1.C: 185: for(buff=0;buff<CH1_remotekey_num;buff++){
  1770  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1771  009C  01A0               	clrf	_buff
  1772  009D  01A1               	clrf	_buff+1
  1773  009E                     i1l2953:	
  1774  009E  0867               	movf	_CH1_remotekey_num,w
  1775  009F  00DD               	movwf	??_ISR
  1776  00A0  01DE               	clrf	??_ISR+1
  1777  00A1  085E               	movf	??_ISR+1,w
  1778  00A2  0221               	subwf	_buff+1,w
  1779  00A3  1D03               	skipz
  1780  00A4  28A7               	goto	u153_25
  1781  00A5  085D               	movf	??_ISR,w
  1782  00A6  0220               	subwf	_buff,w
  1783  00A7                     u153_25:	
  1784  00A7  1803               	btfsc	3,0
  1785  00A8  28D1               	goto	i1l873
  1786                           
  1787                           ;1.C: 186: if(Ctrl_remotekey == CH1_remotekey[buff]){
  1788  00A9  0820               	movf	_buff,w
  1789  00AA  223F               	fcall	PL8	;call to abstracted procedure
  1790  00AB  3E2D               	addlw	_CH1_remotekey& (0+255)
  1791  00AC  2223               	fcall	PL2	;call to abstracted procedure
  1792  00AD  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1793  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1794  00AF  0661               	xorwf	??_ISR+4,w
  1795  00B0  1D03               	skipz
  1796  00B1  28C2               	goto	u152_25
  1797  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1798  00B3  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1799  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1800  00B5  0660               	xorwf	??_ISR+3,w
  1801  00B6  1D03               	skipz
  1802  00B7  28C2               	goto	u152_25
  1803  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  1804  00B9  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1805  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1806  00BB  065F               	xorwf	??_ISR+2,w
  1807  00BC  1D03               	skipz
  1808  00BD  28C2               	goto	u152_25
  1809  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1810  00BF  0820               	movf	_Ctrl_remotekey^(0+128),w
  1811  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1812  00C1  065E               	xorwf	??_ISR+1,w
  1813  00C2                     u152_25:	
  1814  00C2  1D03               	skipz
  1815  00C3  28CC               	goto	i1l2951
  1816                           
  1817                           ;1.C: 187: FLAGs |= 0x10;
  1818  00C4  1674               	bsf	_FLAGs,4
  1819                           
  1820                           ;1.C: 188: Key_dealed_counter = 0;
  1821  00C5  01A6               	clrf	_Key_dealed_counter
  1822                           
  1823                           ;1.C: 189: led1_debug();
  1824  00C6  26A2               	fcall	_led1_debug
  1825                           
  1826                           ;1.C: 190: PA7 = ~PA7;
  1827  00C7  3080               	movlw	128
  1828  00C8  0685               	xorwf	5,f
  1829                           
  1830                           ;1.C: 191: CH1_remotekey_Latest = buff;
  1831  00C9  0820               	movf	_buff,w
  1832  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1833  00CB  00B3               	movwf	_CH1_remotekey_Latest^(0+128)
  1834  00CC                     i1l2951:	
  1835  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1836  00CD  0AA0               	incf	_buff,f
  1837  00CE  1903               	skipnz
  1838  00CF  0AA1               	incf	_buff+1,f
  1839  00D0  289E               	goto	i1l2953
  1840  00D1                     i1l873:	
  1841                           
  1842                           ;1.C: 192: }
  1843                           ;1.C: 193: }
  1844                           ;1.C: 194: }
  1845                           ;1.C: 195: if((FLAGs&0x20) == 0){
  1846  00D1  1AF4               	btfsc	_FLAGs,5
  1847  00D2  2909               	goto	i1l878
  1848                           
  1849                           ;1.C: 196: for(buff=0;buff<CH2_remotekey_num;buff++){
  1850  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1851  00D4  01A0               	clrf	_buff
  1852  00D5  01A1               	clrf	_buff+1
  1853  00D6                     i1l2971:	
  1854  00D6  0868               	movf	_CH2_remotekey_num,w
  1855  00D7  00DD               	movwf	??_ISR
  1856  00D8  01DE               	clrf	??_ISR+1
  1857  00D9  085E               	movf	??_ISR+1,w
  1858  00DA  0221               	subwf	_buff+1,w
  1859  00DB  1D03               	skipz
  1860  00DC  28DF               	goto	u156_25
  1861  00DD  085D               	movf	??_ISR,w
  1862  00DE  0220               	subwf	_buff,w
  1863  00DF                     u156_25:	
  1864  00DF  1803               	btfsc	3,0
  1865  00E0  2909               	goto	i1l878
  1866                           
  1867                           ;1.C: 197: if(Ctrl_remotekey == CH2_remotekey[buff]){
  1868  00E1  0820               	movf	_buff,w
  1869  00E2  223F               	fcall	PL8	;call to abstracted procedure
  1870  00E3  3E3D               	addlw	_CH2_remotekey& (0+255)
  1871  00E4  2223               	fcall	PL2	;call to abstracted procedure
  1872  00E5  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1873  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1874  00E7  0661               	xorwf	??_ISR+4,w
  1875  00E8  1D03               	skipz
  1876  00E9  28FA               	goto	u155_25
  1877  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1878  00EB  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1879  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1880  00ED  0660               	xorwf	??_ISR+3,w
  1881  00EE  1D03               	skipz
  1882  00EF  28FA               	goto	u155_25
  1883  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1884  00F1  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1885  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1886  00F3  065F               	xorwf	??_ISR+2,w
  1887  00F4  1D03               	skipz
  1888  00F5  28FA               	goto	u155_25
  1889  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1890  00F7  0820               	movf	_Ctrl_remotekey^(0+128),w
  1891  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1892  00F9  065E               	xorwf	??_ISR+1,w
  1893  00FA                     u155_25:	
  1894  00FA  1D03               	skipz
  1895  00FB  2904               	goto	i1l2969
  1896                           
  1897                           ;1.C: 198: FLAGs |= 0x20;
  1898  00FC  16F4               	bsf	_FLAGs,5
  1899                           
  1900                           ;1.C: 199: Key_dealed_counter = 0;
  1901  00FD  01A6               	clrf	_Key_dealed_counter
  1902                           
  1903                           ;1.C: 200: led1_debug();
  1904  00FE  26A2               	fcall	_led1_debug
  1905                           
  1906                           ;1.C: 201: PA6 = ~PA6;
  1907  00FF  3040               	movlw	64
  1908  0100  0685               	xorwf	5,f
  1909                           
  1910                           ;1.C: 202: CH2_remotekey_Latest = buff;
  1911  0101  0820               	movf	_buff,w
  1912  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1913  0103  00B4               	movwf	_CH2_remotekey_Latest^(0+128)
  1914  0104                     i1l2969:	
  1915  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0105  0AA0               	incf	_buff,f
  1917  0106  1903               	skipnz
  1918  0107  0AA1               	incf	_buff+1,f
  1919  0108  28D6               	goto	i1l2971
  1920  0109                     i1l878:	
  1921                           
  1922                           ;1.C: 203: }
  1923                           ;1.C: 204: }
  1924                           ;1.C: 205: }
  1925                           ;1.C: 206: if((FLAGs&0x40) == 0){
  1926  0109  1B74               	btfsc	_FLAGs,6
  1927  010A  2941               	goto	i1l872
  1928                           
  1929                           ;1.C: 207: for(buff=0;buff<CH3_remotekey_num;buff++){
  1930  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1931  010C  01A0               	clrf	_buff
  1932  010D  01A1               	clrf	_buff+1
  1933  010E                     i1l2989:	
  1934  010E  0869               	movf	_CH3_remotekey_num,w
  1935  010F  00DD               	movwf	??_ISR
  1936  0110  01DE               	clrf	??_ISR+1
  1937  0111  085E               	movf	??_ISR+1,w
  1938  0112  0221               	subwf	_buff+1,w
  1939  0113  1D03               	skipz
  1940  0114  2917               	goto	u159_25
  1941  0115  085D               	movf	??_ISR,w
  1942  0116  0220               	subwf	_buff,w
  1943  0117                     u159_25:	
  1944  0117  1803               	btfsc	3,0
  1945  0118  2941               	goto	i1l872
  1946                           
  1947                           ;1.C: 208: if(Ctrl_remotekey == CH3_remotekey[buff]){
  1948  0119  0820               	movf	_buff,w
  1949  011A  223F               	fcall	PL8	;call to abstracted procedure
  1950  011B  3E4D               	addlw	_CH3_remotekey& (0+255)
  1951  011C  2223               	fcall	PL2	;call to abstracted procedure
  1952  011D  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1953  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1954  011F  0661               	xorwf	??_ISR+4,w
  1955  0120  1D03               	skipz
  1956  0121  2932               	goto	u158_25
  1957  0122  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0123  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1959  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0125  0660               	xorwf	??_ISR+3,w
  1961  0126  1D03               	skipz
  1962  0127  2932               	goto	u158_25
  1963  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0129  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1965  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1966  012B  065F               	xorwf	??_ISR+2,w
  1967  012C  1D03               	skipz
  1968  012D  2932               	goto	u158_25
  1969  012E  1683               	bsf	3,5	;RP0=1, select bank1
  1970  012F  0820               	movf	_Ctrl_remotekey^(0+128),w
  1971  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1972  0131  065E               	xorwf	??_ISR+1,w
  1973  0132                     u158_25:	
  1974  0132  1D03               	skipz
  1975  0133  293C               	goto	i1l2987
  1976                           
  1977                           ;1.C: 209: FLAGs |= 0x40;
  1978  0134  1774               	bsf	_FLAGs,6
  1979                           
  1980                           ;1.C: 210: Key_dealed_counter = 0;
  1981  0135  01A6               	clrf	_Key_dealed_counter
  1982                           
  1983                           ;1.C: 211: led1_debug();
  1984  0136  26A2               	fcall	_led1_debug
  1985                           
  1986                           ;1.C: 212: PA5 = ~PA5;
  1987  0137  3020               	movlw	32
  1988  0138  0685               	xorwf	5,f
  1989                           
  1990                           ;1.C: 213: CH3_remotekey_Latest = buff;
  1991  0139  0820               	movf	_buff,w
  1992  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1993  013B  00B5               	movwf	_CH3_remotekey_Latest^(0+128)
  1994  013C                     i1l2987:	
  1995  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1996  013D  0AA0               	incf	_buff,f
  1997  013E  1903               	skipnz
  1998  013F  0AA1               	incf	_buff+1,f
  1999  0140  290E               	goto	i1l2989
  2000  0141                     i1l872:	
  2001                           
  2002                           ;1.C: 214: }
  2003                           ;1.C: 215: }
  2004                           ;1.C: 216: }
  2005                           ;1.C: 217: }
  2006                           ;1.C: 218: FLAGs &= ~0x08;
  2007  0141  11F4               	bcf	_FLAGs,3
  2008                           
  2009                           ;1.C: 219: Indata = 0;
  2010  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2011  0143  01A8               	clrf	_Indata^(0+128)
  2012  0144  01A9               	clrf	(_Indata+1)^(0+128)
  2013                           
  2014                           ;1.C: 220: num = 0;
  2015  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2016                           
  2017                           ;1.C: 221: remotekey = 0;
  2018  0146  2256               	fcall	PL11	;call to abstracted procedure
  2019                           
  2020                           ;1.C: 222: Ctrl_remotekey = 0;
  2021  0147  01A0               	clrf	_Ctrl_remotekey^(0+128)
  2022  0148  01A1               	clrf	(_Ctrl_remotekey+1)^(0+128)
  2023  0149  01A2               	clrf	(_Ctrl_remotekey+2)^(0+128)
  2024  014A  01A3               	clrf	(_Ctrl_remotekey+3)^(0+128)
  2025  014B                     i1l2997:	
  2026                           
  2027                           ;1.C: 223: }
  2028                           ;1.C: 224: }
  2029                           ;1.C: 225: if((FLAGs&0x08) == 0){
  2030  014B  19F4               	btfsc	_FLAGs,3
  2031  014C  295F               	goto	i1l3017
  2032                           
  2033                           ;1.C: 226: if(buff > 7000){
  2034  014D  301B               	movlw	27
  2035  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2036  014F  0221               	subwf	_buff+1,w
  2037  0150  3059               	movlw	89
  2038  0151  1903               	skipnz
  2039  0152  0220               	subwf	_buff,w
  2040  0153  1C03               	skipc
  2041  0154  295F               	goto	i1l3017
  2042                           
  2043                           ;1.C: 227: FLAGs |= 0x08;
  2044  0155  15F4               	bsf	_FLAGs,3
  2045                           
  2046                           ;1.C: 228: num = 0;
  2047                           
  2048                           ;1.C: 229: remotekey = 0;
  2049  0156  2256               	fcall	PL11	;call to abstracted procedure
  2050                           
  2051                           ;1.C: 230: if( ((FLAGs&0x10) == 0x10) ||
  2052                           ;1.C: 231: ((FLAGs&0x20) == 0x20) ||
  2053                           ;1.C: 232: ((FLAGs&0x40) == 0x40)
  2054                           ;1.C: 233: ){
  2055  0157  1E74               	btfss	_FLAGs,4
  2056  0158  1AF4               	btfsc	_FLAGs,5
  2057  0159  295C               	goto	i1l3013
  2058  015A  1F74               	btfss	_FLAGs,6
  2059  015B  295F               	goto	i1l3017
  2060  015C                     i1l3013:	
  2061                           
  2062                           ;1.C: 234: remotekey_slice = 0;
  2063  015C  1283               	bcf	3,5	;RP0=0, select bank0
  2064  015D  01AC               	clrf	_remotekey_slice
  2065                           
  2066                           ;1.C: 235: FLAGs &= ~0x08;
  2067  015E  11F4               	bcf	_FLAGs,3
  2068  015F                     i1l3017:	
  2069                           
  2070                           ;1.C: 236: }
  2071                           ;1.C: 237: }
  2072                           ;1.C: 238: }
  2073                           ;1.C: 239: }
  2074                           ;1.C: 240: }
  2075                           ;1.C: 241: TMR2ON =1;
  2076  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0160  1512               	bsf	18,2
  2078                           
  2079                           ;1.C: 242: INTE = 1;
  2080  0161  160B               	bsf	11,4
  2081  0162                     i1l3021:	
  2082                           
  2083                           ;1.C: 243: }
  2084                           ;1.C: 246: if(TMR2IE && TMR2IF){
  2085  0162  1683               	bsf	3,5	;RP0=1, select bank1
  2086  0163  1C8C               	btfss	12,1
  2087  0164  2975               	goto	i1l3035
  2088  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0166  1C8C               	btfss	12,1
  2090  0167  2975               	goto	i1l3035
  2091                           
  2092                           ;1.C: 247: TMR2IF = 0;
  2093  0168  108C               	bcf	12,1
  2094                           
  2095                           ;1.C: 249: if((FLAGs&0x02) == 0x02){
  2096  0169  1CF4               	btfss	_FLAGs,1
  2097  016A  296F               	goto	i1l3029
  2098                           
  2099                           ;1.C: 250: Indata++;
  2100  016B  1683               	bsf	3,5	;RP0=1, select bank1
  2101  016C  0AA8               	incf	_Indata^(0+128),f
  2102  016D  1903               	skipnz
  2103  016E  0AA9               	incf	(_Indata+1)^(0+128),f
  2104  016F                     i1l3029:	
  2105                           
  2106                           ;1.C: 251: }
  2107                           ;1.C: 252: if(PA2 == 1){
  2108  016F  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0170  1D05               	btfss	5,2
  2110  0171  2975               	goto	i1l3035
  2111                           
  2112                           ;1.C: 253: FLAGs |= 0x02;
  2113  0172  14F4               	bsf	_FLAGs,1
  2114                           
  2115                           ;1.C: 254: remotekey_slice = 0;
  2116  0173  01AC               	clrf	_remotekey_slice
  2117                           
  2118                           ;1.C: 255: Key_dealed_counter = 0;
  2119  0174  01A6               	clrf	_Key_dealed_counter
  2120  0175                     i1l3035:	
  2121                           
  2122                           ;1.C: 257: }
  2123                           ;1.C: 295: }
  2124                           ;1.C: 298: if(T0IE && T0IF){
  2125  0175  1A8B               	btfsc	11,5
  2126  0176  1D0B               	btfss	11,2
  2127  0177  2A17               	goto	i1l927
  2128                           
  2129                           ;1.C: 299: T0IF = 0;
  2130  0178  110B               	bcf	11,2
  2131                           
  2132                           ;1.C: 300: ms16_counter ++;
  2133  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2134  017A  0AA9               	incf	_ms16_counter,f
  2135                           
  2136                           ;1.C: 303: if( ((FLAGs&0x10) == 0x10) ||
  2137                           ;1.C: 304: ((FLAGs&0x20) == 0x20) ||
  2138                           ;1.C: 305: ((FLAGs&0x40) == 0x40)
  2139                           ;1.C: 306: ){
  2140  017B  1E74               	btfss	_FLAGs,4
  2141  017C  1AF4               	btfsc	_FLAGs,5
  2142  017D  2980               	goto	i1l899
  2143  017E  1F74               	btfss	_FLAGs,6
  2144  017F  2997               	goto	i1l3073
  2145  0180                     i1l899:	
  2146                           
  2147                           ;1.C: 307: if(PA2 == 0) remotekey_slice++;
  2148  0180  1905               	btfsc	5,2
  2149  0181  2983               	goto	i1l3051
  2150  0182  0AAC               	incf	_remotekey_slice,f
  2151  0183                     i1l3051:	
  2152                           
  2153                           ;1.C: 308: if(PA2 == 1) remotekey_slice = 0;
  2154  0183  1D05               	btfss	5,2
  2155  0184  2986               	goto	i1l3055
  2156  0185  01AC               	clrf	_remotekey_slice
  2157  0186                     i1l3055:	
  2158                           
  2159                           ;1.C: 309: if(Key_dealed_counter<255) Key_dealed_counter++;
  2160  0186  0826               	movf	_Key_dealed_counter,w
  2161  0187  3AFF               	xorlw	255
  2162  0188  1D03               	btfss	3,2
  2163  0189  0AA6               	incf	_Key_dealed_counter,f
  2164                           
  2165                           ;1.C: 310: if( (remotekey_slice>(150/8)) ||
  2166                           ;1.C: 311: (Key_dealed_counter > (1024/8))
  2167                           ;1.C: 312: ){
  2168  018A  3013               	movlw	19
  2169  018B  022C               	subwf	_remotekey_slice,w
  2170  018C  1803               	skipnc
  2171  018D  2992               	goto	i1l3063
  2172  018E  3081               	movlw	129
  2173  018F  0226               	subwf	_Key_dealed_counter,w
  2174  0190  1C03               	skipc
  2175  0191  2997               	goto	i1l3073
  2176  0192                     i1l3063:	
  2177                           
  2178                           ;1.C: 313: remotekey_slice = 0;
  2179  0192  01AC               	clrf	_remotekey_slice
  2180                           
  2181                           ;1.C: 315: FLAGs &= ~0x02;
  2182  0193  10F4               	bcf	_FLAGs,1
  2183                           
  2184                           ;1.C: 316: FLAGs &= ~0x10;
  2185  0194  1274               	bcf	_FLAGs,4
  2186                           
  2187                           ;1.C: 317: FLAGs &= ~0x20;
  2188  0195  12F4               	bcf	_FLAGs,5
  2189                           
  2190                           ;1.C: 318: FLAGs &= ~0x40;
  2191  0196  1374               	bcf	_FLAGs,6
  2192  0197                     i1l3073:	
  2193                           
  2194                           ;1.C: 319: }
  2195                           ;1.C: 320: }
  2196                           ;1.C: 323: if( ((PRESSED&0x10) == 0x10) ||
  2197                           ;1.C: 324: ((PRESSED&0x20) == 0x20) ||
  2198                           ;1.C: 325: ((PRESSED&0x40) == 0x40)
  2199                           ;1.C: 326: ){
  2200  0197  1E75               	btfss	_PRESSED,4
  2201  0198  1AF5               	btfsc	_PRESSED,5
  2202  0199  299C               	goto	i1l3079
  2203  019A  1F75               	btfss	_PRESSED,6
  2204  019B  29A3               	goto	i1l3085
  2205  019C                     i1l3079:	
  2206  019C  3013               	movlw	19
  2207                           
  2208                           ;1.C: 327: match_slice++;
  2209  019D  0AA8               	incf	_match_slice,f
  2210                           
  2211                           ;1.C: 328: if(match_slice>(150/8)){
  2212  019E  0228               	subwf	_match_slice,w
  2213  019F  1C03               	skipc
  2214  01A0  29A3               	goto	i1l3085
  2215                           
  2216                           ;1.C: 329: match_slice = 0;
  2217  01A1  01A8               	clrf	_match_slice
  2218                           
  2219                           ;1.C: 330: remotekey_Receive_num = 0;
  2220  01A2  01AB               	clrf	_remotekey_Receive_num
  2221  01A3                     i1l3085:	
  2222                           
  2223                           ;1.C: 331: }
  2224                           ;1.C: 332: }
  2225                           ;1.C: 335: if((FLAGs&0x02) == 0){
  2226  01A3  18F4               	btfsc	_FLAGs,1
  2227  01A4  29BC               	goto	i1l910
  2228                           
  2229                           ;1.C: 336: EE_Buff = ms16_counter%8;
  2230  01A5  0829               	movf	_ms16_counter,w
  2231  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  2232  01A7  00B6               	movwf	_EE_Buff^(0+128)
  2233  01A8  3007               	movlw	7
  2234  01A9  05B6               	andwf	_EE_Buff^(0+128),f
  2235                           
  2236                           ;1.C: 337: if(EE_Buff == 1){
  2237  01AA  0B36               	decfsz	_EE_Buff^(0+128),w
  2238  01AB  29B2               	goto	i1l3101
  2239                           
  2240                           ;1.C: 338: PA3 = 0;
  2241  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2242  01AD  1185               	bcf	5,3
  2243                           
  2244                           ;1.C: 340: EX_INT_FallingEdge();
  2245  01AE  269E               	fcall	i1_EX_INT_FallingEdge
  2246                           
  2247                           ;1.C: 341: INTE =1;
  2248  01AF  160B               	bsf	11,4
  2249                           
  2250                           ;1.C: 342: TMR2ON =1;
  2251  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  2252  01B1  1512               	bsf	18,2
  2253  01B2                     i1l3101:	
  2254                           
  2255                           ;1.C: 343: }
  2256                           ;1.C: 344: if(EE_Buff == 3){
  2257  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  2258  01B3  0836               	movf	_EE_Buff^(0+128),w
  2259  01B4  3A03               	xorlw	3
  2260                           
  2261                           ;1.C: 345: PA3 = 1;
  2262  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  2263  01B6  1D03               	skipz
  2264  01B7  29C0               	goto	L4
  2265  01B8  1585               	bsf	5,3
  2266                           
  2267                           ;1.C: 346: TMR2ON =0;
  2268  01B9  1112               	bcf	18,2
  2269                           
  2270                           ;1.C: 347: INTE =0;
  2271  01BA  120B               	bcf	11,4
  2272  01BB  29BF               	goto	i1l913
  2273  01BC                     i1l910:	
  2274                           
  2275                           ;1.C: 350: PA3 = 0;
  2276  01BC  1185               	bcf	5,3
  2277                           
  2278                           ;1.C: 351: INTE =1;
  2279  01BD  160B               	bsf	11,4
  2280                           
  2281                           ;1.C: 352: TMR2ON =1;
  2282  01BE  1512               	bsf	18,2
  2283  01BF                     i1l913:	
  2284                           
  2285                           ;1.C: 353: }
  2286                           ;1.C: 356: if(ms16_counter%2 == 0){
  2287  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2288  01C0                     L4:	
  2289  01C0  1829               	btfsc	_ms16_counter,0
  2290  01C1  29C4               	goto	i1l3109
  2291                           
  2292                           ;1.C: 357: KEYSCAN();
  2293  01C2  23EA               	fcall	_KEYSCAN
  2294                           
  2295                           ;1.C: 358: KEY();
  2296  01C3  2263               	fcall	_KEY
  2297  01C4                     i1l3109:	
  2298                           
  2299                           ;1.C: 359: }
  2300                           ;1.C: 363: if(ms16_counter >= 120){
  2301  01C4  3078               	movlw	120
  2302  01C5  0229               	subwf	_ms16_counter,w
  2303  01C6  1C03               	skipc
  2304  01C7  2A17               	goto	i1l927
  2305                           
  2306                           ;1.C: 364: ms16_counter = 0;
  2307  01C8  01A9               	clrf	_ms16_counter
  2308                           
  2309                           ;1.C: 367: if( ((PRESSED&0x10) == 0x10) ||
  2310                           ;1.C: 368: ((PRESSED&0x20) == 0x20) ||
  2311                           ;1.C: 369: ((PRESSED&0x40) == 0x40)
  2312                           ;1.C: 370: ){
  2313  01C9  1E75               	btfss	_PRESSED,4
  2314  01CA  1AF5               	btfsc	_PRESSED,5
  2315  01CB  29CE               	goto	i1l3119
  2316  01CC  1F75               	btfss	_PRESSED,6
  2317  01CD  2A17               	goto	i1l927
  2318  01CE                     i1l3119:	
  2319                           
  2320                           ;1.C: 371: if(KEY_Match_counter<4){
  2321  01CE  3004               	movlw	4
  2322  01CF  0225               	subwf	_KEY_Match_counter,w
  2323  01D0  1C03               	btfss	3,0
  2324                           
  2325                           ;1.C: 372: KEY_Match_counter++;
  2326  01D1  0AA5               	incf	_KEY_Match_counter,f
  2327  01D2  3010               	movlw	16
  2328                           
  2329                           ;1.C: 373: }
  2330                           ;1.C: 374: LONGPRESS_OverTime_Counter++;
  2331  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2332  01D4  0AAA               	incf	_LONGPRESS_OverTime_Counter^(0+128),f
  2333                           
  2334                           ;1.C: 375: if(LONGPRESS_OverTime_Counter > 15){
  2335  01D5  022A               	subwf	_LONGPRESS_OverTime_Counter^(0+128),w
  2336  01D6  1C03               	skipc
  2337  01D7  2A17               	goto	i1l927
  2338                           
  2339                           ;1.C: 376: LONGPRESS_OverTime_Counter = 0;
  2340  01D8  01AA               	clrf	_LONGPRESS_OverTime_Counter^(0+128)
  2341                           
  2342                           ;1.C: 377: if((PRESSED&0x10) == 0x10){
  2343  01D9  1E75               	btfss	_PRESSED,4
  2344  01DA  29ED               	goto	i1l3139
  2345                           
  2346                           ;1.C: 378: CH1_remotekey[CH1_remotekey_Latest] = CH1_remotekey[CH1_remotekey_num-1];
  2347  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  2348  01DC  0867               	movf	_CH1_remotekey_num,w
  2349  01DD  223F               	fcall	PL8	;call to abstracted procedure
  2350  01DE  3E29               	addlw	(_CH1_remotekey+-4)& (0+255)
  2351  01DF  2223               	fcall	PL2	;call to abstracted procedure
  2352  01E0  0833               	movf	_CH1_remotekey_Latest^(0+128),w
  2353  01E1  224F               	fcall	PL10	;call to abstracted procedure
  2354  01E2  3E2D               	addlw	_CH1_remotekey& (0+255)
  2355  01E3  2232               	fcall	PL6	;call to abstracted procedure
  2356                           
  2357                           ;1.C: 379: CH1_remotekey[CH1_remotekey_num-1] = 0xFFFFFFFF;
  2358  01E4  0867               	movf	_CH1_remotekey_num,w
  2359  01E5  223F               	fcall	PL8	;call to abstracted procedure
  2360  01E6  3E29               	addlw	(_CH1_remotekey+-4)& (0+255)
  2361  01E7  2245               	fcall	PL9	;call to abstracted procedure
  2362                           
  2363                           ;1.C: 380: if(CH1_remotekey_num>0) CH1_remotekey_num--;
  2364  01E8  0867               	movf	_CH1_remotekey_num,w
  2365  01E9  1D03               	skipz
  2366  01EA  03E7               	decf	_CH1_remotekey_num,f
  2367                           
  2368                           ;1.C: 381: PRESSED &= ~0x10;
  2369  01EB  1275               	bcf	_PRESSED,4
  2370                           
  2371                           ;1.C: 382: PA7 = 1;
  2372  01EC  1785               	bsf	5,7
  2373  01ED                     i1l3139:	
  2374                           
  2375                           ;1.C: 383: }
  2376                           ;1.C: 384: if((PRESSED&0x20) == 0x20){
  2377  01ED  1EF5               	btfss	_PRESSED,5
  2378  01EE  2A01               	goto	i1l3151
  2379                           
  2380                           ;1.C: 385: CH2_remotekey[CH2_remotekey_Latest] = CH2_remotekey[CH2_remotekey_num-1];
  2381  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  2382  01F0  0868               	movf	_CH2_remotekey_num,w
  2383  01F1  223F               	fcall	PL8	;call to abstracted procedure
  2384  01F2  3E39               	addlw	(_CH2_remotekey+-4)& (0+255)
  2385  01F3  2223               	fcall	PL2	;call to abstracted procedure
  2386  01F4  0834               	movf	_CH2_remotekey_Latest^(0+128),w
  2387  01F5  224F               	fcall	PL10	;call to abstracted procedure
  2388  01F6  3E3D               	addlw	_CH2_remotekey& (0+255)
  2389  01F7  2232               	fcall	PL6	;call to abstracted procedure
  2390                           
  2391                           ;1.C: 386: CH2_remotekey[CH2_remotekey_num-1] = 0xFFFFFFFF;
  2392  01F8  0868               	movf	_CH2_remotekey_num,w
  2393  01F9  223F               	fcall	PL8	;call to abstracted procedure
  2394  01FA  3E39               	addlw	(_CH2_remotekey+-4)& (0+255)
  2395  01FB  2245               	fcall	PL9	;call to abstracted procedure
  2396                           
  2397                           ;1.C: 387: if(CH2_remotekey_num>0) CH2_remotekey_num--;
  2398  01FC  0868               	movf	_CH2_remotekey_num,w
  2399  01FD  1D03               	skipz
  2400  01FE  03E8               	decf	_CH2_remotekey_num,f
  2401                           
  2402                           ;1.C: 388: PRESSED &= ~0x20;
  2403  01FF  12F5               	bcf	_PRESSED,5
  2404                           
  2405                           ;1.C: 389: PA6 = 1;
  2406  0200  1705               	bsf	5,6
  2407  0201                     i1l3151:	
  2408                           
  2409                           ;1.C: 390: }
  2410                           ;1.C: 391: if((PRESSED&0x40) == 0x40){
  2411  0201  1F75               	btfss	_PRESSED,6
  2412  0202  2A15               	goto	i1l3163
  2413                           
  2414                           ;1.C: 392: CH3_remotekey[CH3_remotekey_Latest] = CH3_remotekey[CH3_remotekey_num-1];
  2415  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0204  0869               	movf	_CH3_remotekey_num,w
  2417  0205  223F               	fcall	PL8	;call to abstracted procedure
  2418  0206  3E49               	addlw	(_CH3_remotekey+-4)& (0+255)
  2419  0207  2223               	fcall	PL2	;call to abstracted procedure
  2420  0208  0835               	movf	_CH3_remotekey_Latest^(0+128),w
  2421  0209  224F               	fcall	PL10	;call to abstracted procedure
  2422  020A  3E4D               	addlw	_CH3_remotekey& (0+255)
  2423  020B  2232               	fcall	PL6	;call to abstracted procedure
  2424                           
  2425                           ;1.C: 393: CH3_remotekey[CH3_remotekey_num-1] = 0xFFFFFFFF;
  2426  020C  0869               	movf	_CH3_remotekey_num,w
  2427  020D  223F               	fcall	PL8	;call to abstracted procedure
  2428  020E  3E49               	addlw	(_CH3_remotekey+-4)& (0+255)
  2429  020F  2245               	fcall	PL9	;call to abstracted procedure
  2430                           
  2431                           ;1.C: 394: if(CH3_remotekey_num>0) CH3_remotekey_num--;
  2432  0210  0869               	movf	_CH3_remotekey_num,w
  2433  0211  1D03               	skipz
  2434  0212  03E9               	decf	_CH3_remotekey_num,f
  2435                           
  2436                           ;1.C: 395: PRESSED &= ~0x40;
  2437  0213  1375               	bcf	_PRESSED,6
  2438                           
  2439                           ;1.C: 396: PA5 = 1;
  2440  0214  1685               	bsf	5,5
  2441  0215                     i1l3163:	
  2442                           
  2443                           ;1.C: 397: }
  2444                           ;1.C: 398: PC0 = 1;
  2445  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0216  1407               	bsf	7,0
  2447  0217                     i1l927:	
  2448  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0218  0866               	movf	??_ISR+9,w
  2450  0219  00FF               	movwf	127
  2451  021A  0865               	movf	??_ISR+8,w
  2452  021B  008A               	movwf	10
  2453  021C  0864               	movf	??_ISR+7,w
  2454  021D  0084               	movwf	4
  2455  021E  0E63               	swapf	(??_ISR+6)^0,w
  2456  021F  0083               	movwf	3
  2457  0220  0EFE               	swapf	126,f
  2458  0221  0E7E               	swapf	126,w
  2459  0222  0009               	retfie
  2460  0223                     __end_of_ISR:	
  2461  0223                     PL2:	
  2462  0223  0084               	movwf	4
  2463  0224  1383               	bcf	3,7	;select IRP bank0
  2464  0225  0800               	movf	0,w
  2465  0226  00DE               	movwf	??_ISR+1
  2466  0227  0A84               	incf	4,f
  2467  0228  0800               	movf	0,w
  2468  0229  00DF               	movwf	??_ISR+2
  2469  022A  0A84               	incf	4,f
  2470  022B  0800               	movf	0,w
  2471  022C  00E0               	movwf	??_ISR+3
  2472  022D  0A84               	incf	4,f
  2473  022E  0800               	movf	0,w
  2474  022F  00E1               	movwf	??_ISR+4
  2475  0230  1683               	bsf	3,5	;RP0=1, select bank1
  2476  0231  0008               	return
  2477  0232                     PL6:	
  2478  0232  0084               	movwf	4
  2479  0233  085E               	movf	??_ISR+1,w
  2480  0234  0080               	movwf	0
  2481  0235  0A84               	incf	4,f
  2482  0236  085F               	movf	??_ISR+2,w
  2483  0237  0080               	movwf	0
  2484  0238  0A84               	incf	4,f
  2485  0239  0860               	movf	??_ISR+3,w
  2486  023A  0080               	movwf	0
  2487  023B  0A84               	incf	4,f
  2488  023C  0861               	movf	??_ISR+4,w
  2489  023D  0080               	movwf	0
  2490  023E  0008               	return
  2491  023F                     PL8:	
  2492  023F  00DD               	movwf	??_ISR
  2493  0240  1003               	clrc
  2494  0241  0DDD               	rlf	??_ISR,f
  2495  0242  1003               	clrc
  2496  0243  0D5D               	rlf	??_ISR,w
  2497  0244  0008               	return
  2498  0245                     PL9:	
  2499  0245  0084               	movwf	4
  2500  0246  30FF               	movlw	255
  2501  0247  0080               	movwf	0
  2502  0248  0A84               	incf	4,f
  2503  0249  0080               	movwf	0
  2504  024A  0A84               	incf	4,f
  2505  024B  0080               	movwf	0
  2506  024C  0A84               	incf	4,f
  2507  024D  0080               	movwf	0
  2508  024E  0008               	return
  2509  024F                     PL10:	
  2510  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2511  0250  00E2               	movwf	??_ISR+5
  2512  0251  1003               	clrc
  2513  0252  0DE2               	rlf	??_ISR+5,f
  2514  0253  1003               	clrc
  2515  0254  0D62               	rlf	??_ISR+5,w
  2516  0255  0008               	return
  2517  0256                     PL11:	
  2518  0256  01AA               	clrf	_num
  2519  0257  1683               	bsf	3,5	;RP0=1, select bank1
  2520  0258  01A4               	clrf	_remotekey^(0+128)
  2521  0259  01A5               	clrf	(_remotekey+1)^(0+128)
  2522  025A  01A6               	clrf	(_remotekey+2)^(0+128)
  2523  025B  01A7               	clrf	(_remotekey+3)^(0+128)
  2524  025C  0008               	return
  2525  025D                     PL12:	
  2526  025D  1683               	bsf	3,5	;RP0=1, select bank1
  2527  025E  0DA4               	rlf	_remotekey^(0+128),f
  2528  025F  0DA5               	rlf	(_remotekey+1)^(0+128),f
  2529  0260  0DA6               	rlf	(_remotekey+2)^(0+128),f
  2530  0261  0DA7               	rlf	(_remotekey+3)^(0+128),f
  2531  0262  0008               	return
  2532                           
  2533                           	psect	intentry
  2534  0004                     __pintentry:	
  2535                           ; Regs used in _ISR: [allreg]
  2536                           
  2537  0004                     interrupt_function:	
  2538  007E                     saved_w	set	btemp
  2539  0004  00FE               	movwf	btemp
  2540  0005  0E03               	swapf	3,w
  2541  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0007  00E3               	movwf	??_ISR+6
  2543  0008  0804               	movf	4,w
  2544  0009  00E4               	movwf	??_ISR+7
  2545  000A  080A               	movf	10,w
  2546  000B  00E5               	movwf	??_ISR+8
  2547  000C  087F               	movf	btemp+1,w
  2548  000D  00E6               	movwf	??_ISR+9
  2549  000E  2810               	ljmp	_ISR
  2550                           
  2551                           	psect	text690
  2552  0263                     __ptext690:	
  2553 ;; =============== function _ISR ends ============
  2554                           
  2555                           
  2556 ;; *************** function _KEY *****************
  2557 ;; Defined at:
  2558 ;;		line 673 in file "1.C"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;		None               void
  2565 ;; Registers used:
  2566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 20/0
  2569 ;;		On exit  : 20/0
  2570 ;;		Unchanged: FFEDF/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1
  2572 ;;      Params:         0       0       0
  2573 ;;      Locals:         0       0       0
  2574 ;;      Temps:          2       0       0
  2575 ;;      Totals:         2       0       0
  2576 ;;Total ram usage:        2 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; Hardware stack levels required when called:    2
  2579 ;; This function calls:
  2580 ;;		_CH1_EEPROM_Write
  2581 ;;		_CH2_EEPROM_Write
  2582 ;;		_CH3_EEPROM_Write
  2583 ;;		_led1_debug
  2584 ;; This function is called by:
  2585 ;;		_ISR
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588  0263                     _KEY:	
  2589                           
  2590                           ;1.C: 674: if( ((PRESSED&0x10) == 0x10) ||
  2591                           ;1.C: 675: ((PRESSED&0x20) == 0x20) ||
  2592                           ;1.C: 676: ((PRESSED&0x40) == 0x40)
  2593                           ;1.C: 677: ){
  2594                           
  2595                           ; Regs used in _KEY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2596  0263  1E75               	btfss	_PRESSED,4
  2597  0264  1AF5               	btfsc	_PRESSED,5
  2598  0265  2BA2               	goto	i1l3421
  2599  0266  1B75               	btfsc	_PRESSED,6
  2600  0267  2BA2               	goto	i1l3421
  2601  0268  2BAD               	goto	i1l1004
  2602  0269                     i1l3315:	
  2603                           
  2604                           ;1.C: 680: Match_remotekey = 0xFFFFFFFF;
  2605  0269  30FF               	movlw	255
  2606  026A  00F3               	movwf	_Match_remotekey+3
  2607  026B  00F2               	movwf	_Match_remotekey+2
  2608  026C  00F1               	movwf	_Match_remotekey+1
  2609  026D  00F0               	movwf	_Match_remotekey
  2610                           
  2611                           ;1.C: 681: break;
  2612  026E  2BAD               	goto	i1l1004
  2613  026F                     i1l1010:	
  2614                           ;1.C: 682: case 1:
  2615                           
  2616                           
  2617                           ;1.C: 683: PC0 = 0;
  2618  026F  1007               	bcf	7,0
  2619                           
  2620                           ;1.C: 684: if((PRESSED&0x10) == 0x10) PA7 = 0;
  2621  0270  1E75               	btfss	_PRESSED,4
  2622  0271  2A73               	goto	i1l1011
  2623  0272  1385               	bcf	5,7
  2624  0273                     i1l1011:	
  2625                           
  2626                           ;1.C: 685: if((PRESSED&0x20) == 0x20) PA6 = 0;
  2627  0273  1EF5               	btfss	_PRESSED,5
  2628  0274  2A76               	goto	i1l1012
  2629  0275  1305               	bcf	5,6
  2630  0276                     i1l1012:	
  2631                           
  2632                           ;1.C: 686: if((PRESSED&0x40) == 0x40) PA5 = 0;
  2633  0276  1F75               	btfss	_PRESSED,6
  2634  0277  2BAD               	goto	i1l1004
  2635  0278  1285               	bcf	5,5
  2636  0279  2BAD               	goto	i1l1004
  2637  027A                     i1l1014:	
  2638                           ;1.C: 688: case 2:
  2639                           
  2640                           
  2641                           ;1.C: 689: PC0 = 1;
  2642  027A  1407               	bsf	7,0
  2643                           
  2644                           ;1.C: 690: if((PRESSED&0x10) == 0x10) PA7 = 1;
  2645  027B  1E75               	btfss	_PRESSED,4
  2646  027C  2A7E               	goto	i1l1015
  2647  027D  1785               	bsf	5,7
  2648  027E                     i1l1015:	
  2649                           
  2650                           ;1.C: 691: if((PRESSED&0x20) == 0x20) PA6 = 1;
  2651  027E  1EF5               	btfss	_PRESSED,5
  2652  027F  2A81               	goto	i1l1016
  2653  0280  1705               	bsf	5,6
  2654  0281                     i1l1016:	
  2655                           
  2656                           ;1.C: 692: if((PRESSED&0x40) == 0x40) PA5 = 1;
  2657  0281  1F75               	btfss	_PRESSED,6
  2658  0282  2BAD               	goto	i1l1004
  2659  0283  1685               	bsf	5,5
  2660  0284  2BAD               	goto	i1l1004
  2661  0285                     i1l1018:	
  2662                           ;1.C: 694: case 3:
  2663                           
  2664  0285  3003               	movlw	3
  2665                           
  2666                           ;1.C: 695: KEY_Match_counter = 1;
  2667  0286  01A5               	clrf	_KEY_Match_counter
  2668  0287  0AA5               	incf	_KEY_Match_counter,f
  2669                           
  2670                           ;1.C: 696: if(remotekey_Receive_num >= 3){
  2671  0288  022B               	subwf	_remotekey_Receive_num,w
  2672  0289  1C03               	skipc
  2673  028A  2BAD               	goto	i1l1004
  2674                           
  2675                           ;1.C: 697: if((PRESSED&0x10) == 0x10){
  2676  028B  1E75               	btfss	_PRESSED,4
  2677  028C  2AE7               	goto	i1l3359
  2678                           
  2679                           ;1.C: 698: if( (Match_remotekey != CH1_remotekey[0]) &&
  2680                           ;1.C: 699: (Match_remotekey != CH1_remotekey[1]) &&
  2681                           ;1.C: 700: (Match_remotekey != CH1_remotekey[2]) &&
  2682                           ;1.C: 701: (Match_remotekey != CH1_remotekey[3])
  2683                           ;1.C: 702: ){
  2684  028D  0873               	movf	_Match_remotekey+3,w
  2685  028E  0630               	xorwf	_CH1_remotekey+3,w
  2686  028F  1D03               	skipz
  2687  0290  2A9B               	goto	u233_25
  2688  0291  0872               	movf	_Match_remotekey+2,w
  2689  0292  062F               	xorwf	_CH1_remotekey+2,w
  2690  0293  1D03               	skipz
  2691  0294  2A9B               	goto	u233_25
  2692  0295  0871               	movf	_Match_remotekey+1,w
  2693  0296  062E               	xorwf	_CH1_remotekey+1,w
  2694  0297  1D03               	skipz
  2695  0298  2A9B               	goto	u233_25
  2696  0299  0870               	movf	_Match_remotekey,w
  2697  029A  062D               	xorwf	_CH1_remotekey,w
  2698  029B                     u233_25:	
  2699  029B  1903               	skipnz
  2700  029C  2ADC               	goto	i1l3349
  2701  029D  0873               	movf	_Match_remotekey+3,w
  2702  029E  0634               	xorwf	_CH1_remotekey+7,w
  2703  029F  1D03               	skipz
  2704  02A0  2AAB               	goto	u234_25
  2705  02A1  0872               	movf	_Match_remotekey+2,w
  2706  02A2  0633               	xorwf	_CH1_remotekey+6,w
  2707  02A3  1D03               	skipz
  2708  02A4  2AAB               	goto	u234_25
  2709  02A5  0871               	movf	_Match_remotekey+1,w
  2710  02A6  0632               	xorwf	_CH1_remotekey+5,w
  2711  02A7  1D03               	skipz
  2712  02A8  2AAB               	goto	u234_25
  2713  02A9  0870               	movf	_Match_remotekey,w
  2714  02AA  0631               	xorwf	_CH1_remotekey+4,w
  2715  02AB                     u234_25:	
  2716  02AB  1903               	skipnz
  2717  02AC  2ADC               	goto	i1l3349
  2718  02AD  0873               	movf	_Match_remotekey+3,w
  2719  02AE  0638               	xorwf	_CH1_remotekey+11,w
  2720  02AF  1D03               	skipz
  2721  02B0  2ABB               	goto	u235_25
  2722  02B1  0872               	movf	_Match_remotekey+2,w
  2723  02B2  0637               	xorwf	_CH1_remotekey+10,w
  2724  02B3  1D03               	skipz
  2725  02B4  2ABB               	goto	u235_25
  2726  02B5  0871               	movf	_Match_remotekey+1,w
  2727  02B6  0636               	xorwf	_CH1_remotekey+9,w
  2728  02B7  1D03               	skipz
  2729  02B8  2ABB               	goto	u235_25
  2730  02B9  0870               	movf	_Match_remotekey,w
  2731  02BA  0635               	xorwf	_CH1_remotekey+8,w
  2732  02BB                     u235_25:	
  2733  02BB  1903               	skipnz
  2734  02BC  2ADC               	goto	i1l3349
  2735  02BD  0873               	movf	_Match_remotekey+3,w
  2736  02BE  063C               	xorwf	_CH1_remotekey+15,w
  2737  02BF  1D03               	skipz
  2738  02C0  2ACB               	goto	u236_25
  2739  02C1  0872               	movf	_Match_remotekey+2,w
  2740  02C2  063B               	xorwf	_CH1_remotekey+14,w
  2741  02C3  1D03               	skipz
  2742  02C4  2ACB               	goto	u236_25
  2743  02C5  0871               	movf	_Match_remotekey+1,w
  2744  02C6  063A               	xorwf	_CH1_remotekey+13,w
  2745  02C7  1D03               	skipz
  2746  02C8  2ACB               	goto	u236_25
  2747  02C9  0870               	movf	_Match_remotekey,w
  2748  02CA  0639               	xorwf	_CH1_remotekey+12,w
  2749  02CB                     u236_25:	
  2750  02CB  1903               	skipnz
  2751  02CC  2ADC               	goto	i1l3349
  2752                           
  2753                           ;1.C: 703: if(CH1_remotekey_num < 4){
  2754  02CD  3004               	movlw	4
  2755  02CE  0267               	subwf	_CH1_remotekey_num,w
  2756  02CF  1803               	skipnc
  2757  02D0  2AD7               	goto	i1l3347
  2758                           
  2759                           ;1.C: 704: CH1_remotekey[CH1_remotekey_num] = Match_remotekey;
  2760  02D1  0867               	movf	_CH1_remotekey_num,w
  2761  02D2  23E4               	fcall	PL7	;call to abstracted procedure
  2762  02D3  3E2D               	addlw	_CH1_remotekey& (0+255)
  2763  02D4  23D6               	fcall	PL3	;call to abstracted procedure
  2764                           
  2765                           ;1.C: 705: CH1_remotekey_num++;
  2766  02D5  0AE7               	incf	_CH1_remotekey_num,f
  2767                           
  2768                           ;1.C: 706: }else{
  2769  02D6  2ADC               	goto	i1l3349
  2770  02D7                     i1l3347:	
  2771                           
  2772                           ;1.C: 707: CH1_remotekey[CH1_remotekey_Latest] = Match_remotekey;
  2773  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  2774  02D8  0833               	movf	_CH1_remotekey_Latest^(0+128),w
  2775  02D9  23E4               	fcall	PL7	;call to abstracted procedure
  2776  02DA  3E2D               	addlw	_CH1_remotekey& (0+255)
  2777  02DB  23D6               	fcall	PL3	;call to abstracted procedure
  2778  02DC                     i1l3349:	
  2779                           
  2780                           ;1.C: 708: }
  2781                           ;1.C: 709: }
  2782                           ;1.C: 710: if(CH1_remotekey_num > 4) CH1_remotekey_num = 4;
  2783  02DC  3005               	movlw	5
  2784  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  2785  02DE  0267               	subwf	_CH1_remotekey_num,w
  2786  02DF  1C03               	skipc
  2787  02E0  2AE3               	goto	i1l3353
  2788  02E1  3004               	movlw	4
  2789  02E2  00E7               	movwf	_CH1_remotekey_num
  2790  02E3                     i1l3353:	
  2791                           
  2792                           ;1.C: 711: PRESSED &= ~0x10;
  2793  02E3  1275               	bcf	_PRESSED,4
  2794                           
  2795                           ;1.C: 712: CH1_EEPROM_Write();
  2796  02E4  25B6               	fcall	_CH1_EEPROM_Write
  2797                           
  2798                           ;1.C: 713: PA7 = 1;
  2799  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2800  02E6  1785               	bsf	5,7
  2801  02E7                     i1l3359:	
  2802                           
  2803                           ;1.C: 714: }
  2804                           ;1.C: 715: if((PRESSED&0x20) == 0x20){
  2805  02E7  1EF5               	btfss	_PRESSED,5
  2806  02E8  2B43               	goto	i1l3387
  2807                           
  2808                           ;1.C: 716: if( (Match_remotekey != CH2_remotekey[0]) &&
  2809                           ;1.C: 717: (Match_remotekey != CH2_remotekey[1]) &&
  2810                           ;1.C: 718: (Match_remotekey != CH2_remotekey[2]) &&
  2811                           ;1.C: 719: (Match_remotekey != CH2_remotekey[3])
  2812                           ;1.C: 720: ){
  2813  02E9  0873               	movf	_Match_remotekey+3,w
  2814  02EA  0640               	xorwf	_CH2_remotekey+3,w
  2815  02EB  1D03               	skipz
  2816  02EC  2AF7               	goto	u240_25
  2817  02ED  0872               	movf	_Match_remotekey+2,w
  2818  02EE  063F               	xorwf	_CH2_remotekey+2,w
  2819  02EF  1D03               	skipz
  2820  02F0  2AF7               	goto	u240_25
  2821  02F1  0871               	movf	_Match_remotekey+1,w
  2822  02F2  063E               	xorwf	_CH2_remotekey+1,w
  2823  02F3  1D03               	skipz
  2824  02F4  2AF7               	goto	u240_25
  2825  02F5  0870               	movf	_Match_remotekey,w
  2826  02F6  063D               	xorwf	_CH2_remotekey,w
  2827  02F7                     u240_25:	
  2828  02F7  1903               	skipnz
  2829  02F8  2B38               	goto	i1l3377
  2830  02F9  0873               	movf	_Match_remotekey+3,w
  2831  02FA  0644               	xorwf	_CH2_remotekey+7,w
  2832  02FB  1D03               	skipz
  2833  02FC  2B07               	goto	u241_25
  2834  02FD  0872               	movf	_Match_remotekey+2,w
  2835  02FE  0643               	xorwf	_CH2_remotekey+6,w
  2836  02FF  1D03               	skipz
  2837  0300  2B07               	goto	u241_25
  2838  0301  0871               	movf	_Match_remotekey+1,w
  2839  0302  0642               	xorwf	_CH2_remotekey+5,w
  2840  0303  1D03               	skipz
  2841  0304  2B07               	goto	u241_25
  2842  0305  0870               	movf	_Match_remotekey,w
  2843  0306  0641               	xorwf	_CH2_remotekey+4,w
  2844  0307                     u241_25:	
  2845  0307  1903               	skipnz
  2846  0308  2B38               	goto	i1l3377
  2847  0309  0873               	movf	_Match_remotekey+3,w
  2848  030A  0648               	xorwf	_CH2_remotekey+11,w
  2849  030B  1D03               	skipz
  2850  030C  2B17               	goto	u242_25
  2851  030D  0872               	movf	_Match_remotekey+2,w
  2852  030E  0647               	xorwf	_CH2_remotekey+10,w
  2853  030F  1D03               	skipz
  2854  0310  2B17               	goto	u242_25
  2855  0311  0871               	movf	_Match_remotekey+1,w
  2856  0312  0646               	xorwf	_CH2_remotekey+9,w
  2857  0313  1D03               	skipz
  2858  0314  2B17               	goto	u242_25
  2859  0315  0870               	movf	_Match_remotekey,w
  2860  0316  0645               	xorwf	_CH2_remotekey+8,w
  2861  0317                     u242_25:	
  2862  0317  1903               	skipnz
  2863  0318  2B38               	goto	i1l3377
  2864  0319  0873               	movf	_Match_remotekey+3,w
  2865  031A  064C               	xorwf	_CH2_remotekey+15,w
  2866  031B  1D03               	skipz
  2867  031C  2B27               	goto	u243_25
  2868  031D  0872               	movf	_Match_remotekey+2,w
  2869  031E  064B               	xorwf	_CH2_remotekey+14,w
  2870  031F  1D03               	skipz
  2871  0320  2B27               	goto	u243_25
  2872  0321  0871               	movf	_Match_remotekey+1,w
  2873  0322  064A               	xorwf	_CH2_remotekey+13,w
  2874  0323  1D03               	skipz
  2875  0324  2B27               	goto	u243_25
  2876  0325  0870               	movf	_Match_remotekey,w
  2877  0326  0649               	xorwf	_CH2_remotekey+12,w
  2878  0327                     u243_25:	
  2879  0327  1903               	skipnz
  2880  0328  2B38               	goto	i1l3377
  2881                           
  2882                           ;1.C: 721: if(CH2_remotekey_num < 4){
  2883  0329  3004               	movlw	4
  2884  032A  0268               	subwf	_CH2_remotekey_num,w
  2885  032B  1803               	skipnc
  2886  032C  2B33               	goto	i1l3375
  2887                           
  2888                           ;1.C: 722: CH2_remotekey[CH2_remotekey_num] = Match_remotekey;
  2889  032D  0868               	movf	_CH2_remotekey_num,w
  2890  032E  23E4               	fcall	PL7	;call to abstracted procedure
  2891  032F  3E3D               	addlw	_CH2_remotekey& (0+255)
  2892  0330  23D6               	fcall	PL3	;call to abstracted procedure
  2893                           
  2894                           ;1.C: 723: CH2_remotekey_num++;
  2895  0331  0AE8               	incf	_CH2_remotekey_num,f
  2896                           
  2897                           ;1.C: 724: }else{
  2898  0332  2B38               	goto	i1l3377
  2899  0333                     i1l3375:	
  2900                           
  2901                           ;1.C: 725: CH2_remotekey[CH2_remotekey_Latest] = Match_remotekey;
  2902  0333  1683               	bsf	3,5	;RP0=1, select bank1
  2903  0334  0834               	movf	_CH2_remotekey_Latest^(0+128),w
  2904  0335  23E4               	fcall	PL7	;call to abstracted procedure
  2905  0336  3E3D               	addlw	_CH2_remotekey& (0+255)
  2906  0337  23D6               	fcall	PL3	;call to abstracted procedure
  2907  0338                     i1l3377:	
  2908                           
  2909                           ;1.C: 726: }
  2910                           ;1.C: 727: }
  2911                           ;1.C: 728: if(CH2_remotekey_num > 4) CH2_remotekey_num = 4;
  2912  0338  3005               	movlw	5
  2913  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2914  033A  0268               	subwf	_CH2_remotekey_num,w
  2915  033B  1C03               	skipc
  2916  033C  2B3F               	goto	i1l3381
  2917  033D  3004               	movlw	4
  2918  033E  00E8               	movwf	_CH2_remotekey_num
  2919  033F                     i1l3381:	
  2920                           
  2921                           ;1.C: 729: PRESSED &= ~0x20;
  2922  033F  12F5               	bcf	_PRESSED,5
  2923                           
  2924                           ;1.C: 730: CH2_EEPROM_Write();
  2925  0340  2576               	fcall	_CH2_EEPROM_Write
  2926                           
  2927                           ;1.C: 731: PA6 = 1;
  2928  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0342  1705               	bsf	5,6
  2930  0343                     i1l3387:	
  2931                           
  2932                           ;1.C: 732: }
  2933                           ;1.C: 733: if((PRESSED&0x40) == 0x40){
  2934  0343  1F75               	btfss	_PRESSED,6
  2935  0344  2B9F               	goto	i1l3415
  2936                           
  2937                           ;1.C: 734: if( (Match_remotekey != CH3_remotekey[0]) &&
  2938                           ;1.C: 735: (Match_remotekey != CH3_remotekey[1]) &&
  2939                           ;1.C: 736: (Match_remotekey != CH3_remotekey[2]) &&
  2940                           ;1.C: 737: (Match_remotekey != CH3_remotekey[3])
  2941                           ;1.C: 738: ){
  2942  0345  0873               	movf	_Match_remotekey+3,w
  2943  0346  0650               	xorwf	_CH3_remotekey+3,w
  2944  0347  1D03               	skipz
  2945  0348  2B53               	goto	u247_25
  2946  0349  0872               	movf	_Match_remotekey+2,w
  2947  034A  064F               	xorwf	_CH3_remotekey+2,w
  2948  034B  1D03               	skipz
  2949  034C  2B53               	goto	u247_25
  2950  034D  0871               	movf	_Match_remotekey+1,w
  2951  034E  064E               	xorwf	_CH3_remotekey+1,w
  2952  034F  1D03               	skipz
  2953  0350  2B53               	goto	u247_25
  2954  0351  0870               	movf	_Match_remotekey,w
  2955  0352  064D               	xorwf	_CH3_remotekey,w
  2956  0353                     u247_25:	
  2957  0353  1903               	skipnz
  2958  0354  2B94               	goto	i1l3405
  2959  0355  0873               	movf	_Match_remotekey+3,w
  2960  0356  0654               	xorwf	_CH3_remotekey+7,w
  2961  0357  1D03               	skipz
  2962  0358  2B63               	goto	u248_25
  2963  0359  0872               	movf	_Match_remotekey+2,w
  2964  035A  0653               	xorwf	_CH3_remotekey+6,w
  2965  035B  1D03               	skipz
  2966  035C  2B63               	goto	u248_25
  2967  035D  0871               	movf	_Match_remotekey+1,w
  2968  035E  0652               	xorwf	_CH3_remotekey+5,w
  2969  035F  1D03               	skipz
  2970  0360  2B63               	goto	u248_25
  2971  0361  0870               	movf	_Match_remotekey,w
  2972  0362  0651               	xorwf	_CH3_remotekey+4,w
  2973  0363                     u248_25:	
  2974  0363  1903               	skipnz
  2975  0364  2B94               	goto	i1l3405
  2976  0365  0873               	movf	_Match_remotekey+3,w
  2977  0366  0658               	xorwf	_CH3_remotekey+11,w
  2978  0367  1D03               	skipz
  2979  0368  2B73               	goto	u249_25
  2980  0369  0872               	movf	_Match_remotekey+2,w
  2981  036A  0657               	xorwf	_CH3_remotekey+10,w
  2982  036B  1D03               	skipz
  2983  036C  2B73               	goto	u249_25
  2984  036D  0871               	movf	_Match_remotekey+1,w
  2985  036E  0656               	xorwf	_CH3_remotekey+9,w
  2986  036F  1D03               	skipz
  2987  0370  2B73               	goto	u249_25
  2988  0371  0870               	movf	_Match_remotekey,w
  2989  0372  0655               	xorwf	_CH3_remotekey+8,w
  2990  0373                     u249_25:	
  2991  0373  1903               	skipnz
  2992  0374  2B94               	goto	i1l3405
  2993  0375  0873               	movf	_Match_remotekey+3,w
  2994  0376  065C               	xorwf	_CH3_remotekey+15,w
  2995  0377  1D03               	skipz
  2996  0378  2B83               	goto	u250_25
  2997  0379  0872               	movf	_Match_remotekey+2,w
  2998  037A  065B               	xorwf	_CH3_remotekey+14,w
  2999  037B  1D03               	skipz
  3000  037C  2B83               	goto	u250_25
  3001  037D  0871               	movf	_Match_remotekey+1,w
  3002  037E  065A               	xorwf	_CH3_remotekey+13,w
  3003  037F  1D03               	skipz
  3004  0380  2B83               	goto	u250_25
  3005  0381  0870               	movf	_Match_remotekey,w
  3006  0382  0659               	xorwf	_CH3_remotekey+12,w
  3007  0383                     u250_25:	
  3008  0383  1903               	skipnz
  3009  0384  2B94               	goto	i1l3405
  3010                           
  3011                           ;1.C: 739: if(CH3_remotekey_num < 4){
  3012  0385  3004               	movlw	4
  3013  0386  0269               	subwf	_CH3_remotekey_num,w
  3014  0387  1803               	skipnc
  3015  0388  2B8F               	goto	i1l3403
  3016                           
  3017                           ;1.C: 740: CH3_remotekey[CH3_remotekey_num] = Match_remotekey;
  3018  0389  0869               	movf	_CH3_remotekey_num,w
  3019  038A  23E4               	fcall	PL7	;call to abstracted procedure
  3020  038B  3E4D               	addlw	_CH3_remotekey& (0+255)
  3021  038C  23D6               	fcall	PL3	;call to abstracted procedure
  3022                           
  3023                           ;1.C: 741: CH3_remotekey_num++;
  3024  038D  0AE9               	incf	_CH3_remotekey_num,f
  3025                           
  3026                           ;1.C: 742: }else{
  3027  038E  2B94               	goto	i1l3405
  3028  038F                     i1l3403:	
  3029                           
  3030                           ;1.C: 743: CH3_remotekey[CH3_remotekey_Latest] = Match_remotekey;
  3031  038F  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0390  0835               	movf	_CH3_remotekey_Latest^(0+128),w
  3033  0391  23E4               	fcall	PL7	;call to abstracted procedure
  3034  0392  3E4D               	addlw	_CH3_remotekey& (0+255)
  3035  0393  23D6               	fcall	PL3	;call to abstracted procedure
  3036  0394                     i1l3405:	
  3037                           
  3038                           ;1.C: 744: }
  3039                           ;1.C: 745: }
  3040                           ;1.C: 746: if(CH3_remotekey_num > 4) CH3_remotekey_num = 4;
  3041  0394  3005               	movlw	5
  3042  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3043  0396  0269               	subwf	_CH3_remotekey_num,w
  3044  0397  1C03               	skipc
  3045  0398  2B9B               	goto	i1l3409
  3046  0399  3004               	movlw	4
  3047  039A  00E9               	movwf	_CH3_remotekey_num
  3048  039B                     i1l3409:	
  3049                           
  3050                           ;1.C: 747: PRESSED &= ~0x40;
  3051  039B  1375               	bcf	_PRESSED,6
  3052                           
  3053                           ;1.C: 748: CH3_EEPROM_Write();
  3054  039C  2536               	fcall	_CH3_EEPROM_Write
  3055                           
  3056                           ;1.C: 749: PA5 = 1;
  3057  039D  1283               	bcf	3,5	;RP0=0, select bank0
  3058  039E  1685               	bsf	5,5
  3059  039F                     i1l3415:	
  3060                           
  3061                           ;1.C: 750: }
  3062                           ;1.C: 751: KEY_Match_counter = 0;
  3063  039F  01A5               	clrf	_KEY_Match_counter
  3064                           
  3065                           ;1.C: 752: PC0 = 1;
  3066  03A0  1407               	bsf	7,0
  3067  03A1  2BAD               	goto	i1l1004
  3068  03A2                     i1l3421:	
  3069  03A2  0825               	movf	_KEY_Match_counter,w
  3070                           
  3071                           ; Switch size 1, requested type "space"
  3072                           ; Number of cases is 4, Range of values is 0 to 3
  3073                           ; switch strategies available:
  3074                           ; Name         Instructions Cycles
  3075                           ; direct_byte           10     6 (fixed)
  3076                           ; simple_byte           13     7 (average)
  3077                           ; jumptable            260     6 (fixed)
  3078                           ; rangetable             8     6 (fixed)
  3079                           ; spacedrange           14     9 (fixed)
  3080                           ; locatedrange           4     3 (fixed)
  3081                           ;	Chosen strategy is direct_byte
  3082  03A3  0084               	movwf	4
  3083  03A4  3004               	movlw	4
  3084  03A5  0204               	subwf	4,w
  3085  03A6  1803               	skipnc
  3086  03A7  2BAD               	goto	i1l1004
  3087  03A8  3006               	movlw	high i1S3765
  3088  03A9  008A               	movwf	10
  3089  03AA  309A               	movlw	low i1S3765
  3090  03AB  0704               	addwf	4,w
  3091  03AC  0082               	movwf	2
  3092  03AD                     i1l1004:	
  3093                           
  3094                           ;1.C: 756: }
  3095                           ;1.C: 759: if( ((PRESSED&0x10) == 0) &&
  3096                           ;1.C: 760: ((PRESSED&0x20) == 0) &&
  3097                           ;1.C: 761: ((PRESSED&0x40) == 0)
  3098                           ;1.C: 762: ){
  3099  03AD  1E75               	btfss	_PRESSED,4
  3100  03AE  1AF5               	btfsc	_PRESSED,5
  3101  03AF  0008               	return
  3102  03B0  1B75               	btfsc	_PRESSED,6
  3103  03B1  0008               	return
  3104                           
  3105                           ;1.C: 763: if((PRESSED&0x0F) > 0){
  3106  03B2  0875               	movf	_PRESSED,w
  3107  03B3  390F               	andlw	15
  3108  03B4  1D03               	btfss	3,2
  3109  03B5  2BBF               	goto	i1l3445
  3110  03B6  2BD3               	goto	i1l3447
  3111  03B7                     i1l3431:	
  3112                           
  3113                           ;1.C: 766: PA7 = ~PA7;
  3114  03B7  3080               	movlw	128
  3115  03B8                     L5:	
  3116  03B8  0685               	xorwf	5,f
  3117                           
  3118                           ;1.C: 767: led1_debug();
  3119  03B9  26A2               	fcall	_led1_debug
  3120                           
  3121                           ;1.C: 768: break;
  3122  03BA  2BD3               	goto	i1l3447
  3123  03BB                     i1l3435:	
  3124                           
  3125                           ;1.C: 770: PA6 = ~PA6;
  3126  03BB  3040               	movlw	64
  3127  03BC  2BB8               	goto	L5
  3128  03BD                     i1l3439:	
  3129                           
  3130                           ;1.C: 774: PA5 = ~PA5;
  3131  03BD  3020               	movlw	32
  3132  03BE  2BB8               	goto	L5
  3133  03BF                     i1l3445:	
  3134  03BF  0875               	movf	_PRESSED,w
  3135  03C0  390F               	andlw	15
  3136  03C1  00F8               	movwf	??_KEY
  3137  03C2  01F9               	clrf	??_KEY+1
  3138                           
  3139                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3140                           ; Switch size 1, requested type "space"
  3141                           ; Number of cases is 1, Range of values is 0 to 0
  3142                           ; switch strategies available:
  3143                           ; Name         Instructions Cycles
  3144                           ; simple_byte            4     3 (average)
  3145                           ; direct_byte            7     6 (fixed)
  3146                           ; jumptable            260     6 (fixed)
  3147                           ; rangetable             5     6 (fixed)
  3148                           ; spacedrange            8     9 (fixed)
  3149                           ; locatedrange           1     3 (fixed)
  3150                           ;	Chosen strategy is simple_byte
  3151  03C3  0879               	movf	??_KEY+1,w
  3152  03C4  3A00               	xorlw	0	; case 0
  3153  03C5  1903               	skipnz
  3154  03C6  2BC8               	goto	i1l3767
  3155  03C7  2BD3               	goto	i1l3447
  3156  03C8                     i1l3767:	
  3157                           
  3158                           ; Switch size 1, requested type "space"
  3159                           ; Number of cases is 3, Range of values is 1 to 4
  3160                           ; switch strategies available:
  3161                           ; Name         Instructions Cycles
  3162                           ; simple_byte           10     6 (average)
  3163                           ; direct_byte           13     9 (fixed)
  3164                           ; jumptable            263     9 (fixed)
  3165                           ;	Chosen strategy is simple_byte
  3166  03C8  0878               	movf	??_KEY,w
  3167  03C9  3A01               	xorlw	1	; case 1
  3168  03CA  1903               	skipnz
  3169  03CB  2BB7               	goto	i1l3431
  3170  03CC  3A03               	xorlw	3	; case 2
  3171  03CD  1903               	skipnz
  3172  03CE  2BBB               	goto	i1l3435
  3173  03CF  3A06               	xorlw	6	; case 4
  3174  03D0  1903               	skipnz
  3175  03D1  2BBD               	goto	i1l3439
  3176  03D2  2BD3               	goto	i1l3447
  3177  03D3                     i1l3447:	
  3178                           
  3179                           ;1.C: 778: }
  3180                           ;1.C: 779: PRESSED &= 0xF0;
  3181  03D3  30F0               	movlw	240
  3182  03D4  05F5               	andwf	_PRESSED,f
  3183  03D5  0008               	return
  3184  03D6                     __end_of_KEY:	
  3185  03D6                     PL3:	
  3186  03D6  0084               	movwf	4
  3187  03D7  0870               	movf	_Match_remotekey,w
  3188  03D8  1383               	bcf	3,7	;select IRP bank0
  3189  03D9  0080               	movwf	0
  3190  03DA  0A84               	incf	4,f
  3191  03DB  0871               	movf	_Match_remotekey+1,w
  3192  03DC  0080               	movwf	0
  3193  03DD  0A84               	incf	4,f
  3194  03DE  0872               	movf	_Match_remotekey+2,w
  3195  03DF  0080               	movwf	0
  3196  03E0  0A84               	incf	4,f
  3197  03E1  0873               	movf	_Match_remotekey+3,w
  3198  03E2  0080               	movwf	0
  3199  03E3  0008               	return
  3200  03E4                     PL7:	
  3201  03E4  00F8               	movwf	??_KEY
  3202  03E5  1003               	clrc
  3203  03E6  0DF8               	rlf	??_KEY,f
  3204  03E7  1003               	clrc
  3205  03E8  0D78               	rlf	??_KEY,w
  3206  03E9  0008               	return
  3207                           
  3208                           	psect	swtext1
  3209  069A                     __pswtext1:	
  3210  069A                     i1S3765:	
  3211  069A  2A69               	ljmp	i1l3315
  3212  069B  2A6F               	ljmp	i1l1010
  3213  069C  2A7A               	ljmp	i1l1014
  3214  069D  2A85               	ljmp	i1l1018
  3215                           
  3216                           	psect	text691
  3217  0536                     __ptext691:	
  3218 ;; =============== function _KEY ends ============
  3219                           
  3220                           
  3221 ;; *************** function _CH3_EEPROM_Write *****************
  3222 ;; Defined at:
  3223 ;;		line 543 in file "1.C"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;		None               void
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, pclath, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 20/0
  3234 ;;		On exit  : 20/20
  3235 ;;		Unchanged: FFFDF/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1
  3237 ;;      Params:         0       0       0
  3238 ;;      Locals:         0       0       0
  3239 ;;      Temps:          0       0       0
  3240 ;;      Totals:         0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used:    1
  3243 ;; Hardware stack levels required when called:    1
  3244 ;; This function calls:
  3245 ;;		_IAPWrite
  3246 ;; This function is called by:
  3247 ;;		_KEY
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250  0536                     _CH3_EEPROM_Write:	
  3251                           
  3252                           ;1.C: 544: IAPWrite(0x08,((CH3_remotekey[0]&0x000000FF)>>0));
  3253                           
  3254                           ; Regs used in _CH3_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3255  0536  084D               	movf	_CH3_remotekey,w
  3256  0537  00F6               	movwf	?_IAPWrite
  3257  0538  3008               	movlw	8
  3258  0539  263C               	fcall	_IAPWrite
  3259                           
  3260                           ;1.C: 545: IAPWrite(0x09,((CH3_remotekey[0]&0x0000FF00)>>8));
  3261  053A  1283               	bcf	3,5	;RP0=0, select bank0
  3262  053B  084E               	movf	_CH3_remotekey+1,w
  3263  053C  00F6               	movwf	?_IAPWrite
  3264  053D  3009               	movlw	9
  3265  053E  263C               	fcall	_IAPWrite
  3266                           
  3267                           ;1.C: 546: IAPWrite(0x0A,((CH3_remotekey[0]&0x00FF0000)>>16));
  3268  053F  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0540  084F               	movf	_CH3_remotekey+2,w
  3270  0541  00F6               	movwf	?_IAPWrite
  3271  0542  300A               	movlw	10
  3272  0543  263C               	fcall	_IAPWrite
  3273                           
  3274                           ;1.C: 548: IAPWrite(0x14,((CH3_remotekey[1]&0x000000FF)>>0));
  3275  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3276  0545  0851               	movf	_CH3_remotekey+4,w
  3277  0546  00F6               	movwf	?_IAPWrite
  3278  0547  3014               	movlw	20
  3279  0548  263C               	fcall	_IAPWrite
  3280                           
  3281                           ;1.C: 549: IAPWrite(0x15,((CH3_remotekey[1]&0x0000FF00)>>8));
  3282  0549  1283               	bcf	3,5	;RP0=0, select bank0
  3283  054A  0852               	movf	_CH3_remotekey+5,w
  3284  054B  00F6               	movwf	?_IAPWrite
  3285  054C  3015               	movlw	21
  3286  054D  263C               	fcall	_IAPWrite
  3287                           
  3288                           ;1.C: 550: IAPWrite(0x16,((CH3_remotekey[1]&0x00FF0000)>>16));
  3289  054E  1283               	bcf	3,5	;RP0=0, select bank0
  3290  054F  0853               	movf	_CH3_remotekey+6,w
  3291  0550  00F6               	movwf	?_IAPWrite
  3292  0551  3016               	movlw	22
  3293  0552  263C               	fcall	_IAPWrite
  3294                           
  3295                           ;1.C: 552: IAPWrite(0x20,((CH3_remotekey[2]&0x000000FF)>>0));
  3296  0553  1283               	bcf	3,5	;RP0=0, select bank0
  3297  0554  0855               	movf	_CH3_remotekey+8,w
  3298  0555  00F6               	movwf	?_IAPWrite
  3299  0556  3020               	movlw	32
  3300  0557  263C               	fcall	_IAPWrite
  3301                           
  3302                           ;1.C: 553: IAPWrite(0x21,((CH3_remotekey[2]&0x0000FF00)>>8));
  3303  0558  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0559  0856               	movf	_CH3_remotekey+9,w
  3305  055A  00F6               	movwf	?_IAPWrite
  3306  055B  3021               	movlw	33
  3307  055C  263C               	fcall	_IAPWrite
  3308                           
  3309                           ;1.C: 554: IAPWrite(0x22,((CH3_remotekey[2]&0x00FF0000)>>16));
  3310  055D  1283               	bcf	3,5	;RP0=0, select bank0
  3311  055E  0857               	movf	_CH3_remotekey+10,w
  3312  055F  00F6               	movwf	?_IAPWrite
  3313  0560  3022               	movlw	34
  3314  0561  263C               	fcall	_IAPWrite
  3315                           
  3316                           ;1.C: 556: IAPWrite(0x2C,((CH3_remotekey[3]&0x000000FF)>>0));
  3317  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3318  0563  0859               	movf	_CH3_remotekey+12,w
  3319  0564  00F6               	movwf	?_IAPWrite
  3320  0565  302C               	movlw	44
  3321  0566  263C               	fcall	_IAPWrite
  3322                           
  3323                           ;1.C: 557: IAPWrite(0x2D,((CH3_remotekey[3]&0x0000FF00)>>8));
  3324  0567  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0568  085A               	movf	_CH3_remotekey+13,w
  3326  0569  00F6               	movwf	?_IAPWrite
  3327  056A  302D               	movlw	45
  3328  056B  263C               	fcall	_IAPWrite
  3329                           
  3330                           ;1.C: 558: IAPWrite(0x2E,((CH3_remotekey[3]&0x00FF0000)>>16));
  3331  056C  1283               	bcf	3,5	;RP0=0, select bank0
  3332  056D  085B               	movf	_CH3_remotekey+14,w
  3333  056E  00F6               	movwf	?_IAPWrite
  3334  056F  302E               	movlw	46
  3335  0570  263C               	fcall	_IAPWrite
  3336                           
  3337                           ;1.C: 560: IAPWrite(0x32,CH3_remotekey_num);
  3338  0571  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0572  0869               	movf	_CH3_remotekey_num,w
  3340  0573  00F6               	movwf	?_IAPWrite
  3341  0574  3032               	movlw	50
  3342  0575  2E3C               	ljmp	_IAPWrite
  3343  0576                     __end_of_CH3_EEPROM_Write:	
  3344                           
  3345                           	psect	text692
  3346  0576                     __ptext692:	
  3347 ;; =============== function _CH3_EEPROM_Write ends ============
  3348                           
  3349                           
  3350 ;; *************** function _CH2_EEPROM_Write *****************
  3351 ;; Defined at:
  3352 ;;		line 524 in file "1.C"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;		None               void
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 20/0
  3363 ;;		On exit  : 20/20
  3364 ;;		Unchanged: FFFDF/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1
  3366 ;;      Params:         0       0       0
  3367 ;;      Locals:         0       0       0
  3368 ;;      Temps:          0       0       0
  3369 ;;      Totals:         0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used:    1
  3372 ;; Hardware stack levels required when called:    1
  3373 ;; This function calls:
  3374 ;;		_IAPWrite
  3375 ;; This function is called by:
  3376 ;;		_KEY
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379  0576                     _CH2_EEPROM_Write:	
  3380                           
  3381                           ;1.C: 525: IAPWrite(0x04,((CH2_remotekey[0]&0x000000FF)>>0));
  3382                           
  3383                           ; Regs used in _CH2_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3384  0576  083D               	movf	_CH2_remotekey,w
  3385  0577  00F6               	movwf	?_IAPWrite
  3386  0578  3004               	movlw	4
  3387  0579  263C               	fcall	_IAPWrite
  3388                           
  3389                           ;1.C: 526: IAPWrite(0x05,((CH2_remotekey[0]&0x0000FF00)>>8));
  3390  057A  1283               	bcf	3,5	;RP0=0, select bank0
  3391  057B  083E               	movf	_CH2_remotekey+1,w
  3392  057C  00F6               	movwf	?_IAPWrite
  3393  057D  3005               	movlw	5
  3394  057E  263C               	fcall	_IAPWrite
  3395                           
  3396                           ;1.C: 527: IAPWrite(0x06,((CH2_remotekey[0]&0x00FF0000)>>16));
  3397  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3398  0580  083F               	movf	_CH2_remotekey+2,w
  3399  0581  00F6               	movwf	?_IAPWrite
  3400  0582  3006               	movlw	6
  3401  0583  263C               	fcall	_IAPWrite
  3402                           
  3403                           ;1.C: 529: IAPWrite(0x10,((CH2_remotekey[1]&0x000000FF)>>0));
  3404  0584  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0585  0841               	movf	_CH2_remotekey+4,w
  3406  0586  00F6               	movwf	?_IAPWrite
  3407  0587  3010               	movlw	16
  3408  0588  263C               	fcall	_IAPWrite
  3409                           
  3410                           ;1.C: 530: IAPWrite(0x11,((CH2_remotekey[1]&0x0000FF00)>>8));
  3411  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3412  058A  0842               	movf	_CH2_remotekey+5,w
  3413  058B  00F6               	movwf	?_IAPWrite
  3414  058C  3011               	movlw	17
  3415  058D  263C               	fcall	_IAPWrite
  3416                           
  3417                           ;1.C: 531: IAPWrite(0x12,((CH2_remotekey[1]&0x00FF0000)>>16));
  3418  058E  1283               	bcf	3,5	;RP0=0, select bank0
  3419  058F  0843               	movf	_CH2_remotekey+6,w
  3420  0590  00F6               	movwf	?_IAPWrite
  3421  0591  3012               	movlw	18
  3422  0592  263C               	fcall	_IAPWrite
  3423                           
  3424                           ;1.C: 533: IAPWrite(0x1C,((CH2_remotekey[2]&0x000000FF)>>0));
  3425  0593  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0594  0845               	movf	_CH2_remotekey+8,w
  3427  0595  00F6               	movwf	?_IAPWrite
  3428  0596  301C               	movlw	28
  3429  0597  263C               	fcall	_IAPWrite
  3430                           
  3431                           ;1.C: 534: IAPWrite(0x1D,((CH2_remotekey[2]&0x0000FF00)>>8));
  3432  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0599  0846               	movf	_CH2_remotekey+9,w
  3434  059A  00F6               	movwf	?_IAPWrite
  3435  059B  301D               	movlw	29
  3436  059C  263C               	fcall	_IAPWrite
  3437                           
  3438                           ;1.C: 535: IAPWrite(0x1E,((CH2_remotekey[2]&0x00FF0000)>>16));
  3439  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3440  059E  0847               	movf	_CH2_remotekey+10,w
  3441  059F  00F6               	movwf	?_IAPWrite
  3442  05A0  301E               	movlw	30
  3443  05A1  263C               	fcall	_IAPWrite
  3444                           
  3445                           ;1.C: 537: IAPWrite(0x28,((CH2_remotekey[3]&0x000000FF)>>0));
  3446  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  3447  05A3  0849               	movf	_CH2_remotekey+12,w
  3448  05A4  00F6               	movwf	?_IAPWrite
  3449  05A5  3028               	movlw	40
  3450  05A6  263C               	fcall	_IAPWrite
  3451                           
  3452                           ;1.C: 538: IAPWrite(0x29,((CH2_remotekey[3]&0x0000FF00)>>8));
  3453  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  3454  05A8  084A               	movf	_CH2_remotekey+13,w
  3455  05A9  00F6               	movwf	?_IAPWrite
  3456  05AA  3029               	movlw	41
  3457  05AB  263C               	fcall	_IAPWrite
  3458                           
  3459                           ;1.C: 539: IAPWrite(0x2A,((CH2_remotekey[3]&0x00FF0000)>>16));
  3460  05AC  1283               	bcf	3,5	;RP0=0, select bank0
  3461  05AD  084B               	movf	_CH2_remotekey+14,w
  3462  05AE  00F6               	movwf	?_IAPWrite
  3463  05AF  302A               	movlw	42
  3464  05B0  263C               	fcall	_IAPWrite
  3465                           
  3466                           ;1.C: 541: IAPWrite(0x31,CH2_remotekey_num);
  3467  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  3468  05B2  0868               	movf	_CH2_remotekey_num,w
  3469  05B3  00F6               	movwf	?_IAPWrite
  3470  05B4  3031               	movlw	49
  3471  05B5  2E3C               	ljmp	_IAPWrite
  3472  05B6                     __end_of_CH2_EEPROM_Write:	
  3473                           
  3474                           	psect	text693
  3475  05B6                     __ptext693:	
  3476 ;; =============== function _CH2_EEPROM_Write ends ============
  3477                           
  3478                           
  3479 ;; *************** function _CH1_EEPROM_Write *****************
  3480 ;; Defined at:
  3481 ;;		line 505 in file "1.C"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;		None               void
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 20/0
  3492 ;;		On exit  : 20/20
  3493 ;;		Unchanged: FFFDF/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1
  3495 ;;      Params:         0       0       0
  3496 ;;      Locals:         0       0       0
  3497 ;;      Temps:          0       0       0
  3498 ;;      Totals:         0       0       0
  3499 ;;Total ram usage:        0 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    1
  3502 ;; This function calls:
  3503 ;;		_IAPWrite
  3504 ;; This function is called by:
  3505 ;;		_KEY
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508  05B6                     _CH1_EEPROM_Write:	
  3509                           
  3510                           ;1.C: 506: IAPWrite(0x00,((CH1_remotekey[0]&0x000000FF)>>0));
  3511                           
  3512                           ; Regs used in _CH1_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3513  05B6  082D               	movf	_CH1_remotekey,w
  3514  05B7  00F6               	movwf	?_IAPWrite
  3515  05B8  3000               	movlw	0
  3516  05B9  263C               	fcall	_IAPWrite
  3517                           
  3518                           ;1.C: 507: IAPWrite(0x01,((CH1_remotekey[0]&0x0000FF00)>>8));
  3519  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  3520  05BB  082E               	movf	_CH1_remotekey+1,w
  3521  05BC  00F6               	movwf	?_IAPWrite
  3522  05BD  3001               	movlw	1
  3523  05BE  263C               	fcall	_IAPWrite
  3524                           
  3525                           ;1.C: 508: IAPWrite(0x02,((CH1_remotekey[0]&0x00FF0000)>>16));
  3526  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3527  05C0  082F               	movf	_CH1_remotekey+2,w
  3528  05C1  00F6               	movwf	?_IAPWrite
  3529  05C2  3002               	movlw	2
  3530  05C3  263C               	fcall	_IAPWrite
  3531                           
  3532                           ;1.C: 510: IAPWrite(0x0C,((CH1_remotekey[1]&0x000000FF)>>0));
  3533  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3534  05C5  0831               	movf	_CH1_remotekey+4,w
  3535  05C6  00F6               	movwf	?_IAPWrite
  3536  05C7  300C               	movlw	12
  3537  05C8  263C               	fcall	_IAPWrite
  3538                           
  3539                           ;1.C: 511: IAPWrite(0x0D,((CH1_remotekey[1]&0x0000FF00)>>8));
  3540  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  3541  05CA  0832               	movf	_CH1_remotekey+5,w
  3542  05CB  00F6               	movwf	?_IAPWrite
  3543  05CC  300D               	movlw	13
  3544  05CD  263C               	fcall	_IAPWrite
  3545                           
  3546                           ;1.C: 512: IAPWrite(0x0E,((CH1_remotekey[1]&0x00FF0000)>>16));
  3547  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3548  05CF  0833               	movf	_CH1_remotekey+6,w
  3549  05D0  00F6               	movwf	?_IAPWrite
  3550  05D1  300E               	movlw	14
  3551  05D2  263C               	fcall	_IAPWrite
  3552                           
  3553                           ;1.C: 514: IAPWrite(0x18,((CH1_remotekey[2]&0x000000FF)>>0));
  3554  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3555  05D4  0835               	movf	_CH1_remotekey+8,w
  3556  05D5  00F6               	movwf	?_IAPWrite
  3557  05D6  3018               	movlw	24
  3558  05D7  263C               	fcall	_IAPWrite
  3559                           
  3560                           ;1.C: 515: IAPWrite(0x19,((CH1_remotekey[2]&0x0000FF00)>>8));
  3561  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3562  05D9  0836               	movf	_CH1_remotekey+9,w
  3563  05DA  00F6               	movwf	?_IAPWrite
  3564  05DB  3019               	movlw	25
  3565  05DC  263C               	fcall	_IAPWrite
  3566                           
  3567                           ;1.C: 516: IAPWrite(0x1A,((CH1_remotekey[2]&0x00FF0000)>>16));
  3568  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  3569  05DE  0837               	movf	_CH1_remotekey+10,w
  3570  05DF  00F6               	movwf	?_IAPWrite
  3571  05E0  301A               	movlw	26
  3572  05E1  263C               	fcall	_IAPWrite
  3573                           
  3574                           ;1.C: 518: IAPWrite(0x24,((CH1_remotekey[3]&0x000000FF)>>0));
  3575  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3576  05E3  0839               	movf	_CH1_remotekey+12,w
  3577  05E4  00F6               	movwf	?_IAPWrite
  3578  05E5  3024               	movlw	36
  3579  05E6  263C               	fcall	_IAPWrite
  3580                           
  3581                           ;1.C: 519: IAPWrite(0x25,((CH1_remotekey[3]&0x0000FF00)>>8));
  3582  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3583  05E8  083A               	movf	_CH1_remotekey+13,w
  3584  05E9  00F6               	movwf	?_IAPWrite
  3585  05EA  3025               	movlw	37
  3586  05EB  263C               	fcall	_IAPWrite
  3587                           
  3588                           ;1.C: 520: IAPWrite(0x26,((CH1_remotekey[3]&0x00FF0000)>>16));
  3589  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3590  05ED  083B               	movf	_CH1_remotekey+14,w
  3591  05EE  00F6               	movwf	?_IAPWrite
  3592  05EF  3026               	movlw	38
  3593  05F0  263C               	fcall	_IAPWrite
  3594                           
  3595                           ;1.C: 522: IAPWrite(0x30,CH1_remotekey_num);
  3596  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3597  05F2  0867               	movf	_CH1_remotekey_num,w
  3598  05F3  00F6               	movwf	?_IAPWrite
  3599  05F4  3030               	movlw	48
  3600  05F5  2E3C               	ljmp	_IAPWrite
  3601  05F6                     __end_of_CH1_EEPROM_Write:	
  3602                           
  3603                           	psect	text694
  3604  069E                     __ptext694:	
  3605 ;; =============== function _CH1_EEPROM_Write ends ============
  3606                           
  3607                           
  3608 ;; *************** function i1_EX_INT_FallingEdge *****************
  3609 ;; Defined at:
  3610 ;;		line 421 in file "1.C"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;		None               void
  3617 ;; Registers used:
  3618 ;;		None
  3619 ;; Tracked objects:
  3620 ;;		On entry : 20/0
  3621 ;;		On exit  : 20/20
  3622 ;;		Unchanged: FFFDF/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1
  3624 ;;      Params:         0       0       0
  3625 ;;      Locals:         0       0       0
  3626 ;;      Temps:          0       0       0
  3627 ;;      Totals:         0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; This function calls:
  3631 ;;		Nothing
  3632 ;; This function is called by:
  3633 ;;		_ISR
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636  069E                     i1_EX_INT_FallingEdge:	
  3637                           
  3638                           ;1.C: 422: INTEDG =0;
  3639                           
  3640                           ; Regs used in i1_EX_INT_FallingEdge: []
  3641  069E  1683               	bsf	3,5	;RP0=1, select bank1
  3642  069F  1301               	bcf	1,6
  3643                           
  3644                           ;1.C: 423: FLAGs &= ~0x01;
  3645  06A0  1074               	bcf	_FLAGs,0
  3646  06A1  0008               	return
  3647  06A2                     __end_ofi1_EX_INT_FallingEdge:	
  3648                           
  3649                           	psect	text695
  3650  060F                     __ptext695:	
  3651 ;; =============== function i1_EX_INT_FallingEdge ends ============
  3652                           
  3653                           
  3654 ;; *************** function ___wmul *****************
  3655 ;; Defined at:
  3656 ;;		line 3 in file "f:\program files (x86)\fmd\fmdide\data\sources\wmul.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  multiplier      2    0[COMMON] unsigned int 
  3659 ;;  multiplicand    2    2[COMMON] unsigned int 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  product         2    4[COMMON] unsigned int 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  2    0[COMMON] unsigned int 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0
  3666 ;; Tracked objects:
  3667 ;;		On entry : 20/20
  3668 ;;		On exit  : 20/20
  3669 ;;		Unchanged: FFFDF/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1
  3671 ;;      Params:         4       0       0
  3672 ;;      Locals:         2       0       0
  3673 ;;      Temps:          0       0       0
  3674 ;;      Totals:         6       0       0
  3675 ;;Total ram usage:        6 bytes
  3676 ;; Hardware stack levels used:    1
  3677 ;; This function calls:
  3678 ;;		Nothing
  3679 ;; This function is called by:
  3680 ;;		_ISR
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683  060F                     ___wmul:	
  3684                           
  3685                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3686  060F  01FA               	clrf	___wmul@product
  3687  0610  01FB               	clrf	___wmul@product+1
  3688  0611                     i1l3485:	
  3689  0611  1C76               	btfss	___wmul@multiplier,0
  3690  0612  2E19               	goto	i1l3489
  3691  0613  0878               	movf	___wmul@multiplicand,w
  3692  0614  07FA               	addwf	___wmul@product,f
  3693  0615  1803               	skipnc
  3694  0616  0AFB               	incf	___wmul@product+1,f
  3695  0617  0879               	movf	___wmul@multiplicand+1,w
  3696  0618  07FB               	addwf	___wmul@product+1,f
  3697  0619                     i1l3489:	
  3698  0619  1003               	clrc
  3699  061A  0DF8               	rlf	___wmul@multiplicand,f
  3700  061B  0DF9               	rlf	___wmul@multiplicand+1,f
  3701  061C  1003               	clrc
  3702  061D  0CF7               	rrf	___wmul@multiplier+1,f
  3703  061E  0CF6               	rrf	___wmul@multiplier,f
  3704  061F  0877               	movf	___wmul@multiplier+1,w
  3705  0620  0476               	iorwf	___wmul@multiplier,w
  3706  0621  1D03               	skipz
  3707  0622  2E11               	goto	i1l3485
  3708  0623  087B               	movf	___wmul@product+1,w
  3709  0624  00F7               	movwf	?___wmul+1
  3710  0625  087A               	movf	___wmul@product,w
  3711  0626  00F6               	movwf	?___wmul
  3712  0627  0008               	return
  3713  0628                     __end_of___wmul:	
  3714                           
  3715                           	psect	text696
  3716  063C                     __ptext696:	
  3717 ;; =============== function ___wmul ends ============
  3718                           
  3719                           
  3720 ;; *************** function _IAPWrite *****************
  3721 ;; Defined at:
  3722 ;;		line 494 in file "1.C"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  EEAddr          1    wreg     unsigned char 
  3725 ;;  Data            1    0[COMMON] unsigned char 
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;  EEAddr          1    1[COMMON] unsigned char 
  3728 ;; Return value:  Size  Location     Type
  3729 ;;		None               void
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 20/0
  3734 ;;		On exit  : 20/20
  3735 ;;		Unchanged: FFFDF/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1
  3737 ;;      Params:         1       0       0
  3738 ;;      Locals:         1       0       0
  3739 ;;      Temps:          0       0       0
  3740 ;;      Totals:         2       0       0
  3741 ;;Total ram usage:        2 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_CH1_EEPROM_Write
  3747 ;;		_CH2_EEPROM_Write
  3748 ;;		_CH3_EEPROM_Write
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751  063C                     _IAPWrite:	
  3752                           
  3753                           ; Regs used in _IAPWrite: [wreg+status,2+status,0]
  3754                           ;IAPWrite@EEAddr stored from wreg
  3755  063C  00F7               	movwf	IAPWrite@EEAddr
  3756                           
  3757                           ;1.C: 495: GIE = 0;
  3758  063D  138B               	bcf	11,7
  3759  063E                     i1l957:	
  3760                           ;1.C: 496: while(GIE);
  3761                           
  3762  063E  1B8B               	btfsc	11,7
  3763  063F  2E3E               	goto	i1l957
  3764                           
  3765                           ;1.C: 497: EEADR = EEAddr;
  3766  0640  0877               	movf	IAPWrite@EEAddr,w
  3767  0641  1683               	bsf	3,5	;RP0=1, select bank1
  3768  0642  009B               	movwf	27	;volatile
  3769                           
  3770                           ;1.C: 498: EEDAT = Data;
  3771  0643  0876               	movf	IAPWrite@Data,w
  3772  0644  009A               	movwf	26	;volatile
  3773  0645  3034               	movlw	52
  3774                           
  3775                           ;1.C: 499: EEIF = 0;
  3776  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0647  138C               	bcf	12,7
  3778                           
  3779                           ;1.C: 500: EECON1 |= 0x34;
  3780  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3781  0649  049C               	iorwf	28,f	;volatile
  3782                           
  3783                           ;1.C: 501: WR = 1;
  3784  064A  141D               	bsf	29,0
  3785  064B                     i1l960:	
  3786                           ;1.C: 502: while(WR);
  3787                           
  3788  064B  181D               	btfsc	29,0
  3789  064C  2E4B               	goto	i1l960
  3790                           
  3791                           ;1.C: 503: GIE = 1;
  3792  064D  178B               	bsf	11,7
  3793  064E  0008               	return
  3794  064F                     __end_of_IAPWrite:	
  3795                           
  3796                           	psect	text697
  3797  03EA                     __ptext697:	
  3798 ;; =============== function _IAPWrite ends ============
  3799                           
  3800                           
  3801 ;; *************** function _KEYSCAN *****************
  3802 ;; Defined at:
  3803 ;;		line 590 in file "1.C"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;		None               void
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0
  3812 ;; Tracked objects:
  3813 ;;		On entry : 20/0
  3814 ;;		On exit  : 20/0
  3815 ;;		Unchanged: FFFDF/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1
  3817 ;;      Params:         0       0       0
  3818 ;;      Locals:         0       0       0
  3819 ;;      Temps:          0       0       0
  3820 ;;      Totals:         0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_ISR
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829  03EA                     _KEYSCAN:	
  3830                           
  3831                           ;1.C: 591: if(PRESSED == 0){
  3832                           
  3833                           ; Regs used in _KEYSCAN: [wreg+status,2+status,0]
  3834  03EA  08F5               	movf	_PRESSED,f
  3835  03EB  1D03               	skipz
  3836  03EC  0008               	return
  3837                           
  3838                           ;1.C: 592: if(PC5 == 0){
  3839  03ED  1A87               	btfsc	7,5
  3840  03EE  2C26               	goto	i1l3211
  3841                           
  3842                           ;1.C: 593: if(KEY1_LongPress < 125) PRESS_FLAG |= 0x01;
  3843  03EF  307D               	movlw	125
  3844  03F0  0222               	subwf	_KEY1_LongPress,w
  3845  03F1  1803               	skipnc
  3846  03F2  2BF4               	goto	i1l3177
  3847  03F3  1427               	bsf	_PRESS_FLAG,0
  3848  03F4                     i1l3177:	
  3849                           
  3850                           ;1.C: 594: if(KEY1_LongPress < 254) KEY1_LongPress++;
  3851  03F4  30FE               	movlw	254
  3852  03F5  0222               	subwf	_KEY1_LongPress,w
  3853  03F6  1C03               	btfss	3,0
  3854  03F7  0AA2               	incf	_KEY1_LongPress,f
  3855                           
  3856                           ;1.C: 595: if((KEY1_LongPress > 125) && (KEY1_LongPress < 250)){
  3857  03F8  307E               	movlw	126
  3858  03F9  0222               	subwf	_KEY1_LongPress,w
  3859  03FA  1C03               	skipc
  3860  03FB  2C06               	goto	i1l3193
  3861  03FC  30FA               	movlw	250
  3862  03FD  0222               	subwf	_KEY1_LongPress,w
  3863  03FE  1803               	skipnc
  3864  03FF  2C06               	goto	i1l3193
  3865                           
  3866                           ;1.C: 596: PRESS_FLAG |= 0x10;
  3867  0400  1627               	bsf	_PRESS_FLAG,4
  3868                           
  3869                           ;1.C: 597: match_slice = 0;
  3870  0401  01A8               	clrf	_match_slice
  3871                           
  3872                           ;1.C: 598: PC0 = 0;
  3873  0402  1007               	bcf	7,0
  3874                           
  3875                           ;1.C: 599: PA7 = 0;
  3876  0403  1385               	bcf	5,7
  3877                           
  3878                           ;1.C: 600: LONGPRESS_OverTime_Counter = 0;
  3879  0404  1683               	bsf	3,5	;RP0=1, select bank1
  3880  0405  01AA               	clrf	_LONGPRESS_OverTime_Counter^(0+128)
  3881  0406                     i1l3193:	
  3882                           
  3883                           ;1.C: 601: }
  3884                           ;1.C: 602: if(KEY1_LongPress > 250){
  3885  0406  30FB               	movlw	251
  3886  0407  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0408  0222               	subwf	_KEY1_LongPress,w
  3888  0409  1C03               	skipc
  3889  040A  2C27               	goto	i1l3213
  3890                           
  3891                           ;1.C: 603: CH1_remotekey[0] = 0xFFFFFFFF;
  3892  040B  30FF               	movlw	255
  3893  040C  00B0               	movwf	_CH1_remotekey+3
  3894  040D  00AF               	movwf	_CH1_remotekey+2
  3895  040E  00AE               	movwf	_CH1_remotekey+1
  3896  040F  00AD               	movwf	_CH1_remotekey
  3897                           
  3898                           ;1.C: 604: CH1_remotekey[1] = 0xFFFFFFFF;
  3899  0410  00B4               	movwf	_CH1_remotekey+7
  3900  0411  00B3               	movwf	_CH1_remotekey+6
  3901  0412  00B2               	movwf	_CH1_remotekey+5
  3902  0413  00B1               	movwf	_CH1_remotekey+4
  3903                           
  3904                           ;1.C: 605: CH1_remotekey[2] = 0xFFFFFFFF;
  3905  0414  00B8               	movwf	_CH1_remotekey+11
  3906  0415  00B7               	movwf	_CH1_remotekey+10
  3907  0416  00B6               	movwf	_CH1_remotekey+9
  3908  0417  00B5               	movwf	_CH1_remotekey+8
  3909                           
  3910                           ;1.C: 606: CH1_remotekey[3] = 0xFFFFFFFF;
  3911  0418  00BC               	movwf	_CH1_remotekey+15
  3912  0419  00BB               	movwf	_CH1_remotekey+14
  3913  041A  00BA               	movwf	_CH1_remotekey+13
  3914  041B  00B9               	movwf	_CH1_remotekey+12
  3915                           
  3916                           ;1.C: 607: CH1_remotekey_num = 0;
  3917  041C  01E7               	clrf	_CH1_remotekey_num
  3918                           
  3919                           ;1.C: 608: CH1_remotekey_Latest = 0;
  3920  041D  1683               	bsf	3,5	;RP0=1, select bank1
  3921  041E  01B3               	clrf	_CH1_remotekey_Latest^(0+128)
  3922                           
  3923                           ;1.C: 609: PRESS_FLAG &= ~0x10;
  3924  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0420  1227               	bcf	_PRESS_FLAG,4
  3926                           
  3927                           ;1.C: 610: PRESS_FLAG &= ~0x01;
  3928  0421  1027               	bcf	_PRESS_FLAG,0
  3929                           
  3930                           ;1.C: 611: PC0 = 1;
  3931  0422  1407               	bsf	7,0
  3932                           
  3933                           ;1.C: 612: PA7 = 1;
  3934  0423  1785               	bsf	5,7
  3935                           
  3936                           ;1.C: 613: KEY_Match_counter = 0;
  3937  0424  01A5               	clrf	_KEY_Match_counter
  3938  0425  2C27               	goto	i1l3213
  3939  0426                     i1l3211:	
  3940  0426  01A2               	clrf	_KEY1_LongPress
  3941  0427                     i1l3213:	
  3942                           
  3943                           ;1.C: 617: if(PA4 == 0){
  3944  0427  1A05               	btfsc	5,4
  3945  0428  2C60               	goto	i1l3253
  3946                           
  3947                           ;1.C: 618: if(KEY2_LongPress < 125) PRESS_FLAG |= 0x02;
  3948  0429  307D               	movlw	125
  3949  042A  0223               	subwf	_KEY2_LongPress,w
  3950  042B  1803               	skipnc
  3951  042C  2C2E               	goto	i1l3219
  3952  042D  14A7               	bsf	_PRESS_FLAG,1
  3953  042E                     i1l3219:	
  3954                           
  3955                           ;1.C: 619: if(KEY2_LongPress < 254) KEY2_LongPress++;
  3956  042E  30FE               	movlw	254
  3957  042F  0223               	subwf	_KEY2_LongPress,w
  3958  0430  1C03               	btfss	3,0
  3959  0431  0AA3               	incf	_KEY2_LongPress,f
  3960                           
  3961                           ;1.C: 620: if((KEY2_LongPress > 125) && (KEY2_LongPress < 250)){
  3962  0432  307E               	movlw	126
  3963  0433  0223               	subwf	_KEY2_LongPress,w
  3964  0434  1C03               	skipc
  3965  0435  2C40               	goto	i1l3235
  3966  0436  30FA               	movlw	250
  3967  0437  0223               	subwf	_KEY2_LongPress,w
  3968  0438  1803               	skipnc
  3969  0439  2C40               	goto	i1l3235
  3970                           
  3971                           ;1.C: 621: PRESS_FLAG |= 0x20;
  3972  043A  16A7               	bsf	_PRESS_FLAG,5
  3973                           
  3974                           ;1.C: 622: match_slice = 0;
  3975  043B  01A8               	clrf	_match_slice
  3976                           
  3977                           ;1.C: 623: PC0 = 0;
  3978  043C  1007               	bcf	7,0
  3979                           
  3980                           ;1.C: 624: PA6 = 0;
  3981  043D  1305               	bcf	5,6
  3982                           
  3983                           ;1.C: 625: LONGPRESS_OverTime_Counter = 0;
  3984  043E  1683               	bsf	3,5	;RP0=1, select bank1
  3985  043F  01AA               	clrf	_LONGPRESS_OverTime_Counter^(0+128)
  3986  0440                     i1l3235:	
  3987                           
  3988                           ;1.C: 626: }
  3989                           ;1.C: 627: if(KEY2_LongPress > 250){
  3990  0440  30FB               	movlw	251
  3991  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0442  0223               	subwf	_KEY2_LongPress,w
  3993  0443  1C03               	skipc
  3994  0444  2C61               	goto	i1l3255
  3995                           
  3996                           ;1.C: 628: CH2_remotekey[0] = 0xFFFFFFFF;
  3997  0445  30FF               	movlw	255
  3998  0446  00C0               	movwf	_CH2_remotekey+3
  3999  0447  00BF               	movwf	_CH2_remotekey+2
  4000  0448  00BE               	movwf	_CH2_remotekey+1
  4001  0449  00BD               	movwf	_CH2_remotekey
  4002                           
  4003                           ;1.C: 629: CH2_remotekey[1] = 0xFFFFFFFF;
  4004  044A  00C4               	movwf	_CH2_remotekey+7
  4005  044B  00C3               	movwf	_CH2_remotekey+6
  4006  044C  00C2               	movwf	_CH2_remotekey+5
  4007  044D  00C1               	movwf	_CH2_remotekey+4
  4008                           
  4009                           ;1.C: 630: CH2_remotekey[2] = 0xFFFFFFFF;
  4010  044E  00C8               	movwf	_CH2_remotekey+11
  4011  044F  00C7               	movwf	_CH2_remotekey+10
  4012  0450  00C6               	movwf	_CH2_remotekey+9
  4013  0451  00C5               	movwf	_CH2_remotekey+8
  4014                           
  4015                           ;1.C: 631: CH2_remotekey[3] = 0xFFFFFFFF;
  4016  0452  00CC               	movwf	_CH2_remotekey+15
  4017  0453  00CB               	movwf	_CH2_remotekey+14
  4018  0454  00CA               	movwf	_CH2_remotekey+13
  4019  0455  00C9               	movwf	_CH2_remotekey+12
  4020                           
  4021                           ;1.C: 632: CH2_remotekey_num = 0;
  4022  0456  01E8               	clrf	_CH2_remotekey_num
  4023                           
  4024                           ;1.C: 633: CH2_remotekey_Latest = 0;
  4025  0457  1683               	bsf	3,5	;RP0=1, select bank1
  4026  0458  01B4               	clrf	_CH2_remotekey_Latest^(0+128)
  4027                           
  4028                           ;1.C: 634: PRESS_FLAG &= ~0x20;
  4029  0459  1283               	bcf	3,5	;RP0=0, select bank0
  4030  045A  12A7               	bcf	_PRESS_FLAG,5
  4031                           
  4032                           ;1.C: 635: PRESS_FLAG &= ~0x02;
  4033  045B  10A7               	bcf	_PRESS_FLAG,1
  4034                           
  4035                           ;1.C: 636: PC0 = 1;
  4036  045C  1407               	bsf	7,0
  4037                           
  4038                           ;1.C: 637: PA6 = 1;
  4039  045D  1705               	bsf	5,6
  4040                           
  4041                           ;1.C: 638: KEY_Match_counter = 0;
  4042  045E  01A5               	clrf	_KEY_Match_counter
  4043  045F  2C61               	goto	i1l3255
  4044  0460                     i1l3253:	
  4045  0460  01A3               	clrf	_KEY2_LongPress
  4046  0461                     i1l3255:	
  4047                           
  4048                           ;1.C: 642: if(PC4 == 0){
  4049  0461  1A07               	btfsc	7,4
  4050  0462  2C9A               	goto	i1l3295
  4051                           
  4052                           ;1.C: 643: if(KEY3_LongPress < 125) PRESS_FLAG |= 0x04;
  4053  0463  307D               	movlw	125
  4054  0464  0224               	subwf	_KEY3_LongPress,w
  4055  0465  1803               	skipnc
  4056  0466  2C68               	goto	i1l3261
  4057  0467  1527               	bsf	_PRESS_FLAG,2
  4058  0468                     i1l3261:	
  4059                           
  4060                           ;1.C: 644: if(KEY3_LongPress < 254) KEY3_LongPress++;
  4061  0468  30FE               	movlw	254
  4062  0469  0224               	subwf	_KEY3_LongPress,w
  4063  046A  1C03               	btfss	3,0
  4064  046B  0AA4               	incf	_KEY3_LongPress,f
  4065                           
  4066                           ;1.C: 645: if((KEY3_LongPress > 125) && (KEY3_LongPress < 250)){
  4067  046C  307E               	movlw	126
  4068  046D  0224               	subwf	_KEY3_LongPress,w
  4069  046E  1C03               	skipc
  4070  046F  2C7A               	goto	i1l3277
  4071  0470  30FA               	movlw	250
  4072  0471  0224               	subwf	_KEY3_LongPress,w
  4073  0472  1803               	skipnc
  4074  0473  2C7A               	goto	i1l3277
  4075                           
  4076                           ;1.C: 646: PRESS_FLAG |= 0x40;
  4077  0474  1727               	bsf	_PRESS_FLAG,6
  4078                           
  4079                           ;1.C: 647: match_slice = 0;
  4080  0475  01A8               	clrf	_match_slice
  4081                           
  4082                           ;1.C: 648: PC0 = 0;
  4083  0476  1007               	bcf	7,0
  4084                           
  4085                           ;1.C: 649: PA5 = 0;
  4086  0477  1285               	bcf	5,5
  4087                           
  4088                           ;1.C: 650: LONGPRESS_OverTime_Counter = 0;
  4089  0478  1683               	bsf	3,5	;RP0=1, select bank1
  4090  0479  01AA               	clrf	_LONGPRESS_OverTime_Counter^(0+128)
  4091  047A                     i1l3277:	
  4092                           
  4093                           ;1.C: 651: }
  4094                           ;1.C: 652: if(KEY3_LongPress > 250){
  4095  047A  30FB               	movlw	251
  4096  047B  1283               	bcf	3,5	;RP0=0, select bank0
  4097  047C  0224               	subwf	_KEY3_LongPress,w
  4098  047D  1C03               	skipc
  4099  047E  2C9B               	goto	i1l3297
  4100                           
  4101                           ;1.C: 653: CH3_remotekey[0] = 0xFFFFFFFF;
  4102  047F  30FF               	movlw	255
  4103  0480  00D0               	movwf	_CH3_remotekey+3
  4104  0481  00CF               	movwf	_CH3_remotekey+2
  4105  0482  00CE               	movwf	_CH3_remotekey+1
  4106  0483  00CD               	movwf	_CH3_remotekey
  4107                           
  4108                           ;1.C: 654: CH3_remotekey[1] = 0xFFFFFFFF;
  4109  0484  00D4               	movwf	_CH3_remotekey+7
  4110  0485  00D3               	movwf	_CH3_remotekey+6
  4111  0486  00D2               	movwf	_CH3_remotekey+5
  4112  0487  00D1               	movwf	_CH3_remotekey+4
  4113                           
  4114                           ;1.C: 655: CH3_remotekey[2] = 0xFFFFFFFF;
  4115  0488  00D8               	movwf	_CH3_remotekey+11
  4116  0489  00D7               	movwf	_CH3_remotekey+10
  4117  048A  00D6               	movwf	_CH3_remotekey+9
  4118  048B  00D5               	movwf	_CH3_remotekey+8
  4119                           
  4120                           ;1.C: 656: CH3_remotekey[3] = 0xFFFFFFFF;
  4121  048C  00DC               	movwf	_CH3_remotekey+15
  4122  048D  00DB               	movwf	_CH3_remotekey+14
  4123  048E  00DA               	movwf	_CH3_remotekey+13
  4124  048F  00D9               	movwf	_CH3_remotekey+12
  4125                           
  4126                           ;1.C: 657: CH3_remotekey_num = 0;
  4127  0490  01E9               	clrf	_CH3_remotekey_num
  4128                           
  4129                           ;1.C: 658: CH3_remotekey_Latest = 0;
  4130  0491  1683               	bsf	3,5	;RP0=1, select bank1
  4131  0492  01B5               	clrf	_CH3_remotekey_Latest^(0+128)
  4132                           
  4133                           ;1.C: 659: PRESS_FLAG &= ~0x40;
  4134  0493  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0494  1327               	bcf	_PRESS_FLAG,6
  4136                           
  4137                           ;1.C: 660: PRESS_FLAG &= ~0x04;
  4138  0495  1127               	bcf	_PRESS_FLAG,2
  4139                           
  4140                           ;1.C: 661: PC0 = 1;
  4141  0496  1407               	bsf	7,0
  4142                           
  4143                           ;1.C: 662: PA5 = 1;
  4144  0497  1685               	bsf	5,5
  4145                           
  4146                           ;1.C: 663: KEY_Match_counter = 0;
  4147  0498  01A5               	clrf	_KEY_Match_counter
  4148  0499  2C9B               	goto	i1l3297
  4149  049A                     i1l3295:	
  4150  049A  01A4               	clrf	_KEY3_LongPress
  4151  049B                     i1l3297:	
  4152                           
  4153                           ;1.C: 667: if((PRESS_FLAG>0)&&(PC5==1)&&(PA4==1)&&(PC4==1)){
  4154  049B  0827               	movf	_PRESS_FLAG,w
  4155  049C  1D03               	skipz
  4156  049D  1E87               	btfss	7,5
  4157  049E  0008               	return
  4158  049F  1A05               	btfsc	5,4
  4159  04A0  1E07               	btfss	7,4
  4160  04A1  0008               	return
  4161                           
  4162                           ;1.C: 668: PRESSED = PRESS_FLAG;
  4163  04A2  00F5               	movwf	_PRESSED
  4164                           
  4165                           ;1.C: 669: PRESS_FLAG = 0;
  4166  04A3  01A7               	clrf	_PRESS_FLAG
  4167  04A4  0008               	return
  4168  04A5                     __end_of_KEYSCAN:	
  4169                           
  4170                           	psect	text698
  4171  06A2                     __ptext698:	
  4172 ;; =============== function _KEYSCAN ends ============
  4173                           
  4174                           
  4175 ;; *************** function _led1_debug *****************
  4176 ;; Defined at:
  4177 ;;		line 404 in file "1.C"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;		None               void
  4184 ;; Registers used:
  4185 ;;		wreg
  4186 ;; Tracked objects:
  4187 ;;		On entry : 20/0
  4188 ;;		On exit  : 20/0
  4189 ;;		Unchanged: FFFDF/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1
  4191 ;;      Params:         0       0       0
  4192 ;;      Locals:         0       0       0
  4193 ;;      Temps:          0       0       0
  4194 ;;      Totals:         0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_ISR
  4201 ;;		_KEY
  4202 ;; This function uses a non-reentrant model
  4203 ;;
  4204  06A2                     _led1_debug:	
  4205                           
  4206                           ;1.C: 406: PC0 = ~PC0;
  4207                           
  4208                           ; Regs used in _led1_debug: [wreg]
  4209  06A2  3001               	movlw	1
  4210  06A3  0687               	xorwf	7,f
  4211  06A4  0008               	return
  4212  06A5                     __end_of_led1_debug:	
  4213                           
  4214                           	psect	text699
  4215  06A5                     __ptext699:	
  4216 ;; =============== function _led1_debug ends ============
  4217                           
  4218                           
  4219 ;; *************** function _EX_INT_RisingEdge *****************
  4220 ;; Defined at:
  4221 ;;		line 417 in file "1.C"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;		None               void
  4228 ;; Registers used:
  4229 ;;		None
  4230 ;; Tracked objects:
  4231 ;;		On entry : 20/20
  4232 ;;		On exit  : 20/20
  4233 ;;		Unchanged: FFFDF/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1
  4235 ;;      Params:         0       0       0
  4236 ;;      Locals:         0       0       0
  4237 ;;      Temps:          0       0       0
  4238 ;;      Totals:         0       0       0
  4239 ;;Total ram usage:        0 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; This function calls:
  4242 ;;		Nothing
  4243 ;; This function is called by:
  4244 ;;		_ISR
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247  06A5                     _EX_INT_RisingEdge:	
  4248                           
  4249                           ;1.C: 418: INTEDG =1;
  4250                           
  4251                           ; Regs used in _EX_INT_RisingEdge: []
  4252  06A5  1701               	bsf	1,6
  4253                           
  4254                           ;1.C: 419: FLAGs |= 0x01;
  4255  06A6  1474               	bsf	_FLAGs,0
  4256  06A7  0008               	return
  4257  06A8                     __end_of_EX_INT_RisingEdge:	
  4258                           
  4259                           	psect	text700
  4260  0000                     __ptext700:	
  4261 ;; =============== function _EX_INT_RisingEdge ends ============
  4262                           
  4263  007E                     btemp	set	126	;btemp
  4264  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Jan 22 10:20:38 2020

                IAPRead@EEAddr 00AB                              pc 0002                             _RD 04E0  
                           _WR 04E8                             fsr 0004            ___wmul@multiplicand 0078  
               _KEY3_LongPress 0024                            _C1R 08CA                            _C2R 08D2  
                          l933 0000                            l942 0000                            l951 0000  
                          l945 0000                            l954 0000                            l939 0000  
                          l948 0000                            l975 0000                            l978 0000  
                          _GIE 005F                            _PA2 002A                            _PA3 002B  
                          _PC0 0038                            _PA4 002C                            _PA5 002D  
                          _PA6 002E                            _PA7 002F                            _PC4 003C  
                          _PC5 003D                            _KEY 0263                            _ISR 0010  
                          _SR0 0CF6                            _SR1 0CF7                            _PSA 040B  
                          _VR0 08C0                            _VR1 08C1                            _VR2 08C2  
                          _VR3 08C3                            _VRR 08C5                            _num 002A  
                          fsr0 0004                            indf 0000       __end_of_CH2_EEPROM_Write 05B6  
              __end_of_IAPRead 0691                           ?_KEY 0076                           ?_ISR 0076  
              __end_of_KEYSCAN 04A5                           _C1OE 08CD                           _C2OE 08D5  
                         _C1ON 08CF                           _C2ON 08D7                           l3603 0000  
                         l3611 0000                           l3621 0000                           l3613 0000  
                         l3605 0000                           l3701 0000                           l3623 0000  
                         l3615 0000                           l3607 0000                           l3631 0000  
                         l3711 0000                           l3703 0000                           l3625 0000  
                         l3617 0000                           l3609 0000                           l3633 0000  
                         l3641 0000                           l3721 0000                           l3713 0000  
                         l3705 0000                           l3619 0000                           l3627 0000  
                         l3635 0000                           l3651 0000                           l3643 0000  
                         l3723 063A                           l3715 0000                           l3707 0000  
                         l3629 0000                           l3637 0000                           l3653 0000  
                         l3645 0000                           l3717 0000                           l3709 0000  
                         l3639 0000                           l3655 0000                           l3647 0000  
                         l3663 0000                           l3671 0000                           l3719 0000  
                         l3649 0000                           l3657 0000                           l3665 0000  
                         l3681 0000                           l3673 0000                           l3659 0000  
                         l3667 0000                           l3683 0000                           l3675 0000  
                         l3691 0000                           l3669 0000                           l3677 0000  
                         l3685 0000                           l3693 0000                           l3679 0000  
                         l3687 0000                           l3695 0000                           l3689 0000  
                         l3697 0000                           l3699 0000                           _EEIF 0067  
                         _ANS0 08F0                           _ANS1 08F1                           _ANS2 08F2  
                         _ANS3 08F3                           _ANS4 08F4                           _ANS5 08F5  
                         _ANS6 08F6                           _ANS7 08F7                           _ANS8 08F8  
                         _ANS9 08F9                           _T0IE 005D                           _T0IF 005A  
                         _T0CS 040D                           _IOCB 0116                           _PEIE 005E  
                         _INTE 005C                           _INTF 0059                           _PR2H 0092  
                         _PR2L 0091                           _TMR0 0001                           _STRA 0CE8  
                         _STRB 0CE9                           _STRC 0CEA                           _STRD 0CEB  
                         _WREN 0C62                           _WPUA 0095                           _WPUB 0115  
                         _WPUC 0093         ??i1_EX_INT_FallingEdge 0076                           _buff 0020  
                         _main 0628                           btemp 007E                           start 000F  
     __size_of_EEPROM_ReadWord 001A             _Key_dealed_counter 0026                          ??_KEY 0078  
                        ??_ISR 005D                 _Ctrl_remotekey 00A0                 _TIMER0_INITIAL 0670  
             __end_of_IAPWrite 064F                          _C1CH0 08C8                          _C1CH1 08C9  
                        _C2CH0 08D0                          _C2CH1 08D1                          _C1SEN 0CF5  
                        _C2REN 0CF4                          _C1POL 08CC                          _C2POL 08D4  
                        _C1OUT 08CE                          _C2OUT 08D6                          ?_main 0076  
                        _EEADR 009B                          _EEDAT 009A                          _ANS10 08FA  
                        _ANS11 08FB                          _EEPGD 0C67                 _TIMER2_INITIAL 064F  
                        _ANSEL 011E                          _FLAGs 0074                          _IOCA2 04B2  
                        _IOCB4 08B4                          _IOCB5 08B5                          _IOCB6 08B6  
                        _IOCB7 08B7                          _T1GSS 08D9                          i1l910 01BC  
                        i1l913 01BF                          i1l930 0000                          i1l860 001D  
                        i1l927 0217                          i1l936 0000                          i1l960 064B  
                        i1l872 0141                          i1l873 00D1                          i1l963 0000  
                        i1l939 0000                          i1l867 005E                          i1l972 0000  
                        i1l957 063E                          i1l869 008B                          i1l966 0000  
                        i1l878 0109                          i1l969 0000                          i1l899 0180  
                        _VP6EN 08C4                          _TMR2H 0013                          _TMR2L 0011  
                        _PSRCA 0088                          _PSRCC 0094                          _PORTA 0005  
                        _PORTC 0007                          _SRCON 019E                   ?_INT_INITIAL 0076  
                        _PULSR 0CF2                          _PULSS 0CF3                          _TRISA 0085  
                        _TRISC 0087                          _VRCON 0118                          _WPUB4 08AC  
                        _WPUB5 08AD                          _WPUB6 08AE                          _WPUB7 08AF  
             __end_of_OSC_INIT 060F            IAPRead@ReEEPROMread 00AC                          pclath 000A  
                        status 0003                          wtemp0 007E             _EX_INT_FallingEdge 0696  
         __size_of_EEPROM_Read 0042                   _ms16_counter 0029                   __end_of_main 063C  
       __end_of_TIMER0_INITIAL 067C            ?_EX_INT_FallingEdge 0076         __end_of_TIMER2_INITIAL 0661  
              _Match_remotekey 0070                         ??_main 00B3                   IAPWrite@Data 0076  
                    ??_IAPRead 00AB                      ??_KEYSCAN 0076              ?_CH1_EEPROM_Write 0076  
     __end_of_CH3_EEPROM_Write 0576                         _C1VREN 08C7                         _C2VREN 08C6  
                       _C2SYNC 08D8             ??_CH1_EEPROM_Write 0078                         i1S3765 069A  
                       _EEADRH 010F                         _EEDATH 010E                         _EECON1 009C  
         ??_EX_INT_FallingEdge 00AB                         _ANSELH 011F                         _MC1OUT 08DF  
                       _MC2OUT 08DE                         _T2CON0 0012                         _T2CON1 009E  
                       i1l1010 026F                         i1l1011 0273                         i1l1012 0276  
                       i1l1004 03AD                         i1l1014 027A                         i1l1015 027E  
                       i1l1016 0281                         i1l1018 0285                         i1l3003 0000  
                       i1l3101 01B2                         i1l3013 015C                         i1l3005 0000  
                       i1l3021 0162                         i1l3015 0000                         i1l3007 0000  
                       i1l3201 0000                         i1l3113 0000                         i1l3041 0000  
                       i1l3033 0000                         i1l3017 015F                         i1l3203 0000  
                       i1l3211 0426                         i1l3131 0000                         i1l3123 0000  
                       i1l3107 0000                         i1l3051 0183                         i1l3043 0000  
                       i1l3035 0175                         i1l3019 0000                         i1l3205 0000  
                       i1l3213 0427                         i1l3133 0000                         i1l3109 01C4  
                       i1l3029 016F                         i1l3231 0000                         i1l3207 0000  
                       i1l3143 0000                         i1l3151 0201                         i1l3127 0000  
                       i1l3119 01CE                         i1l3071 0000                         i1l3063 0192  
                       i1l3055 0186                         i1l1720 0000                         i1l3241 0000  
                       i1l3233 0000                         i1l3209 0000                         i1l3401 0000  
                       i1l3161 0000                         i1l3145 0000                         i1l3137 0000  
                       i1l3081 0000                         i1l3065 0000                         i1l3073 0197  
                       i1l3307 0000                         i1l3251 0000                         i1l3243 0000  
                       i1l3235 0440                         i1l3219 042E                         i1l3411 0000  
                       i1l3403 038F                         i1l3315 0269                         i1l3155 0000  
                       i1l3163 0215                         i1l3139 01ED                         i1l3091 0000  
                       i1l3067 0000                         i1l3165 0000                         i1l3261 0468  
                       i1l3245 0000                         i1l3229 0000                         i1l3253 0460  
                       i1l3413 0000                         i1l3405 0394                         i1l3421 03A2  
                       i1l3309 0000                         i1l3157 0000                         i1l3149 0000  
                       i1l3093 0000                         i1l3085 01A3                         i1l3069 0000  
                       i1l3167 0000                         i1l3271 0000                         i1l3247 0000  
                       i1l3239 0000                         i1l3255 0461                         i1l3191 0000  
                       i1l3431 03B7                         i1l3415 039F                         i1l3095 0000  
                       i1l3079 019C                         i1l3281 0000                         i1l3273 0000  
                       i1l3249 0000                         i1l3193 0406                         i1l3177 03F4  
                       i1l3169 0000                         i1l3417 0000                         i1l3409 039B  
                       i1l3353 02E3                         i1l3345 0000                         i1l3329 0000  
                       i1l3097 0000                         i1l3089 0000                         i1l3291 0000  
                       i1l3283 0000                         i1l3275 0000                         i1l3187 0000  
                       i1l3435 03BB                         i1l3355 0000                         i1l3347 02D7  
                       i1l3099 0000                         i1l3293 0000                         i1l3285 0000  
                       i1l3277 047A                         i1l3197 0000                         i1l3189 0000  
                       i1l3445 03BF                         i1l3381 033F                         i1l3373 0000  
                       i1l3357 0000                         i1l3349 02DC                         i1l3287 0000  
                       i1l3295 049A                         i1l3199 0000                         i1l3471 0000  
                       i1l3439 03BD                         i1l3447 03D3                         i1l3383 0000  
                       i1l3375 0333                         i1l3359 02E7                         i1l3289 0000  
                       i1l3297 049B                         i1l3473 0000                         i1l3481 0000  
                       i1l3385 0000                         i1l3377 0338                         i1l3299 0000  
                       i1l3475 0000                         i1l3467 0000                         i1l3491 0000  
                       i1l3483 0000                         i1l3387 0343                         i1l2923 0000  
                       i1l2907 0000                         i1l2915 0060                         i1l3493 0000  
                       i1l3485 0611                         i1l3477 0000                         i1l2909 004D  
                       i1l3479 0000                         i1l2943 0000                         i1l2951 00CC  
                       i1l3489 0619                         i1l2961 0000                         i1l2945 0000  
                       i1l2953 009E                         i1l2929 0000                         i1l3499 0000  
                       i1l2963 0000                         i1l2971 00D6                         i1l2947 0000  
                       i1l2891 0000                         i1l2883 0000                         i1l2875 0000  
                       i1l2981 0000                         i1l2965 0000                         i1l2949 0000  
                       i1l3767 03C8                         i1l2991 0000                         i1l2983 0000  
                       i1l2967 0000                         i1l2887 0000                         i1l2993 0000  
                       i1l2985 0000                         i1l2969 0104                         i1l2889 0000  
                       i1l2995 0000                         i1l2979 0000                         i1l2987 013C  
                       i1l2989 010E                         i1l2997 014B                         _INTEDG 040E  
                       u240_25 02F7                         u152_25 00C2                         _INTCON 000B  
                       u241_25 0307                         u233_25 029B                         u153_25 00A7  
                       u250_25 0383                         u242_25 0317                         u234_25 02AB  
                       u146_25 0079                         u243_25 0327                         u235_25 02BB  
                       u155_25 00FA                         u236_25 02CB                         u156_25 00DF  
                       u158_25 0132                         u247_25 0353                         u159_25 0117  
                       u248_25 0363                         u249_25 0373                         _OSCCON 008F  
                       _TMR2IE 0461                         _TMR2IF 0061                         _PSINKA 0097  
                       _PSINKC 009F                         _OPTION 0081                         _TMR2ON 0092  
                       _WDTCON 0018                         _TRISA2 042A                         _Indata 00A8  
              ?_TIMER0_INITIAL 0076                         ___wmul 060F              _EX_INT_RisingEdge 06A5  
              ?_TIMER2_INITIAL 0076              ??_EEPROM_ReadWord 00AE             ?_EX_INT_RisingEdge 0076  
                       clrloop 067D                         saved_w 007E            ??_EX_INT_RisingEdge 0076  
                 ?_WDT_INITIAL 0076          _remotekey_Receive_num 002B                      ?_IAPWrite 0076  
    __end_of_EX_INT_RisingEdge 06A8                 __pcstackCOMMON 0076                      ?_OSC_INIT 0076  
            ?_CH2_EEPROM_Write 0076           _CH1_remotekey_Latest 00B3           __size_of_INT_INITIAL 0007  
           ??_CH2_EEPROM_Write 0078                     __pbssBANK0 0020                     __pbssBANK1 00A0  
                   _led1_debug 06A2                     ??_IAPWrite 0077                     __pmaintext 0628  
                   ??_OSC_INIT 00AB                        ?___wmul 0076                     __pintentry 0004  
                      _CM1CON0 0119                        _CM2CON0 011A                        _CM2CON1 011B  
                      _IAPRead 068B                        _EE_Buff 00B6                        _KEYSCAN 03EA  
                      _PRESSED 0075                        _PSTRCON 019D                        _STRSYNC 0CEC  
__size_ofi1_EX_INT_FallingEdge 0004     __size_of_EX_INT_RisingEdge 0003                  _CH1_remotekey 002D  
              __size_of___wmul 0019              _CH1_remotekey_num 0067                  _CH2_remotekey 003D  
                 __size_of_KEY 0173                   __size_of_ISR 0213                  _CH3_remotekey 004D  
            ?_CH3_EEPROM_Write 0076             ??_CH3_EEPROM_Write 0078           end_of_initialization 066E  
                  ?_led1_debug 0076                  ??_EEPROM_Read 00B3           __size_of_WDT_INITIAL 0005  
             ??_TIMER0_INITIAL 00AB                _EEPROM_ReadWord 04A5      __size_of_CH1_EEPROM_Write 0040  
             ??_TIMER2_INITIAL 00AB           _CH2_remotekey_Latest 00B4    __size_of_EX_INT_FallingEdge 0004  
            __size_of_IAPWrite 0013            __end_of_EEPROM_Read 0536                 __end_of___wmul 0628  
            __size_of_OSC_INIT 0019            __size_of_led1_debug 0003            start_initialization 0661  
                  __end_of_KEY 03D6                    __end_of_ISR 0223        __end_of_EEPROM_ReadWord 04BF  
    __size_of_CH2_EEPROM_Write 0040              _KEY_Match_counter 0025                 IAPWrite@EEAddr 0077  
                     ??___wmul 007A                       ?_IAPRead 0076                  ??_INT_INITIAL 00AB  
                     ?_KEYSCAN 0076                    __pbssCOMMON 0070                  __pcstackBANK0 005D  
                __pcstackBANK1 00AB           _CH3_remotekey_Latest 00B5                    _EEPROM_Read 04F4  
                    __pnvBANK0 0067                      __pnvBANK1 00B3               _CH1_EEPROM_Write 05B6  
                    __ptext700 0000                      __ptext680 04F4                      __ptext681 04A5  
                    __ptext690 0263                      __ptext682 0684                      __ptext691 0536  
                    __ptext683 068B                      __ptext692 0576                      __ptext684 064F  
                    __ptext693 05B6                      __ptext685 0670                      __ptext694 069E  
                    __ptext686 0691                      __ptext695 060F                      __ptext687 05F6  
                    __ptext679 0000                      __ptext696 063C                      __ptext688 0696  
                    __ptext697 03EA                      __ptext689 0010                      __ptext698 06A2  
                    __ptext699 06A5     _LONGPRESS_OverTime_Counter 00AA                      __pswtext1 069A  
            _CH2_remotekey_num 0068   __end_ofi1_EX_INT_FallingEdge 06A2            __end_of_INT_INITIAL 068B  
             ?_EEPROM_ReadWord 00AD                   ??_led1_debug 0076              interrupt_function 0004  
                     _IAPWrite 063C                 ___wmul@product 007A      __size_of_CH3_EEPROM_Write 0040  
                    _remotekey 00A4                       _OSC_INIT 05F6              ___wmul@multiplier 0076  
           __end_of_led1_debug 06A5               __size_of_IAPRead 0006               __size_of_KEYSCAN 00BB  
                ??_WDT_INITIAL 00AB               _CH2_EEPROM_Write 0576                    _match_slice 0028  
                  _INT_INITIAL 0684     __end_of_EX_INT_FallingEdge 069A                  __size_of_main 0014  
         i1_EX_INT_FallingEdge 069E            __end_of_WDT_INITIAL 0696                       clear_ram 067C  
              _remotekey_slice 002C        __size_of_TIMER0_INITIAL 000C        __size_of_TIMER2_INITIAL 0012  
     __end_of_CH1_EEPROM_Write 05F6                       intlevel1 0000                   ?_EEPROM_Read 0076  
        ?i1_EX_INT_FallingEdge 0076               _CH3_EEPROM_Write 0536                     _PRESS_FLAG 0027  
            _CH3_remotekey_num 0069                    _WDT_INITIAL 0691                 _KEY1_LongPress 0022  
          EEPROM_ReadWord@data 00AD            EEPROM_ReadWord@buff 00B2                 _KEY2_LongPress 0023  
