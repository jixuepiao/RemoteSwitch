

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Thu Jan 16 18:22:32 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text696,local,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text697,local,class=CODE,delta=2
    17                           	psect	text698,local,class=CODE,delta=2
    18                           	psect	text699,local,class=CODE,delta=2
    19                           	psect	text700,local,class=CODE,delta=2
    20                           	psect	text701,local,class=CODE,delta=2
    21                           	psect	text702,local,class=CODE,delta=2
    22                           	psect	text703,local,class=CODE,delta=2
    23                           	psect	text704,local,class=CODE,delta=2
    24                           	psect	text705,local,class=CODE,delta=2
    25                           	psect	text706,local,class=CODE,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text707,local,class=CODE,delta=2
    28                           	psect	swtext1,local,class=CONST,delta=2
    29                           	psect	text708,local,class=CODE,delta=2
    30                           	psect	text709,local,class=CODE,delta=2
    31                           	psect	text710,local,class=CODE,delta=2
    32                           	psect	text711,local,class=CODE,delta=2
    33                           	psect	text712,local,class=CODE,delta=2
    34                           	psect	text713,local,class=CODE,delta=2
    35                           	psect	text714,local,class=CODE,delta=2
    36                           	psect	text715,local,class=CODE,delta=2
    37                           	psect	text716,local,class=CODE,delta=2
    38                           	psect	text717,local,class=CODE,delta=2
    39                           	psect	text718,local,class=CODE,delta=2
    40                           	psect	pa_nodes,global,class=CODE,delta=2
    41                           	dabs	1,0x11E,1
    42                           	dabs	1,0x11F,1
    43                           	dabs	1,0x119,1
    44                           	dabs	1,0x11A,1
    45                           	dabs	1,0x11B,1
    46                           	dabs	1,0x10F,1
    47                           	dabs	1,0x10E,1
    48                           	dabs	1,0x116,1
    49                           	dabs	1,0x19D,1
    50                           	dabs	1,0x19E,1
    51                           	dabs	1,0x118,1
    52                           	dabs	1,0x115,1
    53                           	dabs	1,0x11E,1
    54                           	dabs	1,0x11E,1
    55                           	dabs	1,0x11F,1
    56                           	dabs	1,0x11F,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11E,1
    61                           	dabs	1,0x11E,1
    62                           	dabs	1,0x11E,1
    63                           	dabs	1,0x11F,1
    64                           	dabs	1,0x11F,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x119,1
    70                           	dabs	1,0x119,1
    71                           	dabs	1,0x119,1
    72                           	dabs	1,0x19E,1
    73                           	dabs	1,0x118,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x11A,1
    79                           	dabs	1,0x11A,1
    80                           	dabs	1,0x11A,1
    81                           	dabs	1,0x19E,1
    82                           	dabs	1,0x11B,1
    83                           	dabs	1,0x118,1
    84                           	dabs	1,0x18C,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x116,1
    87                           	dabs	1,0x116,1
    88                           	dabs	1,0x116,1
    89                           	dabs	1,0x11B,1
    90                           	dabs	1,0x11B,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19E,1
    93                           	dabs	1,0x19E,1
    94                           	dabs	1,0x19E,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x19D,1
    98                           	dabs	1,0x19D,1
    99                           	dabs	1,0x19D,1
   100                           	dabs	1,0x11B,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x118,1
   105                           	dabs	1,0x118,1
   106                           	dabs	1,0x118,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x115,1
   109                           	dabs	1,0x115,1
   110                           	dabs	1,0x115,1
   111                           	dabs	1,0x18C,1
   112                           	dabs	1,0x7E,2
   113  000A                     
   114                           	psect	text696
   115  0000                     __ptext696:	
   116  011E                     _ANSEL	set	286	;_ANSEL
   117  011F                     _ANSELH	set	287	;_ANSELH
   118  0119                     _CM1CON0	set	281	;_CM1CON0
   119  011A                     _CM2CON0	set	282	;_CM2CON0
   120  011B                     _CM2CON1	set	283	;_CM2CON1
   121  010F                     _EEADRH	set	271	;_EEADRH
   122  010E                     _EEDATH	set	270	;_EEDATH
   123  0116                     _IOCB	set	278	;_IOCB
   124  019D                     _PSTRCON	set	413	;_PSTRCON
   125  019E                     _SRCON	set	414	;_SRCON
   126  0118                     _VRCON	set	280	;_VRCON
   127  0115                     _WPUB	set	277	;_WPUB
   128  08F0                     _ANS0	set	2288	;_ANS0
   129  08F1                     _ANS1	set	2289	;_ANS1
   130  08FA                     _ANS10	set	2298	;_ANS10
   131  08FB                     _ANS11	set	2299	;_ANS11
   132  08F2                     _ANS2	set	2290	;_ANS2
   133  08F3                     _ANS3	set	2291	;_ANS3
   134  08F4                     _ANS4	set	2292	;_ANS4
   135  08F5                     _ANS5	set	2293	;_ANS5
   136  08F6                     _ANS6	set	2294	;_ANS6
   137  08F7                     _ANS7	set	2295	;_ANS7
   138  08F8                     _ANS8	set	2296	;_ANS8
   139  08F9                     _ANS9	set	2297	;_ANS9
   140  08C8                     _C1CH0	set	2248	;_C1CH0
   141  08C9                     _C1CH1	set	2249	;_C1CH1
   142  08CD                     _C1OE	set	2253	;_C1OE
   143  08CF                     _C1ON	set	2255	;_C1ON
   144  08CE                     _C1OUT	set	2254	;_C1OUT
   145  08CC                     _C1POL	set	2252	;_C1POL
   146  08CA                     _C1R	set	2250	;_C1R
   147  0CF5                     _C1SEN	set	3317	;_C1SEN
   148  08C7                     _C1VREN	set	2247	;_C1VREN
   149  08D0                     _C2CH0	set	2256	;_C2CH0
   150  08D1                     _C2CH1	set	2257	;_C2CH1
   151  08D5                     _C2OE	set	2261	;_C2OE
   152  08D7                     _C2ON	set	2263	;_C2ON
   153  08D6                     _C2OUT	set	2262	;_C2OUT
   154  08D4                     _C2POL	set	2260	;_C2POL
   155  08D2                     _C2R	set	2258	;_C2R
   156  0CF4                     _C2REN	set	3316	;_C2REN
   157  08D8                     _C2SYNC	set	2264	;_C2SYNC
   158  08C6                     _C2VREN	set	2246	;_C2VREN
   159  0C67                     _EEPGD	set	3175	;_EEPGD
   160  08B4                     _IOCB4	set	2228	;_IOCB4
   161  08B5                     _IOCB5	set	2229	;_IOCB5
   162  08B6                     _IOCB6	set	2230	;_IOCB6
   163  08B7                     _IOCB7	set	2231	;_IOCB7
   164  08DF                     _MC1OUT	set	2271	;_MC1OUT
   165  08DE                     _MC2OUT	set	2270	;_MC2OUT
   166  0CF2                     _PULSR	set	3314	;_PULSR
   167  0CF3                     _PULSS	set	3315	;_PULSS
   168  0CF6                     _SR0	set	3318	;_SR0
   169  0CF7                     _SR1	set	3319	;_SR1
   170  0CE8                     _STRA	set	3304	;_STRA
   171  0CE9                     _STRB	set	3305	;_STRB
   172  0CEA                     _STRC	set	3306	;_STRC
   173  0CEB                     _STRD	set	3307	;_STRD
   174  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   175  08D9                     _T1GSS	set	2265	;_T1GSS
   176  08C4                     _VP6EN	set	2244	;_VP6EN
   177  08C0                     _VR0	set	2240	;_VR0
   178  08C1                     _VR1	set	2241	;_VR1
   179  08C2                     _VR2	set	2242	;_VR2
   180  08C3                     _VR3	set	2243	;_VR3
   181  08C5                     _VRR	set	2245	;_VRR
   182  08AC                     _WPUB4	set	2220	;_WPUB4
   183  08AD                     _WPUB5	set	2221	;_WPUB5
   184  08AE                     _WPUB6	set	2222	;_WPUB6
   185  08AF                     _WPUB7	set	2223	;_WPUB7
   186  0C62                     _WREN	set	3170	;_WREN
   187                           
   188                           	psect	nvBANK0
   189  0067                     __pnvBANK0:	
   190  0067                     _CH1_remotekey_num:	
   191  0067                     	ds	1
   192  0068                     _CH2_remotekey_num:	
   193  0068                     	ds	1
   194  0069                     _CH3_remotekey_num:	
   195  0069                     	ds	1
   196  000B                     _INTCON	set	11
   197  0005                     _PORTA	set	5
   198  0007                     _PORTC	set	7
   199  0012                     _T2CON0	set	18
   200  0001                     _TMR0	set	1
   201  0013                     _TMR2H	set	19
   202  0011                     _TMR2L	set	17
   203  0018                     _WDTCON	set	24
   204  0067                     _EEIF	set	103
   205  005F                     _GIE	set	95
   206  005C                     _INTE	set	92
   207  0059                     _INTF	set	89
   208  002A                     _PA2	set	42
   209  002B                     _PA3	set	43
   210  002C                     _PA4	set	44
   211  002D                     _PA5	set	45
   212  002E                     _PA6	set	46
   213  002F                     _PA7	set	47
   214  0038                     _PC0	set	56
   215  003C                     _PC4	set	60
   216  003D                     _PC5	set	61
   217  005E                     _PEIE	set	94
   218  005D                     _T0IE	set	93
   219  005A                     _T0IF	set	90
   220  0061                     _TMR2IF	set	97
   221  0092                     _TMR2ON	set	146
   222  009B                     _EEADR	set	155
   223  009C                     _EECON1	set	156
   224  009A                     _EEDAT	set	154
   225  0081                     _OPTION	set	129
   226  008F                     _OSCCON	set	143
   227  0092                     _PR2H	set	146
   228  0091                     _PR2L	set	145
   229  0097                     _PSINKA	set	151
   230  009F                     _PSINKC	set	159
   231  0088                     _PSRCA	set	136
   232  0094                     _PSRCC	set	148
   233  009E                     _T2CON1	set	158
   234  0085                     _TRISA	set	133
   235  0087                     _TRISC	set	135
   236  0095                     _WPUA	set	149
   237  0093                     _WPUC	set	147
   238  040E                     _INTEDG	set	1038
   239  04B2                     _IOCA2	set	1202
   240  040B                     _PSA	set	1035
   241  04E0                     _RD	set	1248
   242  040D                     _T0CS	set	1037
   243  0461                     _TMR2IE	set	1121
   244  042A                     _TRISA2	set	1066
   245  04E8                     _WR	set	1256
   246                           
   247                           	psect	nvBANK1
   248  00B3                     __pnvBANK1:	
   249  00B3                     _CH1_remotekey_Latest:	
   250  00B3                     	ds	1
   251  00B4                     _CH2_remotekey_Latest:	
   252  00B4                     	ds	1
   253  00B5                     _CH3_remotekey_Latest:	
   254  00B5                     	ds	1
   255  00B6                     _EE_Buff:	
   256  00B6                     	ds	1
   257                           
   258                           	psect	cinit
   259  067E                     start_initialization:	
   260                           
   261                           ; Clear objects allocated to COMMON
   262  067E  3070               	movlw	low __pbssCOMMON
   263  067F  0084               	movwf	4
   264  0680  3076               	movlw	low (__pbssCOMMON+6)
   265  0681  2699               	fcall	clear_ram
   266  0682  3020               	movlw	low __pbssBANK0
   267                           
   268                           ; Clear objects allocated to BANK0
   269  0683  1383               	bcf	3,7	;select IRP bank0
   270  0684  0084               	movwf	4
   271  0685  305D               	movlw	low (__pbssBANK0+61)
   272  0686  2699               	fcall	clear_ram
   273                           
   274                           ; Clear objects allocated to BANK1
   275  0687  30A0               	movlw	low __pbssBANK1
   276  0688  0084               	movwf	4
   277  0689  30AB               	movlw	low (__pbssBANK1+11)
   278  068A  2699               	fcall	clear_ram
   279  068B                     end_of_initialization:	
   280                           ;End of C runtime variable initialization code
   281                           
   282  068B  0183               	clrf	3
   283  068C  2E45               	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0070                     __pbssCOMMON:	
   287  0070                     _Match_remotekey:	
   288  0070                     	ds	4
   289  0074                     _FLAGs:	
   290  0074                     	ds	1
   291  0075                     _PRESSED:	
   292  0075                     	ds	1
   293                           
   294                           	psect	bssBANK0
   295  0020                     __pbssBANK0:	
   296  0020                     _buff:	
   297  0020                     	ds	2
   298  0022                     _KEY1_LongPress:	
   299  0022                     	ds	1
   300  0023                     _KEY2_LongPress:	
   301  0023                     	ds	1
   302  0024                     _KEY3_LongPress:	
   303  0024                     	ds	1
   304  0025                     _KEY_Match_counter:	
   305  0025                     	ds	1
   306  0026                     _Key_dealed_counter:	
   307  0026                     	ds	1
   308  0027                     _PRESS_FLAG:	
   309  0027                     	ds	1
   310  0028                     _match_slice:	
   311  0028                     	ds	1
   312  0029                     _ms16_counter:	
   313  0029                     	ds	1
   314  002A                     _num:	
   315  002A                     	ds	1
   316  002B                     _remotekey_Receive_num:	
   317  002B                     	ds	1
   318  002C                     _remotekey_slice:	
   319  002C                     	ds	1
   320  002D                     _CH1_remotekey:	
   321  002D                     	ds	16
   322  003D                     _CH2_remotekey:	
   323  003D                     	ds	16
   324  004D                     _CH3_remotekey:	
   325  004D                     	ds	16
   326                           
   327                           	psect	bssBANK1
   328  00A0                     __pbssBANK1:	
   329  00A0                     _Ctrl_remotekey:	
   330  00A0                     	ds	4
   331  00A4                     _remotekey:	
   332  00A4                     	ds	4
   333  00A8                     _Indata:	
   334  00A8                     	ds	2
   335  00AA                     _LONGPRESS_OverTime_Counter:	
   336  00AA                     	ds	1
   337                           
   338                           	psect	clrtext
   339  0699                     clear_ram:	
   340                           ;	Called with FSR containing the base address, and
   341                           ;	W with the last address+1
   342                           
   343  0699  0064               	clrwdt	;clear the watchdog before getting into this loop
   344  069A                     clrloop:	
   345  069A  0180               	clrf	0	;clear RAM location pointed to by FSR
   346  069B  0A84               	incf	4,f	;increment pointer
   347  069C  0604               	xorwf	4,w	;XOR with final address
   348  069D  1903               	btfsc	3,2	;have we reached the end yet?
   349  069E  3400               	retlw	0	;all done for this memory range, return
   350  069F  0604               	xorwf	4,w	;XOR again to restore value
   351  06A0  2E9A               	goto	clrloop	;do the next byte
   352                           
   353                           	psect	cstackBANK1
   354  00AB                     __pcstackBANK1:	
   355  00AB                     ??_EX_INT_FallingEdge:	
   356  00AB                     ??_INT_INITIAL:	
   357                           ; 0 bytes @ 0x0
   358                           
   359  00AB                     ??_OSC_INIT:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  00AB                     ??_WDT_INITIAL:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  00AB                     ??_TIMER0_INITIAL:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  00AB                     ??_TIMER2_INITIAL:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  00AB                     ??_IAPRead:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  00AB                     IAPRead@EEAddr:	
   375                           ; 0 bytes @ 0x0
   376                           
   377                           
   378                           ; 1 bytes @ 0x0
   379  00AB                     	ds	1
   380  00AC                     IAPRead@ReEEPROMread:	
   381                           
   382                           ; 1 bytes @ 0x1
   383  00AC                     	ds	1
   384  00AD                     ?_EEPROM_ReadWord:	
   385  00AD                     EEPROM_ReadWord@data:	
   386                           ; 0 bytes @ 0x2
   387                           
   388                           
   389                           ; 1 bytes @ 0x2
   390  00AD                     	ds	1
   391  00AE                     ??_EEPROM_ReadWord:	
   392                           
   393                           ; 0 bytes @ 0x3
   394  00AE                     	ds	4
   395  00B2                     EEPROM_ReadWord@buff:	
   396                           
   397                           ; 1 bytes @ 0x7
   398  00B2                     	ds	1
   399  00B3                     ??_EEPROM_Read:	
   400  00B3                     ??_main:	
   401                           ; 0 bytes @ 0x8
   402                           
   403                           
   404                           	psect	cstackCOMMON
   405  0076                     __pcstackCOMMON:	
   406                           ; 0 bytes @ 0x8
   407                           
   408  0076                     ?_EX_INT_RisingEdge:	
   409  0076                     ??_EX_INT_RisingEdge:	
   410                           ; 0 bytes @ 0x0
   411                           
   412  0076                     ?_EX_INT_FallingEdge:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0076                     ?_led1_debug:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0076                     ??_led1_debug:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0076                     ?_KEYSCAN:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0076                     ??_KEYSCAN:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0076                     ?_KEY:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0076                     ?_ISR:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0076                     ?_INT_INITIAL:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0076                     ?_OSC_INIT:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0076                     ?_WDT_INITIAL:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0076                     ?_TIMER0_INITIAL:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0076                     ?_TIMER2_INITIAL:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0076                     ?_IAPWrite:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0076                     ?_CH1_EEPROM_Write:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0076                     ?_CH2_EEPROM_Write:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0076                     ?_CH3_EEPROM_Write:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0076                     ?_EEPROM_Read:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0076                     ?i1_EX_INT_FallingEdge:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0076                     ??i1_EX_INT_FallingEdge:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0076                     ?_IAPRead:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0076                     ?___lbmod:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0076                     ?_main:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0076                     ?___wmul:	
   479                           ; 2 bytes @ 0x0
   480                           
   481  0076                     IAPWrite@Data:	
   482                           ; 2 bytes @ 0x0
   483                           
   484  0076                     ___lbmod@divisor:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0076                     ___wmul@multiplier:	
   488                           ; 1 bytes @ 0x0
   489                           
   490                           
   491                           ; 2 bytes @ 0x0
   492  0076                     	ds	1
   493  0077                     ??_IAPWrite:	
   494  0077                     ??___lbmod:	
   495                           ; 0 bytes @ 0x1
   496                           
   497  0077                     IAPWrite@EEAddr:	
   498                           ; 0 bytes @ 0x1
   499                           
   500                           
   501                           ; 1 bytes @ 0x1
   502  0077                     	ds	1
   503  0078                     ??_KEY:	
   504  0078                     ??_CH1_EEPROM_Write:	
   505                           ; 0 bytes @ 0x2
   506                           
   507  0078                     ??_CH2_EEPROM_Write:	
   508                           ; 0 bytes @ 0x2
   509                           
   510  0078                     ??_CH3_EEPROM_Write:	
   511                           ; 0 bytes @ 0x2
   512                           
   513  0078                     ___lbmod@dividend:	
   514                           ; 0 bytes @ 0x2
   515                           
   516  0078                     ___wmul@multiplicand:	
   517                           ; 1 bytes @ 0x2
   518                           
   519                           
   520                           ; 2 bytes @ 0x2
   521  0078                     	ds	1
   522  0079                     ___lbmod@counter:	
   523                           
   524                           ; 1 bytes @ 0x3
   525  0079                     	ds	1
   526  007A                     ??___wmul:	
   527  007A                     ___lbmod@rem:	
   528                           ; 0 bytes @ 0x4
   529                           
   530  007A                     ___wmul@product:	
   531                           ; 1 bytes @ 0x4
   532                           
   533                           
   534                           ; 2 bytes @ 0x4
   535  007A                     	ds	2
   536                           
   537                           	psect	cstackBANK0
   538  005D                     __pcstackBANK0:	
   539  005D                     ??_ISR:	
   540                           
   541                           ; 0 bytes @ 0x0
   542  005D                     	ds	10
   543                           
   544                           	psect	maintext
   545  0645                     __pmaintext:	
   546 ;;Data sizes: Strings 0, constant 0, data 0, bss 78, persistent 7 stack 0
   547 ;;Auto spaces:   Size  Autos    Used
   548 ;; COMMON          14      6      12
   549 ;; BANK0           80     10      74
   550 ;; BANK1           32      8      23
   551 ;;
   552 ;; Pointer list with targets:
   553 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   554 ;;
   555 ;; EEPROM_ReadWord@buff	PTR unsigned long  size(1) Largest target is 16
   556 ;;		 -> CH3_remotekey(BANK0[16]), CH2_remotekey(BANK0[16]), CH1_remotekey(BANK0[16]), 
   557 ;;
   558 ;;
   559 ;; Critical Paths under _main in COMMON
   560 ;;
   561 ;;   None.
   562 ;;
   563 ;; Critical Paths under _ISR in COMMON
   564 ;;
   565 ;;   _ISR->___wmul
   566 ;;   _CH3_EEPROM_Write->_IAPWrite
   567 ;;   _CH2_EEPROM_Write->_IAPWrite
   568 ;;   _CH1_EEPROM_Write->_IAPWrite
   569 ;;
   570 ;; Critical Paths under _main in BANK0
   571 ;;
   572 ;;   None.
   573 ;;
   574 ;; Critical Paths under _ISR in BANK0
   575 ;;
   576 ;;   None.
   577 ;;
   578 ;; Critical Paths under _main in BANK1
   579 ;;
   580 ;;   _EEPROM_Read->_EEPROM_ReadWord
   581 ;;   _EEPROM_ReadWord->_IAPRead
   582 ;;
   583 ;; Critical Paths under _ISR in BANK1
   584 ;;
   585 ;;   None.
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   588 ;;
   589 ;;
   590 ;;Call Graph Tables:
   591 ;;
   592 ;; ---------------------------------------------------------------------------------
   593 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   594 ;; ---------------------------------------------------------------------------------
   595 ;; (0) _main                                                 0     0      0     471
   596 ;;                           _OSC_INIT
   597 ;;                     _TIMER0_INITIAL
   598 ;;                     _TIMER2_INITIAL
   599 ;;                        _INT_INITIAL
   600 ;;                        _EEPROM_Read
   601 ;;                        _WDT_INITIAL
   602 ;;                 _EX_INT_FallingEdge
   603 ;; ---------------------------------------------------------------------------------
   604 ;; (1) _EEPROM_Read                                          0     0      0     471
   605 ;;                    _EEPROM_ReadWord
   606 ;;                            _IAPRead
   607 ;; ---------------------------------------------------------------------------------
   608 ;; (2) _EEPROM_ReadWord                                      6     5      1     406
   609 ;;                                              2 BANK1      6     5      1
   610 ;;                            _IAPRead
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (1) _INT_INITIAL                                          0     0      0       0
   613 ;;                 _EX_INT_FallingEdge
   614 ;; ---------------------------------------------------------------------------------
   615 ;; (2) _IAPRead                                              2     2      0      65
   616 ;;                                              0 BANK1      2     2      0
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (1) _TIMER2_INITIAL                                       0     0      0       0
   619 ;; ---------------------------------------------------------------------------------
   620 ;; (1) _TIMER0_INITIAL                                       0     0      0       0
   621 ;; ---------------------------------------------------------------------------------
   622 ;; (1) _WDT_INITIAL                                          0     0      0       0
   623 ;; ---------------------------------------------------------------------------------
   624 ;; (1) _OSC_INIT                                             0     0      0       0
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (1) _EX_INT_FallingEdge                                   0     0      0       0
   627 ;; ---------------------------------------------------------------------------------
   628 ;; Estimated maximum stack depth 2
   629 ;; ---------------------------------------------------------------------------------
   630 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (4) _ISR                                                 10    10      0     383
   633 ;;                                              0 BANK0     10    10      0
   634 ;;                  _EX_INT_RisingEdge
   635 ;;               i1_EX_INT_FallingEdge
   636 ;;                             ___wmul
   637 ;;                         _led1_debug
   638 ;;                            ___lbmod
   639 ;;                            _KEYSCAN
   640 ;;                                _KEY
   641 ;; ---------------------------------------------------------------------------------
   642 ;; (5) _KEY                                                  2     2      0     132
   643 ;;                                              2 COMMON     2     2      0
   644 ;;                   _CH1_EEPROM_Write
   645 ;;                   _CH2_EEPROM_Write
   646 ;;                   _CH3_EEPROM_Write
   647 ;;                         _led1_debug
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (6) _CH3_EEPROM_Write                                     0     0      0      44
   650 ;;                           _IAPWrite
   651 ;; ---------------------------------------------------------------------------------
   652 ;; (6) _CH2_EEPROM_Write                                     0     0      0      44
   653 ;;                           _IAPWrite
   654 ;; ---------------------------------------------------------------------------------
   655 ;; (6) _CH1_EEPROM_Write                                     0     0      0      44
   656 ;;                           _IAPWrite
   657 ;; ---------------------------------------------------------------------------------
   658 ;; (5) i1_EX_INT_FallingEdge                                 0     0      0       0
   659 ;; ---------------------------------------------------------------------------------
   660 ;; (5) ___lbmod                                              5     4      1     159
   661 ;;                                              0 COMMON     5     4      1
   662 ;; ---------------------------------------------------------------------------------
   663 ;; (5) ___wmul                                               6     2      4      92
   664 ;;                                              0 COMMON     6     2      4
   665 ;; ---------------------------------------------------------------------------------
   666 ;; (7) _IAPWrite                                             2     1      1      44
   667 ;;                                              0 COMMON     2     1      1
   668 ;; ---------------------------------------------------------------------------------
   669 ;; (5) _KEYSCAN                                              0     0      0       0
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (6) _led1_debug                                           0     0      0       0
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (5) _EX_INT_RisingEdge                                    0     0      0       0
   674 ;; ---------------------------------------------------------------------------------
   675 ;; Estimated maximum stack depth 7
   676 ;; ---------------------------------------------------------------------------------
   677 ;; Call Graph Graphs:
   678 ;; _main (ROOT)
   679 ;;   _OSC_INIT
   680 ;;   _TIMER0_INITIAL
   681 ;;   _TIMER2_INITIAL
   682 ;;   _INT_INITIAL
   683 ;;     _EX_INT_FallingEdge
   684 ;;   _EEPROM_Read
   685 ;;     _EEPROM_ReadWord
   686 ;;       _IAPRead
   687 ;;     _IAPRead
   688 ;;   _WDT_INITIAL
   689 ;;   _EX_INT_FallingEdge
   690 ;;
   691 ;; _ISR (ROOT)
   692 ;;   _EX_INT_RisingEdge
   693 ;;   i1_EX_INT_FallingEdge
   694 ;;   ___wmul
   695 ;;   _led1_debug
   696 ;;   ___lbmod
   697 ;;   _KEYSCAN
   698 ;;   _KEY
   699 ;;     _CH1_EEPROM_Write
   700 ;;       _IAPWrite
   701 ;;     _CH2_EEPROM_Write
   702 ;;       _IAPWrite
   703 ;;     _CH3_EEPROM_Write
   704 ;;       _IAPWrite
   705 ;;     _led1_debug
   706 ;;
   707 ;; Address spaces:
   708 ;;Name               Size   Autos  Total    Cost      Usage
   709 ;;BITCOMMON            E      0       0       0        0.0%
   710 ;;EEDATA             100      0       0       0        0.0%
   711 ;;NULL                 0      0       0       0        0.0%
   712 ;;CODE                 0      0       0       0        0.0%
   713 ;;COMMON               E      6       C       1       85.7%
   714 ;;BITSFR0              0      0       0       1        0.0%
   715 ;;SFR0                 0      0       0       1        0.0%
   716 ;;BITSFR1              0      0       0       2        0.0%
   717 ;;SFR1                 0      0       0       2        0.0%
   718 ;;STACK                0      0       B       2        0.0%
   719 ;;BITBANK0            50      0       0       3        0.0%
   720 ;;BANK0               50      A      4A       4       92.5%
   721 ;;BANK1               20      8      17       5       71.9%
   722 ;;ABS                  0      0      6D       6        0.0%
   723 ;;BITBANK1            20      0       0       7        0.0%
   724 ;;DATA                 0      0      78       8        0.0%
   725                           
   726                           
   727 ;; *************** function _main *****************
   728 ;; Defined at:
   729 ;;		line 789 in file "1.C"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  2  1038[COMMON] int 
   736 ;; Registers used:
   737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 17F/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: FFE00/0
   742 ;; Data sizes:     COMMON   BANK0   BANK1
   743 ;;      Params:         0       0       0
   744 ;;      Locals:         0       0       0
   745 ;;      Temps:          0       0       0
   746 ;;      Totals:         0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels required when called:    7
   749 ;; This function calls:
   750 ;;		_OSC_INIT
   751 ;;		_TIMER0_INITIAL
   752 ;;		_TIMER2_INITIAL
   753 ;;		_INT_INITIAL
   754 ;;		_EEPROM_Read
   755 ;;		_WDT_INITIAL
   756 ;;		_EX_INT_FallingEdge
   757 ;; This function is called by:
   758 ;;		Startup code after reset
   759 ;; This function uses a non-reentrant model
   760 ;;
   761  0645                     _main:	
   762                           
   763                           ;1.C: 790: OSC_INIT();
   764                           
   765                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   766  0645  2613               	fcall	_OSC_INIT
   767                           
   768                           ;1.C: 791: TIMER0_INITIAL();
   769  0646  268D               	fcall	_TIMER0_INITIAL
   770                           
   771                           ;1.C: 792: TIMER2_INITIAL();
   772  0647  266C               	fcall	_TIMER2_INITIAL
   773                           
   774                           ;1.C: 793: INT_INITIAL();
   775  0648  26A1               	fcall	_INT_INITIAL
   776                           
   777                           ;1.C: 794: EEPROM_Read();
   778  0649  24F5               	fcall	_EEPROM_Read
   779                           
   780                           ;1.C: 795: WDT_INITIAL();
   781  064A  26AE               	fcall	_WDT_INITIAL
   782                           
   783                           ;1.C: 796: PC0 = 1;
   784  064B  1407               	bsf	7,0
   785                           
   786                           ;1.C: 797: PA7 = 1;
   787  064C  1785               	bsf	5,7
   788                           
   789                           ;1.C: 798: PA6 = 1;
   790  064D  1705               	bsf	5,6
   791                           
   792                           ;1.C: 799: PA5 = 1;
   793  064E  1685               	bsf	5,5
   794                           
   795                           ;1.C: 801: PA3 = 0;
   796  064F  1185               	bcf	5,3
   797                           
   798                           ;1.C: 802: FLAGs &= ~0x08;
   799  0650  11F4               	bcf	_FLAGs,3
   800                           
   801                           ;1.C: 803: EX_INT_FallingEdge();
   802  0651  26B3               	fcall	_EX_INT_FallingEdge
   803                           
   804                           ;1.C: 804: INTE =1;
   805  0652  160B               	bsf	11,4
   806                           
   807                           ;1.C: 806: TMR2ON =1;
   808  0653  1283               	bcf	3,5	;RP0=0, select bank0
   809  0654  1512               	bsf	18,2
   810                           
   811                           ;1.C: 808: PEIE = 1;
   812  0655  170B               	bsf	11,6
   813                           
   814                           ;1.C: 809: GIE = 1;
   815  0656  178B               	bsf	11,7
   816  0657                     l3765:	
   817  0657  0064               	clrwdt	;#
   818  0658  2E57               	goto	l3765
   819  0659                     __end_of_main:	
   820                           
   821                           	psect	text697
   822  04F5                     __ptext697:	
   823 ;; =============== function _main ends ============
   824                           
   825                           
   826 ;; *************** function _EEPROM_Read *****************
   827 ;; Defined at:
   828 ;;		line 574 in file "1.C"
   829 ;; Parameters:    Size  Location     Type
   830 ;;		None
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;		None               void
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   837 ;; Tracked objects:
   838 ;;		On entry : 17F/20
   839 ;;		On exit  : 17F/20
   840 ;;		Unchanged: FFE80/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1
   842 ;;      Params:         0       0       0
   843 ;;      Locals:         0       0       0
   844 ;;      Temps:          0       0       0
   845 ;;      Totals:         0       0       0
   846 ;;Total ram usage:        0 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    6
   849 ;; This function calls:
   850 ;;		_EEPROM_ReadWord
   851 ;;		_IAPRead
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856  04F5                     _EEPROM_Read:	
   857                           
   858                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   859  04F5  302D               	movlw	_CH1_remotekey& (0+255)
   860                           
   861                           ;1.C: 575: EEPROM_ReadWord(&CH1_remotekey[0],0x00);
   862  04F6  01AD               	clrf	?_EEPROM_ReadWord^(0+128)
   863  04F7  24A6               	fcall	_EEPROM_ReadWord
   864                           
   865                           ;1.C: 576: EEPROM_ReadWord(&CH2_remotekey[0],0x04);
   866  04F8  3004               	movlw	4
   867  04F9  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   868  04FA  303D               	movlw	_CH2_remotekey& (0+255)
   869  04FB  24A6               	fcall	_EEPROM_ReadWord
   870                           
   871                           ;1.C: 577: EEPROM_ReadWord(&CH3_remotekey[0],0x08);
   872  04FC  3008               	movlw	8
   873  04FD  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   874  04FE  304D               	movlw	_CH3_remotekey& (0+255)
   875  04FF  24A6               	fcall	_EEPROM_ReadWord
   876                           
   877                           ;1.C: 578: EEPROM_ReadWord(&CH1_remotekey[1],0x0C);
   878  0500  300C               	movlw	12
   879  0501  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   880  0502  3031               	movlw	(_CH1_remotekey+4)& (0+255)
   881  0503  24A6               	fcall	_EEPROM_ReadWord
   882                           
   883                           ;1.C: 579: EEPROM_ReadWord(&CH2_remotekey[1],0x10);
   884  0504  3010               	movlw	16
   885  0505  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   886  0506  3041               	movlw	(_CH2_remotekey+4)& (0+255)
   887  0507  24A6               	fcall	_EEPROM_ReadWord
   888                           
   889                           ;1.C: 580: EEPROM_ReadWord(&CH3_remotekey[1],0x14);
   890  0508  3014               	movlw	20
   891  0509  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   892  050A  3051               	movlw	(_CH3_remotekey+4)& (0+255)
   893  050B  24A6               	fcall	_EEPROM_ReadWord
   894                           
   895                           ;1.C: 581: EEPROM_ReadWord(&CH1_remotekey[2],0x18);
   896  050C  3018               	movlw	24
   897  050D  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   898  050E  3035               	movlw	(_CH1_remotekey+8)& (0+255)
   899  050F  24A6               	fcall	_EEPROM_ReadWord
   900                           
   901                           ;1.C: 582: EEPROM_ReadWord(&CH2_remotekey[2],0x1C);
   902  0510  301C               	movlw	28
   903  0511  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   904  0512  3045               	movlw	(_CH2_remotekey+8)& (0+255)
   905  0513  24A6               	fcall	_EEPROM_ReadWord
   906                           
   907                           ;1.C: 583: EEPROM_ReadWord(&CH3_remotekey[2],0x20);
   908  0514  3020               	movlw	32
   909  0515  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   910  0516  3055               	movlw	(_CH3_remotekey+8)& (0+255)
   911  0517  24A6               	fcall	_EEPROM_ReadWord
   912                           
   913                           ;1.C: 584: EEPROM_ReadWord(&CH1_remotekey[3],0x24);
   914  0518  3024               	movlw	36
   915  0519  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   916  051A  3039               	movlw	(_CH1_remotekey+12)& (0+255)
   917  051B  24A6               	fcall	_EEPROM_ReadWord
   918                           
   919                           ;1.C: 585: EEPROM_ReadWord(&CH2_remotekey[3],0x28);
   920  051C  3028               	movlw	40
   921  051D  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   922  051E  3049               	movlw	(_CH2_remotekey+12)& (0+255)
   923  051F  24A6               	fcall	_EEPROM_ReadWord
   924                           
   925                           ;1.C: 586: EEPROM_ReadWord(&CH3_remotekey[3],0x2C);
   926  0520  302C               	movlw	44
   927  0521  00AD               	movwf	?_EEPROM_ReadWord^(0+128)
   928  0522  3059               	movlw	(_CH3_remotekey+12)& (0+255)
   929  0523  24A6               	fcall	_EEPROM_ReadWord
   930                           
   931                           ;1.C: 587: CH1_remotekey_Latest = CH1_remotekey_num = IAPRead(0x30);
   932  0524  3030               	movlw	48
   933  0525  26A8               	fcall	_IAPRead
   934  0526  1283               	bcf	3,5	;RP0=0, select bank0
   935  0527  00E7               	movwf	_CH1_remotekey_num
   936  0528  1683               	bsf	3,5	;RP0=1, select bank1
   937  0529  00B3               	movwf	_CH1_remotekey_Latest^(0+128)
   938                           
   939                           ;1.C: 588: CH2_remotekey_Latest = CH2_remotekey_num = IAPRead(0x31);
   940  052A  3031               	movlw	49
   941  052B  26A8               	fcall	_IAPRead
   942  052C  1283               	bcf	3,5	;RP0=0, select bank0
   943  052D  00E8               	movwf	_CH2_remotekey_num
   944  052E  1683               	bsf	3,5	;RP0=1, select bank1
   945  052F  00B4               	movwf	_CH2_remotekey_Latest^(0+128)
   946                           
   947                           ;1.C: 589: CH3_remotekey_Latest = CH3_remotekey_num = IAPRead(0x32);
   948  0530  3032               	movlw	50
   949  0531  26A8               	fcall	_IAPRead
   950  0532  1283               	bcf	3,5	;RP0=0, select bank0
   951  0533  00E9               	movwf	_CH3_remotekey_num
   952  0534  1683               	bsf	3,5	;RP0=1, select bank1
   953  0535  00B5               	movwf	_CH3_remotekey_Latest^(0+128)
   954  0536  0008               	return
   955  0537                     __end_of_EEPROM_Read:	
   956                           
   957                           	psect	text698
   958  04A6                     __ptext698:	
   959 ;; =============== function _EEPROM_Read ends ============
   960                           
   961                           
   962 ;; *************** function _EEPROM_ReadWord *****************
   963 ;; Defined at:
   964 ;;		line 563 in file "1.C"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  buff            1    wreg     PTR unsigned long 
   967 ;;		 -> CH3_remotekey(16), CH2_remotekey(16), CH1_remotekey(16), 
   968 ;;  data            1    2[BANK1 ] unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  buff            1    7[BANK1 ] PTR unsigned long 
   971 ;;		 -> CH3_remotekey(16), CH2_remotekey(16), CH1_remotekey(16), 
   972 ;; Return value:  Size  Location     Type
   973 ;;		None               void
   974 ;; Registers used:
   975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 17F/20
   978 ;;		On exit  : 17F/20
   979 ;;		Unchanged: FFE80/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1
   981 ;;      Params:         0       0       1
   982 ;;      Locals:         0       0       1
   983 ;;      Temps:          0       0       4
   984 ;;      Totals:         0       0       6
   985 ;;Total ram usage:        6 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    5
   988 ;; This function calls:
   989 ;;		_IAPRead
   990 ;; This function is called by:
   991 ;;		_EEPROM_Read
   992 ;; This function uses a non-reentrant model
   993 ;;
   994  04A6                     _EEPROM_ReadWord:	
   995                           
   996                           ; Regs used in _EEPROM_ReadWord: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   997                           ;EEPROM_ReadWord@buff stored from wreg
   998  04A6  00B2               	movwf	EEPROM_ReadWord@buff^(0+128)
   999                           
  1000                           ;1.C: 564: *buff = 0;
  1001  04A7  0084               	movwf	4
  1002  04A8  0180               	clrf	0
  1003  04A9  0A84               	incf	4,f
  1004  04AA  0180               	clrf	0
  1005  04AB  0A84               	incf	4,f
  1006  04AC  0180               	clrf	0
  1007  04AD  0A84               	incf	4,f
  1008  04AE  0180               	clrf	0
  1009                           
  1010                           ;1.C: 565: EE_Buff = IAPRead(data+2);
  1011  04AF  082D               	movf	EEPROM_ReadWord@data^(0+128),w
  1012  04B0  3E02               	addlw	2
  1013  04B1  26A8               	fcall	_IAPRead
  1014                           
  1015                           ;1.C: 566: *buff |= EE_Buff;
  1016  04B2  24E6               	fcall	PL5	;call to abstracted procedure
  1017                           
  1018                           ;1.C: 567: *buff = *buff<<8;
  1019  04B3  24C0               	fcall	PL4	;call to abstracted procedure
  1020                           
  1021                           ;1.C: 568: EE_Buff = IAPRead(data+1);
  1022  04B4  0A2D               	incf	EEPROM_ReadWord@data^(0+128),w
  1023  04B5  26A8               	fcall	_IAPRead
  1024                           
  1025                           ;1.C: 569: *buff |= EE_Buff;
  1026  04B6  24E6               	fcall	PL5	;call to abstracted procedure
  1027                           
  1028                           ;1.C: 570: *buff = *buff<<8;
  1029  04B7  24C0               	fcall	PL4	;call to abstracted procedure
  1030                           
  1031                           ;1.C: 571: EE_Buff = IAPRead(data);
  1032  04B8  082D               	movf	EEPROM_ReadWord@data^(0+128),w
  1033  04B9  26A8               	fcall	_IAPRead
  1034                           
  1035                           ;1.C: 572: *buff |= EE_Buff;
  1036  04BA  24E6               	fcall	PL5	;call to abstracted procedure
  1037  04BB  0480               	iorwf	0,f
  1038  04BC  0A84               	incf	4,f
  1039  04BD  0831               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1040  04BE  0480               	iorwf	0,f
  1041  04BF  0008               	return
  1042  04C0                     __end_of_EEPROM_ReadWord:	
  1043  04C0                     PL4:	
  1044  04C0  0480               	iorwf	0,f
  1045  04C1  0A84               	incf	4,f
  1046  04C2  0831               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1047  04C3  0480               	iorwf	0,f
  1048  04C4  0832               	movf	EEPROM_ReadWord@buff^(0+128),w
  1049  04C5  0084               	movwf	4
  1050  04C6  0800               	movf	0,w
  1051  04C7  00AE               	movwf	??_EEPROM_ReadWord^(0+128)
  1052  04C8  0A84               	incf	4,f
  1053  04C9  0800               	movf	0,w
  1054  04CA  00AF               	movwf	(??_EEPROM_ReadWord^(0+128)+1)
  1055  04CB  0A84               	incf	4,f
  1056  04CC  0800               	movf	0,w
  1057  04CD  00B0               	movwf	(??_EEPROM_ReadWord^(0+128)+2)
  1058  04CE  0A84               	incf	4,f
  1059  04CF  0800               	movf	0,w
  1060  04D0  00B1               	movwf	(??_EEPROM_ReadWord^(0+128)+3)
  1061  04D1  0830               	movf	(??_EEPROM_ReadWord^(0+128)+2),w
  1062  04D2  00B1               	movwf	(??_EEPROM_ReadWord^(0+128)+3)
  1063  04D3  082F               	movf	(??_EEPROM_ReadWord^(0+128)+1),w
  1064  04D4  00B0               	movwf	(??_EEPROM_ReadWord^(0+128)+2)
  1065  04D5  082E               	movf	??_EEPROM_ReadWord^(0+128),w
  1066  04D6  00AF               	movwf	(??_EEPROM_ReadWord^(0+128)+1)
  1067  04D7  01AE               	clrf	??_EEPROM_ReadWord^(0+128)
  1068  04D8  0832               	movf	EEPROM_ReadWord@buff^(0+128),w
  1069  04D9  0084               	movwf	4
  1070  04DA  082E               	movf	??_EEPROM_ReadWord^(0+128),w
  1071  04DB  0080               	movwf	0
  1072  04DC  0A84               	incf	4,f
  1073  04DD  082F               	movf	(??_EEPROM_ReadWord+1)^(0+128),w
  1074  04DE  0080               	movwf	0
  1075  04DF  0A84               	incf	4,f
  1076  04E0  0830               	movf	(??_EEPROM_ReadWord+2)^(0+128),w
  1077  04E1  0080               	movwf	0
  1078  04E2  0A84               	incf	4,f
  1079  04E3  0831               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1080  04E4  0080               	movwf	0
  1081  04E5  0008               	return
  1082  04E6                     PL5:	
  1083  04E6  00B6               	movwf	_EE_Buff^(0+128)
  1084  04E7  00AE               	movwf	??_EEPROM_ReadWord^(0+128)
  1085  04E8  01AF               	clrf	(??_EEPROM_ReadWord^(0+128)+1)
  1086  04E9  01B0               	clrf	(??_EEPROM_ReadWord^(0+128)+2)
  1087  04EA  01B1               	clrf	(??_EEPROM_ReadWord^(0+128)+3)
  1088  04EB  0832               	movf	EEPROM_ReadWord@buff^(0+128),w
  1089  04EC  0084               	movwf	4
  1090  04ED  082E               	movf	??_EEPROM_ReadWord^(0+128),w
  1091  04EE  0480               	iorwf	0,f
  1092  04EF  0A84               	incf	4,f
  1093  04F0  082F               	movf	(??_EEPROM_ReadWord+1)^(0+128),w
  1094  04F1  0480               	iorwf	0,f
  1095  04F2  0A84               	incf	4,f
  1096  04F3  0830               	movf	(??_EEPROM_ReadWord+2)^(0+128),w
  1097  04F4  0008               	return
  1098                           
  1099                           	psect	text699
  1100  06A1                     __ptext699:	
  1101 ;; =============== function _EEPROM_ReadWord ends ============
  1102                           
  1103                           
  1104 ;; *************** function _INT_INITIAL *****************
  1105 ;; Defined at:
  1106 ;;		line 410 in file "1.C"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;		None               void
  1113 ;; Registers used:
  1114 ;;		status,2, status,0, pclath, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : 17F/0
  1117 ;;		On exit  : 17F/20
  1118 ;;		Unchanged: FFE80/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1
  1120 ;;      Params:         0       0       0
  1121 ;;      Locals:         0       0       0
  1122 ;;      Temps:          0       0       0
  1123 ;;      Totals:         0       0       0
  1124 ;;Total ram usage:        0 bytes
  1125 ;; Hardware stack levels used:    1
  1126 ;; Hardware stack levels required when called:    5
  1127 ;; This function calls:
  1128 ;;		_EX_INT_FallingEdge
  1129 ;; This function is called by:
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133  06A1                     _INT_INITIAL:	
  1134                           
  1135                           ;1.C: 411: TRISA2 =1;
  1136                           
  1137                           ; Regs used in _INT_INITIAL: [status,2+status,0+pclath+cstack]
  1138  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  1139  06A2  1505               	bsf	5,2
  1140                           
  1141                           ;1.C: 412: IOCA2 =0;
  1142  06A3  1116               	bcf	22,2
  1143                           
  1144                           ;1.C: 413: EX_INT_FallingEdge();
  1145  06A4  26B3               	fcall	_EX_INT_FallingEdge
  1146                           
  1147                           ;1.C: 414: INTF =0;
  1148  06A5  108B               	bcf	11,1
  1149                           
  1150                           ;1.C: 416: INTE =0;
  1151  06A6  120B               	bcf	11,4
  1152  06A7  0008               	return
  1153  06A8                     __end_of_INT_INITIAL:	
  1154                           
  1155                           	psect	text700
  1156  06A8                     __ptext700:	
  1157 ;; =============== function _INT_INITIAL ends ============
  1158                           
  1159                           
  1160 ;; *************** function _IAPRead *****************
  1161 ;; Defined at:
  1162 ;;		line 488 in file "1.C"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;  EEAddr          1    wreg     unsigned char 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  EEAddr          1    0[BANK1 ] unsigned char 
  1167 ;;  ReEEPROMread    1    1[BANK1 ] unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      unsigned char 
  1170 ;; Registers used:
  1171 ;;		wreg
  1172 ;; Tracked objects:
  1173 ;;		On entry : 17F/20
  1174 ;;		On exit  : 17F/20
  1175 ;;		Unchanged: FFE80/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1
  1177 ;;      Params:         0       0       0
  1178 ;;      Locals:         0       0       2
  1179 ;;      Temps:          0       0       0
  1180 ;;      Totals:         0       0       2
  1181 ;;Total ram usage:        2 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    4
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_EEPROM_ReadWord
  1188 ;;		_EEPROM_Read
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191  06A8                     _IAPRead:	
  1192                           
  1193                           ; Regs used in _IAPRead: [wreg]
  1194                           ;IAPRead@EEAddr stored from wreg
  1195  06A8  00AB               	movwf	IAPRead@EEAddr^(0+128)
  1196                           
  1197                           ;1.C: 489: unsigned char ReEEPROMread;
  1198                           ;1.C: 490: EEADR = EEAddr;
  1199  06A9  009B               	movwf	27	;volatile
  1200                           
  1201                           ;1.C: 491: RD = 1;
  1202  06AA  141C               	bsf	28,0
  1203                           
  1204                           ;1.C: 492: ReEEPROMread = EEDAT;
  1205  06AB  081A               	movf	26,w	;volatile
  1206  06AC  00AC               	movwf	IAPRead@ReEEPROMread^(0+128)
  1207                           
  1208                           ;1.C: 493: return ReEEPROMread;
  1209  06AD  0008               	return
  1210  06AE                     __end_of_IAPRead:	
  1211                           
  1212                           	psect	text701
  1213  066C                     __ptext701:	
  1214 ;; =============== function _IAPRead ends ============
  1215                           
  1216                           
  1217 ;; *************** function _TIMER2_INITIAL *****************
  1218 ;; Defined at:
  1219 ;;		line 464 in file "1.C"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, status,2
  1228 ;; Tracked objects:
  1229 ;;		On entry : 17F/0
  1230 ;;		On exit  : 17F/0
  1231 ;;		Unchanged: FFE80/0
  1232 ;; Data sizes:     COMMON   BANK0   BANK1
  1233 ;;      Params:         0       0       0
  1234 ;;      Locals:         0       0       0
  1235 ;;      Temps:          0       0       0
  1236 ;;      Totals:         0       0       0
  1237 ;;Total ram usage:        0 bytes
  1238 ;; Hardware stack levels used:    1
  1239 ;; Hardware stack levels required when called:    4
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246  066C                     _TIMER2_INITIAL:	
  1247                           
  1248                           ;1.C: 465: T2CON0 = 0B00000001;
  1249                           
  1250                           ; Regs used in _TIMER2_INITIAL: [wreg+status,2]
  1251  066C  3001               	movlw	1
  1252  066D  0092               	movwf	18	;volatile
  1253                           
  1254                           ;1.C: 471: T2CON1 = 0B00000000;
  1255  066E  1683               	bsf	3,5	;RP0=1, select bank1
  1256  066F  019E               	clrf	30	;volatile
  1257                           
  1258                           ;1.C: 476: TMR2H = (53)/256;
  1259  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0671  0193               	clrf	19	;volatile
  1261                           
  1262                           ;1.C: 477: TMR2L = (53)%256;
  1263  0672  3035               	movlw	53
  1264  0673  0091               	movwf	17	;volatile
  1265                           
  1266                           ;1.C: 480: PR2H = (53)/256;
  1267  0674  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0675  0192               	clrf	18	;volatile
  1269                           
  1270                           ;1.C: 481: PR2L = (53)%256;
  1271  0676  0091               	movwf	17	;volatile
  1272                           
  1273                           ;1.C: 483: TMR2IF = 0;
  1274  0677  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0678  108C               	bcf	12,1
  1276                           
  1277                           ;1.C: 484: TMR2IE = 1;
  1278  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1279  067A  148C               	bsf	12,1
  1280                           
  1281                           ;1.C: 486: TMR2ON =0;
  1282  067B  1283               	bcf	3,5	;RP0=0, select bank0
  1283  067C  1112               	bcf	18,2
  1284  067D  0008               	return
  1285  067E                     __end_of_TIMER2_INITIAL:	
  1286                           
  1287                           	psect	text702
  1288  068D                     __ptext702:	
  1289 ;; =============== function _TIMER2_INITIAL ends ============
  1290                           
  1291                           
  1292 ;; *************** function _TIMER0_INITIAL *****************
  1293 ;; Defined at:
  1294 ;;		line 454 in file "1.C"
  1295 ;; Parameters:    Size  Location     Type
  1296 ;;		None
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;		None
  1299 ;; Return value:  Size  Location     Type
  1300 ;;		None               void
  1301 ;; Registers used:
  1302 ;;		wreg, status,2, status,0
  1303 ;; Tracked objects:
  1304 ;;		On entry : 17F/20
  1305 ;;		On exit  : 17F/0
  1306 ;;		Unchanged: FFE80/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1
  1308 ;;      Params:         0       0       0
  1309 ;;      Locals:         0       0       0
  1310 ;;      Temps:          0       0       0
  1311 ;;      Totals:         0       0       0
  1312 ;;Total ram usage:        0 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    4
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321  068D                     _TIMER0_INITIAL:	
  1322  068D  30F8               	movlw	248
  1323                           
  1324                           ;1.C: 455: T0CS = 0;
  1325                           
  1326                           ; Regs used in _TIMER0_INITIAL: [wreg+status,2+status,0]
  1327  068E  1281               	bcf	1,5
  1328                           
  1329                           ;1.C: 456: PSA = 0;
  1330  068F  1181               	bcf	1,3
  1331                           
  1332                           ;1.C: 457: OPTION &= 0xF8;
  1333  0690  0581               	andwf	1,f	;volatile
  1334                           
  1335                           ;1.C: 458: OPTION |= 0x06;
  1336  0691  3006               	movlw	6
  1337  0692  0481               	iorwf	1,f	;volatile
  1338                           
  1339                           ;1.C: 460: TMR0 = 5;
  1340  0693  3005               	movlw	5
  1341  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0695  0081               	movwf	1	;volatile
  1343                           
  1344                           ;1.C: 461: T0IE = 1;
  1345  0696  168B               	bsf	11,5
  1346                           
  1347                           ;1.C: 462: T0IF = 0;
  1348  0697  110B               	bcf	11,2
  1349  0698  0008               	return
  1350  0699                     __end_of_TIMER0_INITIAL:	
  1351                           
  1352                           	psect	text703
  1353  06AE                     __ptext703:	
  1354 ;; =============== function _TIMER0_INITIAL ends ============
  1355                           
  1356                           
  1357 ;; *************** function _WDT_INITIAL *****************
  1358 ;; Defined at:
  1359 ;;		line 449 in file "1.C"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;		None
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;		None
  1364 ;; Return value:  Size  Location     Type
  1365 ;;		None               void
  1366 ;; Registers used:
  1367 ;;		wreg
  1368 ;; Tracked objects:
  1369 ;;		On entry : 17F/20
  1370 ;;		On exit  : 20/0
  1371 ;;		Unchanged: FFE00/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1
  1373 ;;      Params:         0       0       0
  1374 ;;      Locals:         0       0       0
  1375 ;;      Temps:          0       0       0
  1376 ;;      Totals:         0       0       0
  1377 ;;Total ram usage:        0 bytes
  1378 ;; Hardware stack levels used:    1
  1379 ;; Hardware stack levels required when called:    4
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386  06AE                     _WDT_INITIAL:	
  1387                           
  1388                           ; Regs used in _WDT_INITIAL: [wreg]
  1389  06AE  0064               	clrwdt	;#
  1390                           
  1391                           ;1.C: 451: WDTCON = 0B00010110;
  1392  06AF  3016               	movlw	22
  1393  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1394  06B1  0098               	movwf	24	;volatile
  1395  06B2  0008               	return
  1396  06B3                     __end_of_WDT_INITIAL:	
  1397                           
  1398                           	psect	text704
  1399  0613                     __ptext704:	
  1400 ;; =============== function _WDT_INITIAL ends ============
  1401                           
  1402                           
  1403 ;; *************** function _OSC_INIT *****************
  1404 ;; Defined at:
  1405 ;;		line 426 in file "1.C"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;		None
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;		None
  1410 ;; Return value:  Size  Location     Type
  1411 ;;		None               void
  1412 ;; Registers used:
  1413 ;;		wreg, status,2
  1414 ;; Tracked objects:
  1415 ;;		On entry : 17F/0
  1416 ;;		On exit  : 17F/20
  1417 ;;		Unchanged: FFE80/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1
  1419 ;;      Params:         0       0       0
  1420 ;;      Locals:         0       0       0
  1421 ;;      Temps:          0       0       0
  1422 ;;      Totals:         0       0       0
  1423 ;;Total ram usage:        0 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    4
  1426 ;; This function calls:
  1427 ;;		Nothing
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432  0613                     _OSC_INIT:	
  1433                           
  1434                           ;1.C: 427: OSCCON = 0B01100001;
  1435                           
  1436                           ; Regs used in _OSC_INIT: [wreg+status,2]
  1437  0613  3061               	movlw	97
  1438  0614  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0615  008F               	movwf	15	;volatile
  1440                           
  1441                           ;1.C: 432: INTCON = 0;
  1442  0616  018B               	clrf	11	;volatile
  1443                           
  1444                           ;1.C: 434: PORTA = 0B00000000;
  1445  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0618  0185               	clrf	5	;volatile
  1447                           
  1448                           ;1.C: 435: TRISA = 0B00010111;
  1449  0619  3017               	movlw	23
  1450  061A  1683               	bsf	3,5	;RP0=1, select bank1
  1451  061B  0085               	movwf	5	;volatile
  1452                           
  1453                           ;1.C: 436: WPUA = 0B00000000;
  1454  061C  0195               	clrf	21	;volatile
  1455                           
  1456                           ;1.C: 437: PSRCA = 0B11111111;
  1457  061D  30FF               	movlw	255
  1458  061E  0088               	movwf	8	;volatile
  1459                           
  1460                           ;1.C: 438: PSINKA = 0B11111111;
  1461  061F  0097               	movwf	23	;volatile
  1462                           
  1463                           ;1.C: 440: PORTC = 0B00000000;
  1464  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0621  0187               	clrf	7	;volatile
  1466                           
  1467                           ;1.C: 441: TRISC = 0B11110000;
  1468  0622  30F0               	movlw	240
  1469  0623  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0624  0087               	movwf	7	;volatile
  1471                           
  1472                           ;1.C: 442: WPUC = 0B00000000;
  1473  0625  0193               	clrf	19	;volatile
  1474                           
  1475                           ;1.C: 443: PSRCC = 0B11111111;
  1476  0626  30FF               	movlw	255
  1477  0627  0094               	movwf	20	;volatile
  1478                           
  1479                           ;1.C: 444: PSINKC = 0B11111111;
  1480  0628  009F               	movwf	31	;volatile
  1481                           
  1482                           ;1.C: 446: OPTION = 0B00001000;
  1483  0629  3008               	movlw	8
  1484  062A  0081               	movwf	1	;volatile
  1485  062B  0008               	return
  1486  062C                     __end_of_OSC_INIT:	
  1487                           
  1488                           	psect	text705
  1489  06B3                     __ptext705:	
  1490 ;; =============== function _OSC_INIT ends ============
  1491                           
  1492                           
  1493 ;; *************** function _EX_INT_FallingEdge *****************
  1494 ;; Defined at:
  1495 ;;		line 422 in file "1.C"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;		None               void
  1502 ;; Registers used:
  1503 ;;		None
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 20/20
  1507 ;;		Unchanged: FFFDF/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1
  1509 ;;      Params:         0       0       0
  1510 ;;      Locals:         0       0       0
  1511 ;;      Temps:          0       0       0
  1512 ;;      Totals:         0       0       0
  1513 ;;Total ram usage:        0 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    4
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_INT_INITIAL
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523  06B3                     _EX_INT_FallingEdge:	
  1524                           
  1525                           ;1.C: 423: INTEDG =0;
  1526                           
  1527                           ; Regs used in _EX_INT_FallingEdge: []
  1528  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  1529  06B4  1301               	bcf	1,6
  1530                           
  1531                           ;1.C: 424: FLAGs &= ~0x01;
  1532  06B5  1074               	bcf	_FLAGs,0
  1533  06B6  0008               	return
  1534  06B7                     __end_of_EX_INT_FallingEdge:	
  1535                           
  1536                           	psect	text706
  1537  0010                     __ptext706:	
  1538 ;; =============== function _EX_INT_FallingEdge ends ============
  1539                           
  1540                           
  1541 ;; *************** function _ISR *****************
  1542 ;; Defined at:
  1543 ;;		line 138 in file "1.C"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;		None
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;		None
  1548 ;; Return value:  Size  Location     Type
  1549 ;;		None               void
  1550 ;; Registers used:
  1551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 20/0
  1555 ;;		Unchanged: FFEDF/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1
  1557 ;;      Params:         0       0       0
  1558 ;;      Locals:         0       0       0
  1559 ;;      Temps:          0      10       0
  1560 ;;      Totals:         0      10       0
  1561 ;;Total ram usage:       10 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    3
  1564 ;; This function calls:
  1565 ;;		_EX_INT_RisingEdge
  1566 ;;		i1_EX_INT_FallingEdge
  1567 ;;		___wmul
  1568 ;;		_led1_debug
  1569 ;;		___lbmod
  1570 ;;		_KEYSCAN
  1571 ;;		_KEY
  1572 ;; This function is called by:
  1573 ;;		Interrupt level 1
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576  0010                     _ISR:	
  1577                           
  1578                           ;1.C: 140: if(INTE && INTF){
  1579  0010  1A0B               	btfsc	11,4
  1580  0011  1C8B               	btfss	11,1
  1581  0012  2962               	goto	i1l3047
  1582                           
  1583                           ;1.C: 141: INTF = 0;
  1584  0013  108B               	bcf	11,1
  1585                           
  1586                           ;1.C: 142: INTE = 0;
  1587  0014  120B               	bcf	11,4
  1588                           
  1589                           ;1.C: 143: TMR2ON =0;
  1590  0015  1112               	bcf	18,2
  1591                           
  1592                           ;1.C: 144: if((FLAGs&0x01) == 0){
  1593  0016  1874               	btfsc	_FLAGs,0
  1594  0017  281D               	goto	i1l854
  1595                           
  1596                           ;1.C: 145: Indata = 0;
  1597  0018  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0019  01A8               	clrf	_Indata^(0+128)
  1599  001A  01A9               	clrf	(_Indata+1)^(0+128)
  1600                           
  1601                           ;1.C: 146: EX_INT_RisingEdge();
  1602  001B  26C2               	fcall	_EX_INT_RisingEdge
  1603                           
  1604                           ;1.C: 147: }else if((FLAGs&0x01) == 0x01){
  1605  001C  295F               	goto	i1l3043
  1606  001D                     i1l854:	
  1607  001D  1C74               	btfss	_FLAGs,0
  1608  001E  295F               	goto	i1l3043
  1609                           
  1610                           ;1.C: 148: EX_INT_FallingEdge();
  1611  001F  26BB               	fcall	i1_EX_INT_FallingEdge
  1612                           
  1613                           ;1.C: 149: buff = Indata*53;
  1614  0020  0829               	movf	(_Indata+1)^(0+128),w
  1615  0021  00F7               	movwf	?___wmul+1
  1616  0022  0828               	movf	_Indata^(0+128),w
  1617  0023  00F6               	movwf	?___wmul
  1618  0024  3035               	movlw	53
  1619  0025  00F8               	movwf	?___wmul+2
  1620  0026  01F9               	clrf	?___wmul+3
  1621  0027  262C               	fcall	___wmul
  1622  0028  0877               	movf	?___wmul+1,w
  1623  0029  1283               	bcf	3,5	;RP0=0, select bank0
  1624  002A  00A1               	movwf	_buff+1
  1625  002B  0876               	movf	?___wmul,w
  1626  002C  00A0               	movwf	_buff
  1627                           
  1628                           ;1.C: 150: Indata = 0;
  1629  002D  1683               	bsf	3,5	;RP0=1, select bank1
  1630  002E  01A8               	clrf	_Indata^(0+128)
  1631  002F  01A9               	clrf	(_Indata+1)^(0+128)
  1632                           
  1633                           ;1.C: 152: if( ((FLAGs&0x10) == 0) &&
  1634                           ;1.C: 153: ((FLAGs&0x20) == 0) &&
  1635                           ;1.C: 154: ((FLAGs&0x40) == 0)
  1636                           ;1.C: 155: ){
  1637  0030  1E74               	btfss	_FLAGs,4
  1638  0031  1AF4               	btfsc	_FLAGs,5
  1639  0032  295F               	goto	i1l3043
  1640  0033  1B74               	btfsc	_FLAGs,6
  1641  0034  295F               	goto	i1l3043
  1642                           
  1643                           ;1.C: 156: if((FLAGs&0x08) == 0x08){
  1644  0035  1DF4               	btfss	_FLAGs,3
  1645  0036  294B               	goto	i1l3023
  1646                           
  1647                           ;1.C: 157: if(num < 24){
  1648  0037  3018               	movlw	24
  1649  0038  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0039  022A               	subwf	_num,w
  1651  003A  1803               	skipnc
  1652  003B  2860               	goto	i1l2941
  1653                           
  1654                           ;1.C: 158: if((buff>200)&&(buff<450)){
  1655  003C  3000               	movlw	0
  1656  003D  0221               	subwf	_buff+1,w
  1657  003E  30C9               	movlw	201
  1658  003F  1903               	skipnz
  1659  0040  0220               	subwf	_buff,w
  1660  0041  1C03               	skipc
  1661  0042  284D               	goto	i1l2935
  1662  0043  3001               	movlw	1
  1663  0044  0221               	subwf	_buff+1,w
  1664  0045  30C2               	movlw	194
  1665  0046  1903               	skipnz
  1666  0047  0220               	subwf	_buff,w
  1667  0048  1803               	skipnc
  1668  0049  284D               	goto	i1l2935
  1669                           
  1670                           ;1.C: 159: remotekey = remotekey<<1;
  1671  004A  1003               	clrc
  1672  004B  225E               	fcall	PL12	;call to abstracted procedure
  1673                           
  1674                           ;1.C: 160: remotekey |= 0x00000001;
  1675  004C  1424               	bsf	_remotekey^(0+128),0
  1676  004D                     i1l2935:	
  1677                           
  1678                           ;1.C: 161: }
  1679                           ;1.C: 162: if((buff>700)&&(buff<1200)){
  1680  004D  3002               	movlw	2
  1681  004E  1283               	bcf	3,5	;RP0=0, select bank0
  1682  004F  0221               	subwf	_buff+1,w
  1683  0050  30BD               	movlw	189
  1684  0051  1903               	skipnz
  1685  0052  0220               	subwf	_buff,w
  1686  0053  1C03               	skipc
  1687  0054  285E               	goto	i1l861
  1688  0055  3004               	movlw	4
  1689  0056  0221               	subwf	_buff+1,w
  1690  0057  30B0               	movlw	176
  1691  0058  1903               	skipnz
  1692  0059  0220               	subwf	_buff,w
  1693  005A  1803               	skipnc
  1694  005B  285E               	goto	i1l861
  1695                           
  1696                           ;1.C: 163: remotekey = remotekey<<1;
  1697  005C  1003               	clrc
  1698  005D  225E               	fcall	PL12	;call to abstracted procedure
  1699  005E                     i1l861:	
  1700                           
  1701                           ;1.C: 164: }
  1702                           ;1.C: 165: num++;
  1703  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1704  005F  0AAA               	incf	_num,f
  1705  0060                     i1l2941:	
  1706                           
  1707                           ;1.C: 166: }
  1708                           ;1.C: 168: if(num >= 24){
  1709  0060  3018               	movlw	24
  1710  0061  022A               	subwf	_num,w
  1711  0062  1C03               	skipc
  1712  0063  294B               	goto	i1l3023
  1713                           
  1714                           ;1.C: 170: if(remotekey>0){
  1715  0064  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0065  0827               	movf	(_remotekey+3)^(0+128),w
  1717  0066  0426               	iorwf	(_remotekey+2)^(0+128),w
  1718  0067  0425               	iorwf	(_remotekey+1)^(0+128),w
  1719  0068  0424               	iorwf	_remotekey^(0+128),w
  1720  0069  1903               	skipnz
  1721  006A  288B               	goto	i1l863
  1722                           
  1723                           ;1.C: 171: if(Match_remotekey == remotekey){
  1724  006B  0827               	movf	(_remotekey+3)^(0+128),w
  1725  006C  0673               	xorwf	_Match_remotekey+3,w
  1726  006D  1D03               	skipz
  1727  006E  2879               	goto	u149_25
  1728  006F  0826               	movf	(_remotekey+2)^(0+128),w
  1729  0070  0672               	xorwf	_Match_remotekey+2,w
  1730  0071  1D03               	skipz
  1731  0072  2879               	goto	u149_25
  1732  0073  0825               	movf	(_remotekey+1)^(0+128),w
  1733  0074  0671               	xorwf	_Match_remotekey+1,w
  1734  0075  1D03               	skipz
  1735  0076  2879               	goto	u149_25
  1736  0077  0824               	movf	_remotekey^(0+128),w
  1737  0078  0670               	xorwf	_Match_remotekey,w
  1738  0079                     u149_25:	
  1739                           
  1740                           ;1.C: 172: remotekey_Receive_num++;
  1741  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1742  007A  1D03               	skipz
  1743  007B  287F               	goto	L1
  1744  007C  0AAB               	incf	_remotekey_Receive_num,f
  1745                           
  1746                           ;1.C: 173: match_slice = 0;
  1747  007D  01A8               	clrf	_match_slice
  1748                           
  1749                           ;1.C: 174: }
  1750                           ;1.C: 175: if(remotekey_Receive_num == 0) Match_remotekey = remotekey;
  1751  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1752  007F                     L1:	
  1753  007F  08AB               	movf	_remotekey_Receive_num,f
  1754  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1755  0081  1D03               	skipz
  1756  0082  288C               	goto	L2
  1757  0083  0827               	movf	(_remotekey+3)^(0+128),w
  1758  0084  00F3               	movwf	_Match_remotekey+3
  1759  0085  0826               	movf	(_remotekey+2)^(0+128),w
  1760  0086  00F2               	movwf	_Match_remotekey+2
  1761  0087  0825               	movf	(_remotekey+1)^(0+128),w
  1762  0088  00F1               	movwf	_Match_remotekey+1
  1763  0089  0824               	movf	_remotekey^(0+128),w
  1764  008A  00F0               	movwf	_Match_remotekey
  1765  008B                     i1l863:	
  1766                           
  1767                           ;1.C: 176: }
  1768                           ;1.C: 178: Ctrl_remotekey = remotekey;
  1769  008B  1683               	bsf	3,5	;RP0=1, select bank1
  1770  008C                     L2:	
  1771  008C  0827               	movf	(_remotekey+3)^(0+128),w
  1772  008D  00A3               	movwf	(_Ctrl_remotekey+3)^(0+128)
  1773  008E  0826               	movf	(_remotekey+2)^(0+128),w
  1774  008F  00A2               	movwf	(_Ctrl_remotekey+2)^(0+128)
  1775  0090  0825               	movf	(_remotekey+1)^(0+128),w
  1776  0091  00A1               	movwf	(_Ctrl_remotekey+1)^(0+128)
  1777  0092  0824               	movf	_remotekey^(0+128),w
  1778  0093  00A0               	movwf	_Ctrl_remotekey^(0+128)
  1779                           
  1780                           ;1.C: 180: if( ((PRESSED&0x10) == 0) &&
  1781                           ;1.C: 181: ((PRESSED&0x20) == 0) &&
  1782                           ;1.C: 182: ((PRESSED&0x40) == 0)
  1783                           ;1.C: 183: ){
  1784  0094  1E75               	btfss	_PRESSED,4
  1785  0095  1AF5               	btfsc	_PRESSED,5
  1786  0096  2941               	goto	i1l866
  1787  0097  1B75               	btfsc	_PRESSED,6
  1788  0098  2941               	goto	i1l866
  1789                           
  1790                           ;1.C: 184: if((FLAGs&0x10) == 0){
  1791  0099  1A74               	btfsc	_FLAGs,4
  1792  009A  28D1               	goto	i1l867
  1793                           
  1794                           ;1.C: 185: for(buff=0;buff<CH1_remotekey_num;buff++){
  1795  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1796  009C  01A0               	clrf	_buff
  1797  009D  01A1               	clrf	_buff+1
  1798  009E                     i1l2979:	
  1799  009E  0867               	movf	_CH1_remotekey_num,w
  1800  009F  00DD               	movwf	??_ISR
  1801  00A0  01DE               	clrf	??_ISR+1
  1802  00A1  085E               	movf	??_ISR+1,w
  1803  00A2  0221               	subwf	_buff+1,w
  1804  00A3  1D03               	skipz
  1805  00A4  28A7               	goto	u156_25
  1806  00A5  085D               	movf	??_ISR,w
  1807  00A6  0220               	subwf	_buff,w
  1808  00A7                     u156_25:	
  1809  00A7  1803               	btfsc	3,0
  1810  00A8  28D1               	goto	i1l867
  1811                           
  1812                           ;1.C: 186: if(Ctrl_remotekey == CH1_remotekey[buff]){
  1813  00A9  0820               	movf	_buff,w
  1814  00AA  2240               	fcall	PL8	;call to abstracted procedure
  1815  00AB  3E2D               	addlw	_CH1_remotekey& (0+255)
  1816  00AC  2224               	fcall	PL2	;call to abstracted procedure
  1817  00AD  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1818  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  1819  00AF  0661               	xorwf	??_ISR+4,w
  1820  00B0  1D03               	skipz
  1821  00B1  28C2               	goto	u155_25
  1822  00B2  1683               	bsf	3,5	;RP0=1, select bank1
  1823  00B3  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1824  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1825  00B5  0660               	xorwf	??_ISR+3,w
  1826  00B6  1D03               	skipz
  1827  00B7  28C2               	goto	u155_25
  1828  00B8  1683               	bsf	3,5	;RP0=1, select bank1
  1829  00B9  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1830  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1831  00BB  065F               	xorwf	??_ISR+2,w
  1832  00BC  1D03               	skipz
  1833  00BD  28C2               	goto	u155_25
  1834  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1835  00BF  0820               	movf	_Ctrl_remotekey^(0+128),w
  1836  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1837  00C1  065E               	xorwf	??_ISR+1,w
  1838  00C2                     u155_25:	
  1839  00C2  1D03               	skipz
  1840  00C3  28CC               	goto	i1l2977
  1841                           
  1842                           ;1.C: 187: FLAGs |= 0x10;
  1843  00C4  1674               	bsf	_FLAGs,4
  1844                           
  1845                           ;1.C: 188: Key_dealed_counter = 0;
  1846  00C5  01A6               	clrf	_Key_dealed_counter
  1847                           
  1848                           ;1.C: 189: led1_debug();
  1849  00C6  26BF               	fcall	_led1_debug
  1850                           
  1851                           ;1.C: 190: PA7 = ~PA7;
  1852  00C7  3080               	movlw	128
  1853  00C8  0685               	xorwf	5,f
  1854                           
  1855                           ;1.C: 191: CH1_remotekey_Latest = buff;
  1856  00C9  0820               	movf	_buff,w
  1857  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1858  00CB  00B3               	movwf	_CH1_remotekey_Latest^(0+128)
  1859  00CC                     i1l2977:	
  1860  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1861  00CD  0AA0               	incf	_buff,f
  1862  00CE  1903               	skipnz
  1863  00CF  0AA1               	incf	_buff+1,f
  1864  00D0  289E               	goto	i1l2979
  1865  00D1                     i1l867:	
  1866                           
  1867                           ;1.C: 192: }
  1868                           ;1.C: 193: }
  1869                           ;1.C: 194: }
  1870                           ;1.C: 195: if((FLAGs&0x20) == 0){
  1871  00D1  1AF4               	btfsc	_FLAGs,5
  1872  00D2  2909               	goto	i1l872
  1873                           
  1874                           ;1.C: 196: for(buff=0;buff<CH2_remotekey_num;buff++){
  1875  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1876  00D4  01A0               	clrf	_buff
  1877  00D5  01A1               	clrf	_buff+1
  1878  00D6                     i1l2997:	
  1879  00D6  0868               	movf	_CH2_remotekey_num,w
  1880  00D7  00DD               	movwf	??_ISR
  1881  00D8  01DE               	clrf	??_ISR+1
  1882  00D9  085E               	movf	??_ISR+1,w
  1883  00DA  0221               	subwf	_buff+1,w
  1884  00DB  1D03               	skipz
  1885  00DC  28DF               	goto	u159_25
  1886  00DD  085D               	movf	??_ISR,w
  1887  00DE  0220               	subwf	_buff,w
  1888  00DF                     u159_25:	
  1889  00DF  1803               	btfsc	3,0
  1890  00E0  2909               	goto	i1l872
  1891                           
  1892                           ;1.C: 197: if(Ctrl_remotekey == CH2_remotekey[buff]){
  1893  00E1  0820               	movf	_buff,w
  1894  00E2  2240               	fcall	PL8	;call to abstracted procedure
  1895  00E3  3E3D               	addlw	_CH2_remotekey& (0+255)
  1896  00E4  2224               	fcall	PL2	;call to abstracted procedure
  1897  00E5  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1898  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1899  00E7  0661               	xorwf	??_ISR+4,w
  1900  00E8  1D03               	skipz
  1901  00E9  28FA               	goto	u158_25
  1902  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1903  00EB  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1904  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1905  00ED  0660               	xorwf	??_ISR+3,w
  1906  00EE  1D03               	skipz
  1907  00EF  28FA               	goto	u158_25
  1908  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1909  00F1  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1910  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  1911  00F3  065F               	xorwf	??_ISR+2,w
  1912  00F4  1D03               	skipz
  1913  00F5  28FA               	goto	u158_25
  1914  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  1915  00F7  0820               	movf	_Ctrl_remotekey^(0+128),w
  1916  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1917  00F9  065E               	xorwf	??_ISR+1,w
  1918  00FA                     u158_25:	
  1919  00FA  1D03               	skipz
  1920  00FB  2904               	goto	i1l2995
  1921                           
  1922                           ;1.C: 198: FLAGs |= 0x20;
  1923  00FC  16F4               	bsf	_FLAGs,5
  1924                           
  1925                           ;1.C: 199: Key_dealed_counter = 0;
  1926  00FD  01A6               	clrf	_Key_dealed_counter
  1927                           
  1928                           ;1.C: 200: led1_debug();
  1929  00FE  26BF               	fcall	_led1_debug
  1930                           
  1931                           ;1.C: 201: PA6 = ~PA6;
  1932  00FF  3040               	movlw	64
  1933  0100  0685               	xorwf	5,f
  1934                           
  1935                           ;1.C: 202: CH2_remotekey_Latest = buff;
  1936  0101  0820               	movf	_buff,w
  1937  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0103  00B4               	movwf	_CH2_remotekey_Latest^(0+128)
  1939  0104                     i1l2995:	
  1940  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0105  0AA0               	incf	_buff,f
  1942  0106  1903               	skipnz
  1943  0107  0AA1               	incf	_buff+1,f
  1944  0108  28D6               	goto	i1l2997
  1945  0109                     i1l872:	
  1946                           
  1947                           ;1.C: 203: }
  1948                           ;1.C: 204: }
  1949                           ;1.C: 205: }
  1950                           ;1.C: 206: if((FLAGs&0x40) == 0){
  1951  0109  1B74               	btfsc	_FLAGs,6
  1952  010A  2941               	goto	i1l866
  1953                           
  1954                           ;1.C: 207: for(buff=0;buff<CH3_remotekey_num;buff++){
  1955  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1956  010C  01A0               	clrf	_buff
  1957  010D  01A1               	clrf	_buff+1
  1958  010E                     i1l3015:	
  1959  010E  0869               	movf	_CH3_remotekey_num,w
  1960  010F  00DD               	movwf	??_ISR
  1961  0110  01DE               	clrf	??_ISR+1
  1962  0111  085E               	movf	??_ISR+1,w
  1963  0112  0221               	subwf	_buff+1,w
  1964  0113  1D03               	skipz
  1965  0114  2917               	goto	u162_25
  1966  0115  085D               	movf	??_ISR,w
  1967  0116  0220               	subwf	_buff,w
  1968  0117                     u162_25:	
  1969  0117  1803               	btfsc	3,0
  1970  0118  2941               	goto	i1l866
  1971                           
  1972                           ;1.C: 208: if(Ctrl_remotekey == CH3_remotekey[buff]){
  1973  0119  0820               	movf	_buff,w
  1974  011A  2240               	fcall	PL8	;call to abstracted procedure
  1975  011B  3E4D               	addlw	_CH3_remotekey& (0+255)
  1976  011C  2224               	fcall	PL2	;call to abstracted procedure
  1977  011D  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1978  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1979  011F  0661               	xorwf	??_ISR+4,w
  1980  0120  1D03               	skipz
  1981  0121  2932               	goto	u161_25
  1982  0122  1683               	bsf	3,5	;RP0=1, select bank1
  1983  0123  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1984  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0125  0660               	xorwf	??_ISR+3,w
  1986  0126  1D03               	skipz
  1987  0127  2932               	goto	u161_25
  1988  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0129  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1990  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1991  012B  065F               	xorwf	??_ISR+2,w
  1992  012C  1D03               	skipz
  1993  012D  2932               	goto	u161_25
  1994  012E  1683               	bsf	3,5	;RP0=1, select bank1
  1995  012F  0820               	movf	_Ctrl_remotekey^(0+128),w
  1996  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0131  065E               	xorwf	??_ISR+1,w
  1998  0132                     u161_25:	
  1999  0132  1D03               	skipz
  2000  0133  293C               	goto	i1l3013
  2001                           
  2002                           ;1.C: 209: FLAGs |= 0x40;
  2003  0134  1774               	bsf	_FLAGs,6
  2004                           
  2005                           ;1.C: 210: Key_dealed_counter = 0;
  2006  0135  01A6               	clrf	_Key_dealed_counter
  2007                           
  2008                           ;1.C: 211: led1_debug();
  2009  0136  26BF               	fcall	_led1_debug
  2010                           
  2011                           ;1.C: 212: PA5 = ~PA5;
  2012  0137  3020               	movlw	32
  2013  0138  0685               	xorwf	5,f
  2014                           
  2015                           ;1.C: 213: CH3_remotekey_Latest = buff;
  2016  0139  0820               	movf	_buff,w
  2017  013A  1683               	bsf	3,5	;RP0=1, select bank1
  2018  013B  00B5               	movwf	_CH3_remotekey_Latest^(0+128)
  2019  013C                     i1l3013:	
  2020  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2021  013D  0AA0               	incf	_buff,f
  2022  013E  1903               	skipnz
  2023  013F  0AA1               	incf	_buff+1,f
  2024  0140  290E               	goto	i1l3015
  2025  0141                     i1l866:	
  2026                           
  2027                           ;1.C: 214: }
  2028                           ;1.C: 215: }
  2029                           ;1.C: 216: }
  2030                           ;1.C: 217: }
  2031                           ;1.C: 218: FLAGs &= ~0x08;
  2032  0141  11F4               	bcf	_FLAGs,3
  2033                           
  2034                           ;1.C: 219: Indata = 0;
  2035  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2036  0143  01A8               	clrf	_Indata^(0+128)
  2037  0144  01A9               	clrf	(_Indata+1)^(0+128)
  2038                           
  2039                           ;1.C: 220: num = 0;
  2040  0145  1283               	bcf	3,5	;RP0=0, select bank0
  2041                           
  2042                           ;1.C: 221: remotekey = 0;
  2043  0146  2257               	fcall	PL11	;call to abstracted procedure
  2044                           
  2045                           ;1.C: 222: Ctrl_remotekey = 0;
  2046  0147  01A0               	clrf	_Ctrl_remotekey^(0+128)
  2047  0148  01A1               	clrf	(_Ctrl_remotekey+1)^(0+128)
  2048  0149  01A2               	clrf	(_Ctrl_remotekey+2)^(0+128)
  2049  014A  01A3               	clrf	(_Ctrl_remotekey+3)^(0+128)
  2050  014B                     i1l3023:	
  2051                           
  2052                           ;1.C: 223: }
  2053                           ;1.C: 224: }
  2054                           ;1.C: 225: if((FLAGs&0x08) == 0){
  2055  014B  19F4               	btfsc	_FLAGs,3
  2056  014C  295F               	goto	i1l3043
  2057                           
  2058                           ;1.C: 226: if(buff > 7000){
  2059  014D  301B               	movlw	27
  2060  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2061  014F  0221               	subwf	_buff+1,w
  2062  0150  3059               	movlw	89
  2063  0151  1903               	skipnz
  2064  0152  0220               	subwf	_buff,w
  2065  0153  1C03               	skipc
  2066  0154  295F               	goto	i1l3043
  2067                           
  2068                           ;1.C: 227: FLAGs |= 0x08;
  2069  0155  15F4               	bsf	_FLAGs,3
  2070                           
  2071                           ;1.C: 228: num = 0;
  2072                           
  2073                           ;1.C: 229: remotekey = 0;
  2074  0156  2257               	fcall	PL11	;call to abstracted procedure
  2075                           
  2076                           ;1.C: 230: if( ((FLAGs&0x10) == 0x10) ||
  2077                           ;1.C: 231: ((FLAGs&0x20) == 0x20) ||
  2078                           ;1.C: 232: ((FLAGs&0x40) == 0x40)
  2079                           ;1.C: 233: ){
  2080  0157  1E74               	btfss	_FLAGs,4
  2081  0158  1AF4               	btfsc	_FLAGs,5
  2082  0159  295C               	goto	i1l3039
  2083  015A  1F74               	btfss	_FLAGs,6
  2084  015B  295F               	goto	i1l3043
  2085  015C                     i1l3039:	
  2086                           
  2087                           ;1.C: 234: remotekey_slice = 0;
  2088  015C  1283               	bcf	3,5	;RP0=0, select bank0
  2089  015D  01AC               	clrf	_remotekey_slice
  2090                           
  2091                           ;1.C: 235: FLAGs &= ~0x08;
  2092  015E  11F4               	bcf	_FLAGs,3
  2093  015F                     i1l3043:	
  2094                           
  2095                           ;1.C: 236: }
  2096                           ;1.C: 237: }
  2097                           ;1.C: 238: }
  2098                           ;1.C: 239: }
  2099                           ;1.C: 240: }
  2100                           ;1.C: 241: TMR2ON =1;
  2101  015F  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0160  1512               	bsf	18,2
  2103                           
  2104                           ;1.C: 242: INTE = 1;
  2105  0161  160B               	bsf	11,4
  2106  0162                     i1l3047:	
  2107                           
  2108                           ;1.C: 243: }
  2109                           ;1.C: 246: if(TMR2IE && TMR2IF){
  2110  0162  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0163  1C8C               	btfss	12,1
  2112  0164  2975               	goto	i1l3061
  2113  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0166  1C8C               	btfss	12,1
  2115  0167  2975               	goto	i1l3061
  2116                           
  2117                           ;1.C: 247: TMR2IF = 0;
  2118  0168  108C               	bcf	12,1
  2119                           
  2120                           ;1.C: 249: if((FLAGs&0x02) == 0x02){
  2121  0169  1CF4               	btfss	_FLAGs,1
  2122  016A  296F               	goto	i1l3055
  2123                           
  2124                           ;1.C: 250: Indata++;
  2125  016B  1683               	bsf	3,5	;RP0=1, select bank1
  2126  016C  0AA8               	incf	_Indata^(0+128),f
  2127  016D  1903               	skipnz
  2128  016E  0AA9               	incf	(_Indata+1)^(0+128),f
  2129  016F                     i1l3055:	
  2130                           
  2131                           ;1.C: 251: }
  2132                           ;1.C: 252: if(PA2 == 1){
  2133  016F  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0170  1D05               	btfss	5,2
  2135  0171  2975               	goto	i1l3061
  2136                           
  2137                           ;1.C: 253: FLAGs |= 0x02;
  2138  0172  14F4               	bsf	_FLAGs,1
  2139                           
  2140                           ;1.C: 254: remotekey_slice = 0;
  2141  0173  01AC               	clrf	_remotekey_slice
  2142                           
  2143                           ;1.C: 255: Key_dealed_counter = 0;
  2144  0174  01A6               	clrf	_Key_dealed_counter
  2145  0175                     i1l3061:	
  2146                           
  2147                           ;1.C: 257: }
  2148                           ;1.C: 296: }
  2149                           ;1.C: 299: if(T0IE && T0IF){
  2150  0175  1A8B               	btfsc	11,5
  2151  0176  1D0B               	btfss	11,2
  2152  0177  2A18               	goto	i1l921
  2153                           
  2154                           ;1.C: 300: T0IF = 0;
  2155  0178  110B               	bcf	11,2
  2156                           
  2157                           ;1.C: 301: ms16_counter ++;
  2158  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2159  017A  0AA9               	incf	_ms16_counter,f
  2160                           
  2161                           ;1.C: 304: if( ((FLAGs&0x10) == 0x10) ||
  2162                           ;1.C: 305: ((FLAGs&0x20) == 0x20) ||
  2163                           ;1.C: 306: ((FLAGs&0x40) == 0x40)
  2164                           ;1.C: 307: ){
  2165  017B  1E74               	btfss	_FLAGs,4
  2166  017C  1AF4               	btfsc	_FLAGs,5
  2167  017D  2980               	goto	i1l893
  2168  017E  1F74               	btfss	_FLAGs,6
  2169  017F  2997               	goto	i1l3099
  2170  0180                     i1l893:	
  2171                           
  2172                           ;1.C: 308: if(PA2 == 0) remotekey_slice++;
  2173  0180  1905               	btfsc	5,2
  2174  0181  2983               	goto	i1l3077
  2175  0182  0AAC               	incf	_remotekey_slice,f
  2176  0183                     i1l3077:	
  2177                           
  2178                           ;1.C: 309: if(PA2 == 1) remotekey_slice = 0;
  2179  0183  1D05               	btfss	5,2
  2180  0184  2986               	goto	i1l3081
  2181  0185  01AC               	clrf	_remotekey_slice
  2182  0186                     i1l3081:	
  2183                           
  2184                           ;1.C: 310: if(Key_dealed_counter<255) Key_dealed_counter++;
  2185  0186  0826               	movf	_Key_dealed_counter,w
  2186  0187  3AFF               	xorlw	255
  2187  0188  1D03               	btfss	3,2
  2188  0189  0AA6               	incf	_Key_dealed_counter,f
  2189                           
  2190                           ;1.C: 311: if( (remotekey_slice>(150/8)) ||
  2191                           ;1.C: 312: (Key_dealed_counter > (1024/8))
  2192                           ;1.C: 313: ){
  2193  018A  3013               	movlw	19
  2194  018B  022C               	subwf	_remotekey_slice,w
  2195  018C  1803               	skipnc
  2196  018D  2992               	goto	i1l3089
  2197  018E  3081               	movlw	129
  2198  018F  0226               	subwf	_Key_dealed_counter,w
  2199  0190  1C03               	skipc
  2200  0191  2997               	goto	i1l3099
  2201  0192                     i1l3089:	
  2202                           
  2203                           ;1.C: 314: remotekey_slice = 0;
  2204  0192  01AC               	clrf	_remotekey_slice
  2205                           
  2206                           ;1.C: 316: FLAGs &= ~0x02;
  2207  0193  10F4               	bcf	_FLAGs,1
  2208                           
  2209                           ;1.C: 317: FLAGs &= ~0x10;
  2210  0194  1274               	bcf	_FLAGs,4
  2211                           
  2212                           ;1.C: 318: FLAGs &= ~0x20;
  2213  0195  12F4               	bcf	_FLAGs,5
  2214                           
  2215                           ;1.C: 319: FLAGs &= ~0x40;
  2216  0196  1374               	bcf	_FLAGs,6
  2217  0197                     i1l3099:	
  2218                           
  2219                           ;1.C: 320: }
  2220                           ;1.C: 321: }
  2221                           ;1.C: 324: if( ((PRESSED&0x10) == 0x10) ||
  2222                           ;1.C: 325: ((PRESSED&0x20) == 0x20) ||
  2223                           ;1.C: 326: ((PRESSED&0x40) == 0x40)
  2224                           ;1.C: 327: ){
  2225  0197  1E75               	btfss	_PRESSED,4
  2226  0198  1AF5               	btfsc	_PRESSED,5
  2227  0199  299C               	goto	i1l3105
  2228  019A  1F75               	btfss	_PRESSED,6
  2229  019B  29A3               	goto	i1l3111
  2230  019C                     i1l3105:	
  2231  019C  3013               	movlw	19
  2232                           
  2233                           ;1.C: 328: match_slice++;
  2234  019D  0AA8               	incf	_match_slice,f
  2235                           
  2236                           ;1.C: 329: if(match_slice>(150/8)){
  2237  019E  0228               	subwf	_match_slice,w
  2238  019F  1C03               	skipc
  2239  01A0  29A3               	goto	i1l3111
  2240                           
  2241                           ;1.C: 330: match_slice = 0;
  2242  01A1  01A8               	clrf	_match_slice
  2243                           
  2244                           ;1.C: 331: remotekey_Receive_num = 0;
  2245  01A2  01AB               	clrf	_remotekey_Receive_num
  2246  01A3                     i1l3111:	
  2247                           
  2248                           ;1.C: 332: }
  2249                           ;1.C: 333: }
  2250                           ;1.C: 336: if((FLAGs&0x02) == 0){
  2251  01A3  18F4               	btfsc	_FLAGs,1
  2252  01A4  29BD               	goto	i1l904
  2253                           
  2254                           ;1.C: 337: EE_Buff = ms16_counter%10;
  2255  01A5  300A               	movlw	10
  2256  01A6  00F6               	movwf	?___lbmod
  2257  01A7  0829               	movf	_ms16_counter,w
  2258  01A8  25F7               	fcall	___lbmod
  2259  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  2260  01AA  00B6               	movwf	_EE_Buff^(0+128)
  2261                           
  2262                           ;1.C: 338: if(EE_Buff == 1){
  2263  01AB  0B36               	decfsz	_EE_Buff^(0+128),w
  2264  01AC  29B3               	goto	i1l3125
  2265                           
  2266                           ;1.C: 339: PA3 = 0;
  2267  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2268  01AE  1185               	bcf	5,3
  2269                           
  2270                           ;1.C: 341: EX_INT_FallingEdge();
  2271  01AF  26BB               	fcall	i1_EX_INT_FallingEdge
  2272                           
  2273                           ;1.C: 342: INTE =1;
  2274  01B0  160B               	bsf	11,4
  2275                           
  2276                           ;1.C: 343: TMR2ON =1;
  2277  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  2278  01B2  1512               	bsf	18,2
  2279  01B3                     i1l3125:	
  2280                           
  2281                           ;1.C: 344: }
  2282                           ;1.C: 345: if(EE_Buff == 3){
  2283  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2284  01B4  0836               	movf	_EE_Buff^(0+128),w
  2285  01B5  3A03               	xorlw	3
  2286                           
  2287                           ;1.C: 346: PA3 = 1;
  2288  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2289  01B7  1D03               	skipz
  2290  01B8  29C1               	goto	L3
  2291  01B9  1585               	bsf	5,3
  2292                           
  2293                           ;1.C: 347: TMR2ON =0;
  2294  01BA  1112               	bcf	18,2
  2295                           
  2296                           ;1.C: 348: INTE =0;
  2297  01BB  120B               	bcf	11,4
  2298  01BC  29C0               	goto	i1l907
  2299  01BD                     i1l904:	
  2300                           
  2301                           ;1.C: 351: PA3 = 0;
  2302  01BD  1185               	bcf	5,3
  2303                           
  2304                           ;1.C: 352: INTE =1;
  2305  01BE  160B               	bsf	11,4
  2306                           
  2307                           ;1.C: 353: TMR2ON =1;
  2308  01BF  1512               	bsf	18,2
  2309  01C0                     i1l907:	
  2310                           
  2311                           ;1.C: 354: }
  2312                           ;1.C: 357: if(ms16_counter%2 == 0){
  2313  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2314  01C1                     L3:	
  2315  01C1  1829               	btfsc	_ms16_counter,0
  2316  01C2  29C5               	goto	i1l3133
  2317                           
  2318                           ;1.C: 358: KEYSCAN();
  2319  01C3  23EB               	fcall	_KEYSCAN
  2320                           
  2321                           ;1.C: 359: KEY();
  2322  01C4  2264               	fcall	_KEY
  2323  01C5                     i1l3133:	
  2324                           
  2325                           ;1.C: 360: }
  2326                           ;1.C: 364: if(ms16_counter >= 120){
  2327  01C5  3078               	movlw	120
  2328  01C6  0229               	subwf	_ms16_counter,w
  2329  01C7  1C03               	skipc
  2330  01C8  2A18               	goto	i1l921
  2331                           
  2332                           ;1.C: 365: ms16_counter = 0;
  2333  01C9  01A9               	clrf	_ms16_counter
  2334                           
  2335                           ;1.C: 368: if( ((PRESSED&0x10) == 0x10) ||
  2336                           ;1.C: 369: ((PRESSED&0x20) == 0x20) ||
  2337                           ;1.C: 370: ((PRESSED&0x40) == 0x40)
  2338                           ;1.C: 371: ){
  2339  01CA  1E75               	btfss	_PRESSED,4
  2340  01CB  1AF5               	btfsc	_PRESSED,5
  2341  01CC  29CF               	goto	i1l3143
  2342  01CD  1F75               	btfss	_PRESSED,6
  2343  01CE  2A18               	goto	i1l921
  2344  01CF                     i1l3143:	
  2345                           
  2346                           ;1.C: 372: if(KEY_Match_counter<4){
  2347  01CF  3004               	movlw	4
  2348  01D0  0225               	subwf	_KEY_Match_counter,w
  2349  01D1  1C03               	btfss	3,0
  2350                           
  2351                           ;1.C: 373: KEY_Match_counter++;
  2352  01D2  0AA5               	incf	_KEY_Match_counter,f
  2353  01D3  3010               	movlw	16
  2354                           
  2355                           ;1.C: 374: }
  2356                           ;1.C: 375: LONGPRESS_OverTime_Counter++;
  2357  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  2358  01D5  0AAA               	incf	_LONGPRESS_OverTime_Counter^(0+128),f
  2359                           
  2360                           ;1.C: 376: if(LONGPRESS_OverTime_Counter > 15){
  2361  01D6  022A               	subwf	_LONGPRESS_OverTime_Counter^(0+128),w
  2362  01D7  1C03               	skipc
  2363  01D8  2A18               	goto	i1l921
  2364                           
  2365                           ;1.C: 377: LONGPRESS_OverTime_Counter = 0;
  2366  01D9  01AA               	clrf	_LONGPRESS_OverTime_Counter^(0+128)
  2367                           
  2368                           ;1.C: 378: if((PRESSED&0x10) == 0x10){
  2369  01DA  1E75               	btfss	_PRESSED,4
  2370  01DB  29EE               	goto	i1l3163
  2371                           
  2372                           ;1.C: 379: CH1_remotekey[CH1_remotekey_Latest] = CH1_remotekey[CH1_remotekey_num-1];
  2373  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2374  01DD  0867               	movf	_CH1_remotekey_num,w
  2375  01DE  2240               	fcall	PL8	;call to abstracted procedure
  2376  01DF  3E29               	addlw	(_CH1_remotekey+-4)& (0+255)
  2377  01E0  2224               	fcall	PL2	;call to abstracted procedure
  2378  01E1  0833               	movf	_CH1_remotekey_Latest^(0+128),w
  2379  01E2  2250               	fcall	PL10	;call to abstracted procedure
  2380  01E3  3E2D               	addlw	_CH1_remotekey& (0+255)
  2381  01E4  2233               	fcall	PL6	;call to abstracted procedure
  2382                           
  2383                           ;1.C: 380: CH1_remotekey[CH1_remotekey_num-1] = 0xFFFFFFFF;
  2384  01E5  0867               	movf	_CH1_remotekey_num,w
  2385  01E6  2240               	fcall	PL8	;call to abstracted procedure
  2386  01E7  3E29               	addlw	(_CH1_remotekey+-4)& (0+255)
  2387  01E8  2246               	fcall	PL9	;call to abstracted procedure
  2388                           
  2389                           ;1.C: 381: if(CH1_remotekey_num>0) CH1_remotekey_num--;
  2390  01E9  0867               	movf	_CH1_remotekey_num,w
  2391  01EA  1D03               	skipz
  2392  01EB  03E7               	decf	_CH1_remotekey_num,f
  2393                           
  2394                           ;1.C: 382: PRESSED &= ~0x10;
  2395  01EC  1275               	bcf	_PRESSED,4
  2396                           
  2397                           ;1.C: 383: PA7 = 1;
  2398  01ED  1785               	bsf	5,7
  2399  01EE                     i1l3163:	
  2400                           
  2401                           ;1.C: 384: }
  2402                           ;1.C: 385: if((PRESSED&0x20) == 0x20){
  2403  01EE  1EF5               	btfss	_PRESSED,5
  2404  01EF  2A02               	goto	i1l3175
  2405                           
  2406                           ;1.C: 386: CH2_remotekey[CH2_remotekey_Latest] = CH2_remotekey[CH2_remotekey_num-1];
  2407  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2408  01F1  0868               	movf	_CH2_remotekey_num,w
  2409  01F2  2240               	fcall	PL8	;call to abstracted procedure
  2410  01F3  3E39               	addlw	(_CH2_remotekey+-4)& (0+255)
  2411  01F4  2224               	fcall	PL2	;call to abstracted procedure
  2412  01F5  0834               	movf	_CH2_remotekey_Latest^(0+128),w
  2413  01F6  2250               	fcall	PL10	;call to abstracted procedure
  2414  01F7  3E3D               	addlw	_CH2_remotekey& (0+255)
  2415  01F8  2233               	fcall	PL6	;call to abstracted procedure
  2416                           
  2417                           ;1.C: 387: CH2_remotekey[CH2_remotekey_num-1] = 0xFFFFFFFF;
  2418  01F9  0868               	movf	_CH2_remotekey_num,w
  2419  01FA  2240               	fcall	PL8	;call to abstracted procedure
  2420  01FB  3E39               	addlw	(_CH2_remotekey+-4)& (0+255)
  2421  01FC  2246               	fcall	PL9	;call to abstracted procedure
  2422                           
  2423                           ;1.C: 388: if(CH2_remotekey_num>0) CH2_remotekey_num--;
  2424  01FD  0868               	movf	_CH2_remotekey_num,w
  2425  01FE  1D03               	skipz
  2426  01FF  03E8               	decf	_CH2_remotekey_num,f
  2427                           
  2428                           ;1.C: 389: PRESSED &= ~0x20;
  2429  0200  12F5               	bcf	_PRESSED,5
  2430                           
  2431                           ;1.C: 390: PA6 = 1;
  2432  0201  1705               	bsf	5,6
  2433  0202                     i1l3175:	
  2434                           
  2435                           ;1.C: 391: }
  2436                           ;1.C: 392: if((PRESSED&0x40) == 0x40){
  2437  0202  1F75               	btfss	_PRESSED,6
  2438  0203  2A16               	goto	i1l3187
  2439                           
  2440                           ;1.C: 393: CH3_remotekey[CH3_remotekey_Latest] = CH3_remotekey[CH3_remotekey_num-1];
  2441  0204  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0205  0869               	movf	_CH3_remotekey_num,w
  2443  0206  2240               	fcall	PL8	;call to abstracted procedure
  2444  0207  3E49               	addlw	(_CH3_remotekey+-4)& (0+255)
  2445  0208  2224               	fcall	PL2	;call to abstracted procedure
  2446  0209  0835               	movf	_CH3_remotekey_Latest^(0+128),w
  2447  020A  2250               	fcall	PL10	;call to abstracted procedure
  2448  020B  3E4D               	addlw	_CH3_remotekey& (0+255)
  2449  020C  2233               	fcall	PL6	;call to abstracted procedure
  2450                           
  2451                           ;1.C: 394: CH3_remotekey[CH3_remotekey_num-1] = 0xFFFFFFFF;
  2452  020D  0869               	movf	_CH3_remotekey_num,w
  2453  020E  2240               	fcall	PL8	;call to abstracted procedure
  2454  020F  3E49               	addlw	(_CH3_remotekey+-4)& (0+255)
  2455  0210  2246               	fcall	PL9	;call to abstracted procedure
  2456                           
  2457                           ;1.C: 395: if(CH3_remotekey_num>0) CH3_remotekey_num--;
  2458  0211  0869               	movf	_CH3_remotekey_num,w
  2459  0212  1D03               	skipz
  2460  0213  03E9               	decf	_CH3_remotekey_num,f
  2461                           
  2462                           ;1.C: 396: PRESSED &= ~0x40;
  2463  0214  1375               	bcf	_PRESSED,6
  2464                           
  2465                           ;1.C: 397: PA5 = 1;
  2466  0215  1685               	bsf	5,5
  2467  0216                     i1l3187:	
  2468                           
  2469                           ;1.C: 398: }
  2470                           ;1.C: 399: PC0 = 1;
  2471  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2472  0217  1407               	bsf	7,0
  2473  0218                     i1l921:	
  2474  0218  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0219  0866               	movf	??_ISR+9,w
  2476  021A  00FF               	movwf	127
  2477  021B  0865               	movf	??_ISR+8,w
  2478  021C  008A               	movwf	10
  2479  021D  0864               	movf	??_ISR+7,w
  2480  021E  0084               	movwf	4
  2481  021F  0E63               	swapf	(??_ISR+6)^0,w
  2482  0220  0083               	movwf	3
  2483  0221  0EFE               	swapf	126,f
  2484  0222  0E7E               	swapf	126,w
  2485  0223  0009               	retfie
  2486  0224                     __end_of_ISR:	
  2487  0224                     PL2:	
  2488  0224  0084               	movwf	4
  2489  0225  1383               	bcf	3,7	;select IRP bank0
  2490  0226  0800               	movf	0,w
  2491  0227  00DE               	movwf	??_ISR+1
  2492  0228  0A84               	incf	4,f
  2493  0229  0800               	movf	0,w
  2494  022A  00DF               	movwf	??_ISR+2
  2495  022B  0A84               	incf	4,f
  2496  022C  0800               	movf	0,w
  2497  022D  00E0               	movwf	??_ISR+3
  2498  022E  0A84               	incf	4,f
  2499  022F  0800               	movf	0,w
  2500  0230  00E1               	movwf	??_ISR+4
  2501  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0232  0008               	return
  2503  0233                     PL6:	
  2504  0233  0084               	movwf	4
  2505  0234  085E               	movf	??_ISR+1,w
  2506  0235  0080               	movwf	0
  2507  0236  0A84               	incf	4,f
  2508  0237  085F               	movf	??_ISR+2,w
  2509  0238  0080               	movwf	0
  2510  0239  0A84               	incf	4,f
  2511  023A  0860               	movf	??_ISR+3,w
  2512  023B  0080               	movwf	0
  2513  023C  0A84               	incf	4,f
  2514  023D  0861               	movf	??_ISR+4,w
  2515  023E  0080               	movwf	0
  2516  023F  0008               	return
  2517  0240                     PL8:	
  2518  0240  00DD               	movwf	??_ISR
  2519  0241  1003               	clrc
  2520  0242  0DDD               	rlf	??_ISR,f
  2521  0243  1003               	clrc
  2522  0244  0D5D               	rlf	??_ISR,w
  2523  0245  0008               	return
  2524  0246                     PL9:	
  2525  0246  0084               	movwf	4
  2526  0247  30FF               	movlw	255
  2527  0248  0080               	movwf	0
  2528  0249  0A84               	incf	4,f
  2529  024A  0080               	movwf	0
  2530  024B  0A84               	incf	4,f
  2531  024C  0080               	movwf	0
  2532  024D  0A84               	incf	4,f
  2533  024E  0080               	movwf	0
  2534  024F  0008               	return
  2535  0250                     PL10:	
  2536  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0251  00E2               	movwf	??_ISR+5
  2538  0252  1003               	clrc
  2539  0253  0DE2               	rlf	??_ISR+5,f
  2540  0254  1003               	clrc
  2541  0255  0D62               	rlf	??_ISR+5,w
  2542  0256  0008               	return
  2543  0257                     PL11:	
  2544  0257  01AA               	clrf	_num
  2545  0258  1683               	bsf	3,5	;RP0=1, select bank1
  2546  0259  01A4               	clrf	_remotekey^(0+128)
  2547  025A  01A5               	clrf	(_remotekey+1)^(0+128)
  2548  025B  01A6               	clrf	(_remotekey+2)^(0+128)
  2549  025C  01A7               	clrf	(_remotekey+3)^(0+128)
  2550  025D  0008               	return
  2551  025E                     PL12:	
  2552  025E  1683               	bsf	3,5	;RP0=1, select bank1
  2553  025F  0DA4               	rlf	_remotekey^(0+128),f
  2554  0260  0DA5               	rlf	(_remotekey+1)^(0+128),f
  2555  0261  0DA6               	rlf	(_remotekey+2)^(0+128),f
  2556  0262  0DA7               	rlf	(_remotekey+3)^(0+128),f
  2557  0263  0008               	return
  2558                           
  2559                           	psect	intentry
  2560  0004                     __pintentry:	
  2561                           ; Regs used in _ISR: [allreg]
  2562                           
  2563  0004                     interrupt_function:	
  2564  007E                     saved_w	set	btemp
  2565  0004  00FE               	movwf	btemp
  2566  0005  0E03               	swapf	3,w
  2567  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2568  0007  00E3               	movwf	??_ISR+6
  2569  0008  0804               	movf	4,w
  2570  0009  00E4               	movwf	??_ISR+7
  2571  000A  080A               	movf	10,w
  2572  000B  00E5               	movwf	??_ISR+8
  2573  000C  087F               	movf	btemp+1,w
  2574  000D  00E6               	movwf	??_ISR+9
  2575  000E  2810               	ljmp	_ISR
  2576                           
  2577                           	psect	text707
  2578  0264                     __ptext707:	
  2579 ;; =============== function _ISR ends ============
  2580                           
  2581                           
  2582 ;; *************** function _KEY *****************
  2583 ;; Defined at:
  2584 ;;		line 674 in file "1.C"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;		None
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;		None
  2589 ;; Return value:  Size  Location     Type
  2590 ;;		None               void
  2591 ;; Registers used:
  2592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 20/0
  2595 ;;		On exit  : 20/0
  2596 ;;		Unchanged: FFEDF/0
  2597 ;; Data sizes:     COMMON   BANK0   BANK1
  2598 ;;      Params:         0       0       0
  2599 ;;      Locals:         0       0       0
  2600 ;;      Temps:          2       0       0
  2601 ;;      Totals:         2       0       0
  2602 ;;Total ram usage:        2 bytes
  2603 ;; Hardware stack levels used:    1
  2604 ;; Hardware stack levels required when called:    2
  2605 ;; This function calls:
  2606 ;;		_CH1_EEPROM_Write
  2607 ;;		_CH2_EEPROM_Write
  2608 ;;		_CH3_EEPROM_Write
  2609 ;;		_led1_debug
  2610 ;; This function is called by:
  2611 ;;		_ISR
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614  0264                     _KEY:	
  2615                           
  2616                           ;1.C: 675: if( ((PRESSED&0x10) == 0x10) ||
  2617                           ;1.C: 676: ((PRESSED&0x20) == 0x20) ||
  2618                           ;1.C: 677: ((PRESSED&0x40) == 0x40)
  2619                           ;1.C: 678: ){
  2620                           
  2621                           ; Regs used in _KEY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2622  0264  1E75               	btfss	_PRESSED,4
  2623  0265  1AF5               	btfsc	_PRESSED,5
  2624  0266  2BA3               	goto	i1l3445
  2625  0267  1B75               	btfsc	_PRESSED,6
  2626  0268  2BA3               	goto	i1l3445
  2627  0269  2BAE               	goto	i1l998
  2628  026A                     i1l3339:	
  2629                           
  2630                           ;1.C: 681: Match_remotekey = 0xFFFFFFFF;
  2631  026A  30FF               	movlw	255
  2632  026B  00F3               	movwf	_Match_remotekey+3
  2633  026C  00F2               	movwf	_Match_remotekey+2
  2634  026D  00F1               	movwf	_Match_remotekey+1
  2635  026E  00F0               	movwf	_Match_remotekey
  2636                           
  2637                           ;1.C: 682: break;
  2638  026F  2BAE               	goto	i1l998
  2639  0270                     i1l1004:	
  2640                           ;1.C: 683: case 1:
  2641                           
  2642                           
  2643                           ;1.C: 684: PC0 = 0;
  2644  0270  1007               	bcf	7,0
  2645                           
  2646                           ;1.C: 685: if((PRESSED&0x10) == 0x10) PA7 = 0;
  2647  0271  1E75               	btfss	_PRESSED,4
  2648  0272  2A74               	goto	i1l1005
  2649  0273  1385               	bcf	5,7
  2650  0274                     i1l1005:	
  2651                           
  2652                           ;1.C: 686: if((PRESSED&0x20) == 0x20) PA6 = 0;
  2653  0274  1EF5               	btfss	_PRESSED,5
  2654  0275  2A77               	goto	i1l1006
  2655  0276  1305               	bcf	5,6
  2656  0277                     i1l1006:	
  2657                           
  2658                           ;1.C: 687: if((PRESSED&0x40) == 0x40) PA5 = 0;
  2659  0277  1F75               	btfss	_PRESSED,6
  2660  0278  2BAE               	goto	i1l998
  2661  0279  1285               	bcf	5,5
  2662  027A  2BAE               	goto	i1l998
  2663  027B                     i1l1008:	
  2664                           ;1.C: 689: case 2:
  2665                           
  2666                           
  2667                           ;1.C: 690: PC0 = 1;
  2668  027B  1407               	bsf	7,0
  2669                           
  2670                           ;1.C: 691: if((PRESSED&0x10) == 0x10) PA7 = 1;
  2671  027C  1E75               	btfss	_PRESSED,4
  2672  027D  2A7F               	goto	i1l1009
  2673  027E  1785               	bsf	5,7
  2674  027F                     i1l1009:	
  2675                           
  2676                           ;1.C: 692: if((PRESSED&0x20) == 0x20) PA6 = 1;
  2677  027F  1EF5               	btfss	_PRESSED,5
  2678  0280  2A82               	goto	i1l1010
  2679  0281  1705               	bsf	5,6
  2680  0282                     i1l1010:	
  2681                           
  2682                           ;1.C: 693: if((PRESSED&0x40) == 0x40) PA5 = 1;
  2683  0282  1F75               	btfss	_PRESSED,6
  2684  0283  2BAE               	goto	i1l998
  2685  0284  1685               	bsf	5,5
  2686  0285  2BAE               	goto	i1l998
  2687  0286                     i1l1012:	
  2688                           ;1.C: 695: case 3:
  2689                           
  2690  0286  3003               	movlw	3
  2691                           
  2692                           ;1.C: 696: KEY_Match_counter = 1;
  2693  0287  01A5               	clrf	_KEY_Match_counter
  2694  0288  0AA5               	incf	_KEY_Match_counter,f
  2695                           
  2696                           ;1.C: 697: if(remotekey_Receive_num >= 3){
  2697  0289  022B               	subwf	_remotekey_Receive_num,w
  2698  028A  1C03               	skipc
  2699  028B  2BAE               	goto	i1l998
  2700                           
  2701                           ;1.C: 698: if((PRESSED&0x10) == 0x10){
  2702  028C  1E75               	btfss	_PRESSED,4
  2703  028D  2AE8               	goto	i1l3383
  2704                           
  2705                           ;1.C: 699: if( (Match_remotekey != CH1_remotekey[0]) &&
  2706                           ;1.C: 700: (Match_remotekey != CH1_remotekey[1]) &&
  2707                           ;1.C: 701: (Match_remotekey != CH1_remotekey[2]) &&
  2708                           ;1.C: 702: (Match_remotekey != CH1_remotekey[3])
  2709                           ;1.C: 703: ){
  2710  028E  0873               	movf	_Match_remotekey+3,w
  2711  028F  0630               	xorwf	_CH1_remotekey+3,w
  2712  0290  1D03               	skipz
  2713  0291  2A9C               	goto	u236_25
  2714  0292  0872               	movf	_Match_remotekey+2,w
  2715  0293  062F               	xorwf	_CH1_remotekey+2,w
  2716  0294  1D03               	skipz
  2717  0295  2A9C               	goto	u236_25
  2718  0296  0871               	movf	_Match_remotekey+1,w
  2719  0297  062E               	xorwf	_CH1_remotekey+1,w
  2720  0298  1D03               	skipz
  2721  0299  2A9C               	goto	u236_25
  2722  029A  0870               	movf	_Match_remotekey,w
  2723  029B  062D               	xorwf	_CH1_remotekey,w
  2724  029C                     u236_25:	
  2725  029C  1903               	skipnz
  2726  029D  2ADD               	goto	i1l3373
  2727  029E  0873               	movf	_Match_remotekey+3,w
  2728  029F  0634               	xorwf	_CH1_remotekey+7,w
  2729  02A0  1D03               	skipz
  2730  02A1  2AAC               	goto	u237_25
  2731  02A2  0872               	movf	_Match_remotekey+2,w
  2732  02A3  0633               	xorwf	_CH1_remotekey+6,w
  2733  02A4  1D03               	skipz
  2734  02A5  2AAC               	goto	u237_25
  2735  02A6  0871               	movf	_Match_remotekey+1,w
  2736  02A7  0632               	xorwf	_CH1_remotekey+5,w
  2737  02A8  1D03               	skipz
  2738  02A9  2AAC               	goto	u237_25
  2739  02AA  0870               	movf	_Match_remotekey,w
  2740  02AB  0631               	xorwf	_CH1_remotekey+4,w
  2741  02AC                     u237_25:	
  2742  02AC  1903               	skipnz
  2743  02AD  2ADD               	goto	i1l3373
  2744  02AE  0873               	movf	_Match_remotekey+3,w
  2745  02AF  0638               	xorwf	_CH1_remotekey+11,w
  2746  02B0  1D03               	skipz
  2747  02B1  2ABC               	goto	u238_25
  2748  02B2  0872               	movf	_Match_remotekey+2,w
  2749  02B3  0637               	xorwf	_CH1_remotekey+10,w
  2750  02B4  1D03               	skipz
  2751  02B5  2ABC               	goto	u238_25
  2752  02B6  0871               	movf	_Match_remotekey+1,w
  2753  02B7  0636               	xorwf	_CH1_remotekey+9,w
  2754  02B8  1D03               	skipz
  2755  02B9  2ABC               	goto	u238_25
  2756  02BA  0870               	movf	_Match_remotekey,w
  2757  02BB  0635               	xorwf	_CH1_remotekey+8,w
  2758  02BC                     u238_25:	
  2759  02BC  1903               	skipnz
  2760  02BD  2ADD               	goto	i1l3373
  2761  02BE  0873               	movf	_Match_remotekey+3,w
  2762  02BF  063C               	xorwf	_CH1_remotekey+15,w
  2763  02C0  1D03               	skipz
  2764  02C1  2ACC               	goto	u239_25
  2765  02C2  0872               	movf	_Match_remotekey+2,w
  2766  02C3  063B               	xorwf	_CH1_remotekey+14,w
  2767  02C4  1D03               	skipz
  2768  02C5  2ACC               	goto	u239_25
  2769  02C6  0871               	movf	_Match_remotekey+1,w
  2770  02C7  063A               	xorwf	_CH1_remotekey+13,w
  2771  02C8  1D03               	skipz
  2772  02C9  2ACC               	goto	u239_25
  2773  02CA  0870               	movf	_Match_remotekey,w
  2774  02CB  0639               	xorwf	_CH1_remotekey+12,w
  2775  02CC                     u239_25:	
  2776  02CC  1903               	skipnz
  2777  02CD  2ADD               	goto	i1l3373
  2778                           
  2779                           ;1.C: 704: if(CH1_remotekey_num < 4){
  2780  02CE  3004               	movlw	4
  2781  02CF  0267               	subwf	_CH1_remotekey_num,w
  2782  02D0  1803               	skipnc
  2783  02D1  2AD8               	goto	i1l3371
  2784                           
  2785                           ;1.C: 705: CH1_remotekey[CH1_remotekey_num] = Match_remotekey;
  2786  02D2  0867               	movf	_CH1_remotekey_num,w
  2787  02D3  23E5               	fcall	PL7	;call to abstracted procedure
  2788  02D4  3E2D               	addlw	_CH1_remotekey& (0+255)
  2789  02D5  23D7               	fcall	PL3	;call to abstracted procedure
  2790                           
  2791                           ;1.C: 706: CH1_remotekey_num++;
  2792  02D6  0AE7               	incf	_CH1_remotekey_num,f
  2793                           
  2794                           ;1.C: 707: }else{
  2795  02D7  2ADD               	goto	i1l3373
  2796  02D8                     i1l3371:	
  2797                           
  2798                           ;1.C: 708: CH1_remotekey[CH1_remotekey_Latest] = Match_remotekey;
  2799  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  2800  02D9  0833               	movf	_CH1_remotekey_Latest^(0+128),w
  2801  02DA  23E5               	fcall	PL7	;call to abstracted procedure
  2802  02DB  3E2D               	addlw	_CH1_remotekey& (0+255)
  2803  02DC  23D7               	fcall	PL3	;call to abstracted procedure
  2804  02DD                     i1l3373:	
  2805                           
  2806                           ;1.C: 709: }
  2807                           ;1.C: 710: }
  2808                           ;1.C: 711: if(CH1_remotekey_num > 4) CH1_remotekey_num = 4;
  2809  02DD  3005               	movlw	5
  2810  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2811  02DF  0267               	subwf	_CH1_remotekey_num,w
  2812  02E0  1C03               	skipc
  2813  02E1  2AE4               	goto	i1l3377
  2814  02E2  3004               	movlw	4
  2815  02E3  00E7               	movwf	_CH1_remotekey_num
  2816  02E4                     i1l3377:	
  2817                           
  2818                           ;1.C: 712: PRESSED &= ~0x10;
  2819  02E4  1275               	bcf	_PRESSED,4
  2820                           
  2821                           ;1.C: 713: CH1_EEPROM_Write();
  2822  02E5  25B7               	fcall	_CH1_EEPROM_Write
  2823                           
  2824                           ;1.C: 714: PA7 = 1;
  2825  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  2826  02E7  1785               	bsf	5,7
  2827  02E8                     i1l3383:	
  2828                           
  2829                           ;1.C: 715: }
  2830                           ;1.C: 716: if((PRESSED&0x20) == 0x20){
  2831  02E8  1EF5               	btfss	_PRESSED,5
  2832  02E9  2B44               	goto	i1l3411
  2833                           
  2834                           ;1.C: 717: if( (Match_remotekey != CH2_remotekey[0]) &&
  2835                           ;1.C: 718: (Match_remotekey != CH2_remotekey[1]) &&
  2836                           ;1.C: 719: (Match_remotekey != CH2_remotekey[2]) &&
  2837                           ;1.C: 720: (Match_remotekey != CH2_remotekey[3])
  2838                           ;1.C: 721: ){
  2839  02EA  0873               	movf	_Match_remotekey+3,w
  2840  02EB  0640               	xorwf	_CH2_remotekey+3,w
  2841  02EC  1D03               	skipz
  2842  02ED  2AF8               	goto	u243_25
  2843  02EE  0872               	movf	_Match_remotekey+2,w
  2844  02EF  063F               	xorwf	_CH2_remotekey+2,w
  2845  02F0  1D03               	skipz
  2846  02F1  2AF8               	goto	u243_25
  2847  02F2  0871               	movf	_Match_remotekey+1,w
  2848  02F3  063E               	xorwf	_CH2_remotekey+1,w
  2849  02F4  1D03               	skipz
  2850  02F5  2AF8               	goto	u243_25
  2851  02F6  0870               	movf	_Match_remotekey,w
  2852  02F7  063D               	xorwf	_CH2_remotekey,w
  2853  02F8                     u243_25:	
  2854  02F8  1903               	skipnz
  2855  02F9  2B39               	goto	i1l3401
  2856  02FA  0873               	movf	_Match_remotekey+3,w
  2857  02FB  0644               	xorwf	_CH2_remotekey+7,w
  2858  02FC  1D03               	skipz
  2859  02FD  2B08               	goto	u244_25
  2860  02FE  0872               	movf	_Match_remotekey+2,w
  2861  02FF  0643               	xorwf	_CH2_remotekey+6,w
  2862  0300  1D03               	skipz
  2863  0301  2B08               	goto	u244_25
  2864  0302  0871               	movf	_Match_remotekey+1,w
  2865  0303  0642               	xorwf	_CH2_remotekey+5,w
  2866  0304  1D03               	skipz
  2867  0305  2B08               	goto	u244_25
  2868  0306  0870               	movf	_Match_remotekey,w
  2869  0307  0641               	xorwf	_CH2_remotekey+4,w
  2870  0308                     u244_25:	
  2871  0308  1903               	skipnz
  2872  0309  2B39               	goto	i1l3401
  2873  030A  0873               	movf	_Match_remotekey+3,w
  2874  030B  0648               	xorwf	_CH2_remotekey+11,w
  2875  030C  1D03               	skipz
  2876  030D  2B18               	goto	u245_25
  2877  030E  0872               	movf	_Match_remotekey+2,w
  2878  030F  0647               	xorwf	_CH2_remotekey+10,w
  2879  0310  1D03               	skipz
  2880  0311  2B18               	goto	u245_25
  2881  0312  0871               	movf	_Match_remotekey+1,w
  2882  0313  0646               	xorwf	_CH2_remotekey+9,w
  2883  0314  1D03               	skipz
  2884  0315  2B18               	goto	u245_25
  2885  0316  0870               	movf	_Match_remotekey,w
  2886  0317  0645               	xorwf	_CH2_remotekey+8,w
  2887  0318                     u245_25:	
  2888  0318  1903               	skipnz
  2889  0319  2B39               	goto	i1l3401
  2890  031A  0873               	movf	_Match_remotekey+3,w
  2891  031B  064C               	xorwf	_CH2_remotekey+15,w
  2892  031C  1D03               	skipz
  2893  031D  2B28               	goto	u246_25
  2894  031E  0872               	movf	_Match_remotekey+2,w
  2895  031F  064B               	xorwf	_CH2_remotekey+14,w
  2896  0320  1D03               	skipz
  2897  0321  2B28               	goto	u246_25
  2898  0322  0871               	movf	_Match_remotekey+1,w
  2899  0323  064A               	xorwf	_CH2_remotekey+13,w
  2900  0324  1D03               	skipz
  2901  0325  2B28               	goto	u246_25
  2902  0326  0870               	movf	_Match_remotekey,w
  2903  0327  0649               	xorwf	_CH2_remotekey+12,w
  2904  0328                     u246_25:	
  2905  0328  1903               	skipnz
  2906  0329  2B39               	goto	i1l3401
  2907                           
  2908                           ;1.C: 722: if(CH2_remotekey_num < 4){
  2909  032A  3004               	movlw	4
  2910  032B  0268               	subwf	_CH2_remotekey_num,w
  2911  032C  1803               	skipnc
  2912  032D  2B34               	goto	i1l3399
  2913                           
  2914                           ;1.C: 723: CH2_remotekey[CH2_remotekey_num] = Match_remotekey;
  2915  032E  0868               	movf	_CH2_remotekey_num,w
  2916  032F  23E5               	fcall	PL7	;call to abstracted procedure
  2917  0330  3E3D               	addlw	_CH2_remotekey& (0+255)
  2918  0331  23D7               	fcall	PL3	;call to abstracted procedure
  2919                           
  2920                           ;1.C: 724: CH2_remotekey_num++;
  2921  0332  0AE8               	incf	_CH2_remotekey_num,f
  2922                           
  2923                           ;1.C: 725: }else{
  2924  0333  2B39               	goto	i1l3401
  2925  0334                     i1l3399:	
  2926                           
  2927                           ;1.C: 726: CH2_remotekey[CH2_remotekey_Latest] = Match_remotekey;
  2928  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2929  0335  0834               	movf	_CH2_remotekey_Latest^(0+128),w
  2930  0336  23E5               	fcall	PL7	;call to abstracted procedure
  2931  0337  3E3D               	addlw	_CH2_remotekey& (0+255)
  2932  0338  23D7               	fcall	PL3	;call to abstracted procedure
  2933  0339                     i1l3401:	
  2934                           
  2935                           ;1.C: 727: }
  2936                           ;1.C: 728: }
  2937                           ;1.C: 729: if(CH2_remotekey_num > 4) CH2_remotekey_num = 4;
  2938  0339  3005               	movlw	5
  2939  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2940  033B  0268               	subwf	_CH2_remotekey_num,w
  2941  033C  1C03               	skipc
  2942  033D  2B40               	goto	i1l3405
  2943  033E  3004               	movlw	4
  2944  033F  00E8               	movwf	_CH2_remotekey_num
  2945  0340                     i1l3405:	
  2946                           
  2947                           ;1.C: 730: PRESSED &= ~0x20;
  2948  0340  12F5               	bcf	_PRESSED,5
  2949                           
  2950                           ;1.C: 731: CH2_EEPROM_Write();
  2951  0341  2577               	fcall	_CH2_EEPROM_Write
  2952                           
  2953                           ;1.C: 732: PA6 = 1;
  2954  0342  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0343  1705               	bsf	5,6
  2956  0344                     i1l3411:	
  2957                           
  2958                           ;1.C: 733: }
  2959                           ;1.C: 734: if((PRESSED&0x40) == 0x40){
  2960  0344  1F75               	btfss	_PRESSED,6
  2961  0345  2BA0               	goto	i1l3439
  2962                           
  2963                           ;1.C: 735: if( (Match_remotekey != CH3_remotekey[0]) &&
  2964                           ;1.C: 736: (Match_remotekey != CH3_remotekey[1]) &&
  2965                           ;1.C: 737: (Match_remotekey != CH3_remotekey[2]) &&
  2966                           ;1.C: 738: (Match_remotekey != CH3_remotekey[3])
  2967                           ;1.C: 739: ){
  2968  0346  0873               	movf	_Match_remotekey+3,w
  2969  0347  0650               	xorwf	_CH3_remotekey+3,w
  2970  0348  1D03               	skipz
  2971  0349  2B54               	goto	u250_25
  2972  034A  0872               	movf	_Match_remotekey+2,w
  2973  034B  064F               	xorwf	_CH3_remotekey+2,w
  2974  034C  1D03               	skipz
  2975  034D  2B54               	goto	u250_25
  2976  034E  0871               	movf	_Match_remotekey+1,w
  2977  034F  064E               	xorwf	_CH3_remotekey+1,w
  2978  0350  1D03               	skipz
  2979  0351  2B54               	goto	u250_25
  2980  0352  0870               	movf	_Match_remotekey,w
  2981  0353  064D               	xorwf	_CH3_remotekey,w
  2982  0354                     u250_25:	
  2983  0354  1903               	skipnz
  2984  0355  2B95               	goto	i1l3429
  2985  0356  0873               	movf	_Match_remotekey+3,w
  2986  0357  0654               	xorwf	_CH3_remotekey+7,w
  2987  0358  1D03               	skipz
  2988  0359  2B64               	goto	u251_25
  2989  035A  0872               	movf	_Match_remotekey+2,w
  2990  035B  0653               	xorwf	_CH3_remotekey+6,w
  2991  035C  1D03               	skipz
  2992  035D  2B64               	goto	u251_25
  2993  035E  0871               	movf	_Match_remotekey+1,w
  2994  035F  0652               	xorwf	_CH3_remotekey+5,w
  2995  0360  1D03               	skipz
  2996  0361  2B64               	goto	u251_25
  2997  0362  0870               	movf	_Match_remotekey,w
  2998  0363  0651               	xorwf	_CH3_remotekey+4,w
  2999  0364                     u251_25:	
  3000  0364  1903               	skipnz
  3001  0365  2B95               	goto	i1l3429
  3002  0366  0873               	movf	_Match_remotekey+3,w
  3003  0367  0658               	xorwf	_CH3_remotekey+11,w
  3004  0368  1D03               	skipz
  3005  0369  2B74               	goto	u252_25
  3006  036A  0872               	movf	_Match_remotekey+2,w
  3007  036B  0657               	xorwf	_CH3_remotekey+10,w
  3008  036C  1D03               	skipz
  3009  036D  2B74               	goto	u252_25
  3010  036E  0871               	movf	_Match_remotekey+1,w
  3011  036F  0656               	xorwf	_CH3_remotekey+9,w
  3012  0370  1D03               	skipz
  3013  0371  2B74               	goto	u252_25
  3014  0372  0870               	movf	_Match_remotekey,w
  3015  0373  0655               	xorwf	_CH3_remotekey+8,w
  3016  0374                     u252_25:	
  3017  0374  1903               	skipnz
  3018  0375  2B95               	goto	i1l3429
  3019  0376  0873               	movf	_Match_remotekey+3,w
  3020  0377  065C               	xorwf	_CH3_remotekey+15,w
  3021  0378  1D03               	skipz
  3022  0379  2B84               	goto	u253_25
  3023  037A  0872               	movf	_Match_remotekey+2,w
  3024  037B  065B               	xorwf	_CH3_remotekey+14,w
  3025  037C  1D03               	skipz
  3026  037D  2B84               	goto	u253_25
  3027  037E  0871               	movf	_Match_remotekey+1,w
  3028  037F  065A               	xorwf	_CH3_remotekey+13,w
  3029  0380  1D03               	skipz
  3030  0381  2B84               	goto	u253_25
  3031  0382  0870               	movf	_Match_remotekey,w
  3032  0383  0659               	xorwf	_CH3_remotekey+12,w
  3033  0384                     u253_25:	
  3034  0384  1903               	skipnz
  3035  0385  2B95               	goto	i1l3429
  3036                           
  3037                           ;1.C: 740: if(CH3_remotekey_num < 4){
  3038  0386  3004               	movlw	4
  3039  0387  0269               	subwf	_CH3_remotekey_num,w
  3040  0388  1803               	skipnc
  3041  0389  2B90               	goto	i1l3427
  3042                           
  3043                           ;1.C: 741: CH3_remotekey[CH3_remotekey_num] = Match_remotekey;
  3044  038A  0869               	movf	_CH3_remotekey_num,w
  3045  038B  23E5               	fcall	PL7	;call to abstracted procedure
  3046  038C  3E4D               	addlw	_CH3_remotekey& (0+255)
  3047  038D  23D7               	fcall	PL3	;call to abstracted procedure
  3048                           
  3049                           ;1.C: 742: CH3_remotekey_num++;
  3050  038E  0AE9               	incf	_CH3_remotekey_num,f
  3051                           
  3052                           ;1.C: 743: }else{
  3053  038F  2B95               	goto	i1l3429
  3054  0390                     i1l3427:	
  3055                           
  3056                           ;1.C: 744: CH3_remotekey[CH3_remotekey_Latest] = Match_remotekey;
  3057  0390  1683               	bsf	3,5	;RP0=1, select bank1
  3058  0391  0835               	movf	_CH3_remotekey_Latest^(0+128),w
  3059  0392  23E5               	fcall	PL7	;call to abstracted procedure
  3060  0393  3E4D               	addlw	_CH3_remotekey& (0+255)
  3061  0394  23D7               	fcall	PL3	;call to abstracted procedure
  3062  0395                     i1l3429:	
  3063                           
  3064                           ;1.C: 745: }
  3065                           ;1.C: 746: }
  3066                           ;1.C: 747: if(CH3_remotekey_num > 4) CH3_remotekey_num = 4;
  3067  0395  3005               	movlw	5
  3068  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0397  0269               	subwf	_CH3_remotekey_num,w
  3070  0398  1C03               	skipc
  3071  0399  2B9C               	goto	i1l3433
  3072  039A  3004               	movlw	4
  3073  039B  00E9               	movwf	_CH3_remotekey_num
  3074  039C                     i1l3433:	
  3075                           
  3076                           ;1.C: 748: PRESSED &= ~0x40;
  3077  039C  1375               	bcf	_PRESSED,6
  3078                           
  3079                           ;1.C: 749: CH3_EEPROM_Write();
  3080  039D  2537               	fcall	_CH3_EEPROM_Write
  3081                           
  3082                           ;1.C: 750: PA5 = 1;
  3083  039E  1283               	bcf	3,5	;RP0=0, select bank0
  3084  039F  1685               	bsf	5,5
  3085  03A0                     i1l3439:	
  3086                           
  3087                           ;1.C: 751: }
  3088                           ;1.C: 752: KEY_Match_counter = 0;
  3089  03A0  01A5               	clrf	_KEY_Match_counter
  3090                           
  3091                           ;1.C: 753: PC0 = 1;
  3092  03A1  1407               	bsf	7,0
  3093  03A2  2BAE               	goto	i1l998
  3094  03A3                     i1l3445:	
  3095  03A3  0825               	movf	_KEY_Match_counter,w
  3096                           
  3097                           ; Switch size 1, requested type "space"
  3098                           ; Number of cases is 4, Range of values is 0 to 3
  3099                           ; switch strategies available:
  3100                           ; Name         Instructions Cycles
  3101                           ; direct_byte           10     6 (fixed)
  3102                           ; simple_byte           13     7 (average)
  3103                           ; jumptable            260     6 (fixed)
  3104                           ; rangetable             8     6 (fixed)
  3105                           ; spacedrange           14     9 (fixed)
  3106                           ; locatedrange           4     3 (fixed)
  3107                           ;	Chosen strategy is direct_byte
  3108  03A4  0084               	movwf	4
  3109  03A5  3004               	movlw	4
  3110  03A6  0204               	subwf	4,w
  3111  03A7  1803               	skipnc
  3112  03A8  2BAE               	goto	i1l998
  3113  03A9  3006               	movlw	high i1S3807
  3114  03AA  008A               	movwf	10
  3115  03AB  30B7               	movlw	low i1S3807
  3116  03AC  0704               	addwf	4,w
  3117  03AD  0082               	movwf	2
  3118  03AE                     i1l998:	
  3119                           
  3120                           ;1.C: 757: }
  3121                           ;1.C: 760: if( ((PRESSED&0x10) == 0) &&
  3122                           ;1.C: 761: ((PRESSED&0x20) == 0) &&
  3123                           ;1.C: 762: ((PRESSED&0x40) == 0)
  3124                           ;1.C: 763: ){
  3125  03AE  1E75               	btfss	_PRESSED,4
  3126  03AF  1AF5               	btfsc	_PRESSED,5
  3127  03B0  0008               	return
  3128  03B1  1B75               	btfsc	_PRESSED,6
  3129  03B2  0008               	return
  3130                           
  3131                           ;1.C: 764: if((PRESSED&0x0F) > 0){
  3132  03B3  0875               	movf	_PRESSED,w
  3133  03B4  390F               	andlw	15
  3134  03B5  1D03               	btfss	3,2
  3135  03B6  2BC0               	goto	i1l3469
  3136  03B7  2BD4               	goto	i1l3471
  3137  03B8                     i1l3455:	
  3138                           
  3139                           ;1.C: 767: PA7 = ~PA7;
  3140  03B8  3080               	movlw	128
  3141  03B9                     L4:	
  3142  03B9  0685               	xorwf	5,f
  3143                           
  3144                           ;1.C: 768: led1_debug();
  3145  03BA  26BF               	fcall	_led1_debug
  3146                           
  3147                           ;1.C: 769: break;
  3148  03BB  2BD4               	goto	i1l3471
  3149  03BC                     i1l3459:	
  3150                           
  3151                           ;1.C: 771: PA6 = ~PA6;
  3152  03BC  3040               	movlw	64
  3153  03BD  2BB9               	goto	L4
  3154  03BE                     i1l3463:	
  3155                           
  3156                           ;1.C: 775: PA5 = ~PA5;
  3157  03BE  3020               	movlw	32
  3158  03BF  2BB9               	goto	L4
  3159  03C0                     i1l3469:	
  3160  03C0  0875               	movf	_PRESSED,w
  3161  03C1  390F               	andlw	15
  3162  03C2  00F8               	movwf	??_KEY
  3163  03C3  01F9               	clrf	??_KEY+1
  3164                           
  3165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3166                           ; Switch size 1, requested type "space"
  3167                           ; Number of cases is 1, Range of values is 0 to 0
  3168                           ; switch strategies available:
  3169                           ; Name         Instructions Cycles
  3170                           ; simple_byte            4     3 (average)
  3171                           ; direct_byte            7     6 (fixed)
  3172                           ; jumptable            260     6 (fixed)
  3173                           ; rangetable             5     6 (fixed)
  3174                           ; spacedrange            8     9 (fixed)
  3175                           ; locatedrange           1     3 (fixed)
  3176                           ;	Chosen strategy is simple_byte
  3177  03C4  0879               	movf	??_KEY+1,w
  3178  03C5  3A00               	xorlw	0	; case 0
  3179  03C6  1903               	skipnz
  3180  03C7  2BC9               	goto	i1l3809
  3181  03C8  2BD4               	goto	i1l3471
  3182  03C9                     i1l3809:	
  3183                           
  3184                           ; Switch size 1, requested type "space"
  3185                           ; Number of cases is 3, Range of values is 1 to 4
  3186                           ; switch strategies available:
  3187                           ; Name         Instructions Cycles
  3188                           ; simple_byte           10     6 (average)
  3189                           ; direct_byte           13     9 (fixed)
  3190                           ; jumptable            263     9 (fixed)
  3191                           ;	Chosen strategy is simple_byte
  3192  03C9  0878               	movf	??_KEY,w
  3193  03CA  3A01               	xorlw	1	; case 1
  3194  03CB  1903               	skipnz
  3195  03CC  2BB8               	goto	i1l3455
  3196  03CD  3A03               	xorlw	3	; case 2
  3197  03CE  1903               	skipnz
  3198  03CF  2BBC               	goto	i1l3459
  3199  03D0  3A06               	xorlw	6	; case 4
  3200  03D1  1903               	skipnz
  3201  03D2  2BBE               	goto	i1l3463
  3202  03D3  2BD4               	goto	i1l3471
  3203  03D4                     i1l3471:	
  3204                           
  3205                           ;1.C: 779: }
  3206                           ;1.C: 780: PRESSED &= 0xF0;
  3207  03D4  30F0               	movlw	240
  3208  03D5  05F5               	andwf	_PRESSED,f
  3209  03D6  0008               	return
  3210  03D7                     __end_of_KEY:	
  3211  03D7                     PL3:	
  3212  03D7  0084               	movwf	4
  3213  03D8  0870               	movf	_Match_remotekey,w
  3214  03D9  1383               	bcf	3,7	;select IRP bank0
  3215  03DA  0080               	movwf	0
  3216  03DB  0A84               	incf	4,f
  3217  03DC  0871               	movf	_Match_remotekey+1,w
  3218  03DD  0080               	movwf	0
  3219  03DE  0A84               	incf	4,f
  3220  03DF  0872               	movf	_Match_remotekey+2,w
  3221  03E0  0080               	movwf	0
  3222  03E1  0A84               	incf	4,f
  3223  03E2  0873               	movf	_Match_remotekey+3,w
  3224  03E3  0080               	movwf	0
  3225  03E4  0008               	return
  3226  03E5                     PL7:	
  3227  03E5  00F8               	movwf	??_KEY
  3228  03E6  1003               	clrc
  3229  03E7  0DF8               	rlf	??_KEY,f
  3230  03E8  1003               	clrc
  3231  03E9  0D78               	rlf	??_KEY,w
  3232  03EA  0008               	return
  3233                           
  3234                           	psect	swtext1
  3235  06B7                     __pswtext1:	
  3236  06B7                     i1S3807:	
  3237  06B7  2A6A               	ljmp	i1l3339
  3238  06B8  2A70               	ljmp	i1l1004
  3239  06B9  2A7B               	ljmp	i1l1008
  3240  06BA  2A86               	ljmp	i1l1012
  3241                           
  3242                           	psect	text708
  3243  0537                     __ptext708:	
  3244 ;; =============== function _KEY ends ============
  3245                           
  3246                           
  3247 ;; *************** function _CH3_EEPROM_Write *****************
  3248 ;; Defined at:
  3249 ;;		line 544 in file "1.C"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;		None               void
  3256 ;; Registers used:
  3257 ;;		wreg, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 20/0
  3260 ;;		On exit  : 20/20
  3261 ;;		Unchanged: FFFDF/0
  3262 ;; Data sizes:     COMMON   BANK0   BANK1
  3263 ;;      Params:         0       0       0
  3264 ;;      Locals:         0       0       0
  3265 ;;      Temps:          0       0       0
  3266 ;;      Totals:         0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    1
  3270 ;; This function calls:
  3271 ;;		_IAPWrite
  3272 ;; This function is called by:
  3273 ;;		_KEY
  3274 ;; This function uses a non-reentrant model
  3275 ;;
  3276  0537                     _CH3_EEPROM_Write:	
  3277                           
  3278                           ;1.C: 545: IAPWrite(0x08,((CH3_remotekey[0]&0x000000FF)>>0));
  3279                           
  3280                           ; Regs used in _CH3_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3281  0537  084D               	movf	_CH3_remotekey,w
  3282  0538  00F6               	movwf	?_IAPWrite
  3283  0539  3008               	movlw	8
  3284  053A  2659               	fcall	_IAPWrite
  3285                           
  3286                           ;1.C: 546: IAPWrite(0x09,((CH3_remotekey[0]&0x0000FF00)>>8));
  3287  053B  1283               	bcf	3,5	;RP0=0, select bank0
  3288  053C  084E               	movf	_CH3_remotekey+1,w
  3289  053D  00F6               	movwf	?_IAPWrite
  3290  053E  3009               	movlw	9
  3291  053F  2659               	fcall	_IAPWrite
  3292                           
  3293                           ;1.C: 547: IAPWrite(0x0A,((CH3_remotekey[0]&0x00FF0000)>>16));
  3294  0540  1283               	bcf	3,5	;RP0=0, select bank0
  3295  0541  084F               	movf	_CH3_remotekey+2,w
  3296  0542  00F6               	movwf	?_IAPWrite
  3297  0543  300A               	movlw	10
  3298  0544  2659               	fcall	_IAPWrite
  3299                           
  3300                           ;1.C: 549: IAPWrite(0x14,((CH3_remotekey[1]&0x000000FF)>>0));
  3301  0545  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0546  0851               	movf	_CH3_remotekey+4,w
  3303  0547  00F6               	movwf	?_IAPWrite
  3304  0548  3014               	movlw	20
  3305  0549  2659               	fcall	_IAPWrite
  3306                           
  3307                           ;1.C: 550: IAPWrite(0x15,((CH3_remotekey[1]&0x0000FF00)>>8));
  3308  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3309  054B  0852               	movf	_CH3_remotekey+5,w
  3310  054C  00F6               	movwf	?_IAPWrite
  3311  054D  3015               	movlw	21
  3312  054E  2659               	fcall	_IAPWrite
  3313                           
  3314                           ;1.C: 551: IAPWrite(0x16,((CH3_remotekey[1]&0x00FF0000)>>16));
  3315  054F  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0550  0853               	movf	_CH3_remotekey+6,w
  3317  0551  00F6               	movwf	?_IAPWrite
  3318  0552  3016               	movlw	22
  3319  0553  2659               	fcall	_IAPWrite
  3320                           
  3321                           ;1.C: 553: IAPWrite(0x20,((CH3_remotekey[2]&0x000000FF)>>0));
  3322  0554  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0555  0855               	movf	_CH3_remotekey+8,w
  3324  0556  00F6               	movwf	?_IAPWrite
  3325  0557  3020               	movlw	32
  3326  0558  2659               	fcall	_IAPWrite
  3327                           
  3328                           ;1.C: 554: IAPWrite(0x21,((CH3_remotekey[2]&0x0000FF00)>>8));
  3329  0559  1283               	bcf	3,5	;RP0=0, select bank0
  3330  055A  0856               	movf	_CH3_remotekey+9,w
  3331  055B  00F6               	movwf	?_IAPWrite
  3332  055C  3021               	movlw	33
  3333  055D  2659               	fcall	_IAPWrite
  3334                           
  3335                           ;1.C: 555: IAPWrite(0x22,((CH3_remotekey[2]&0x00FF0000)>>16));
  3336  055E  1283               	bcf	3,5	;RP0=0, select bank0
  3337  055F  0857               	movf	_CH3_remotekey+10,w
  3338  0560  00F6               	movwf	?_IAPWrite
  3339  0561  3022               	movlw	34
  3340  0562  2659               	fcall	_IAPWrite
  3341                           
  3342                           ;1.C: 557: IAPWrite(0x2C,((CH3_remotekey[3]&0x000000FF)>>0));
  3343  0563  1283               	bcf	3,5	;RP0=0, select bank0
  3344  0564  0859               	movf	_CH3_remotekey+12,w
  3345  0565  00F6               	movwf	?_IAPWrite
  3346  0566  302C               	movlw	44
  3347  0567  2659               	fcall	_IAPWrite
  3348                           
  3349                           ;1.C: 558: IAPWrite(0x2D,((CH3_remotekey[3]&0x0000FF00)>>8));
  3350  0568  1283               	bcf	3,5	;RP0=0, select bank0
  3351  0569  085A               	movf	_CH3_remotekey+13,w
  3352  056A  00F6               	movwf	?_IAPWrite
  3353  056B  302D               	movlw	45
  3354  056C  2659               	fcall	_IAPWrite
  3355                           
  3356                           ;1.C: 559: IAPWrite(0x2E,((CH3_remotekey[3]&0x00FF0000)>>16));
  3357  056D  1283               	bcf	3,5	;RP0=0, select bank0
  3358  056E  085B               	movf	_CH3_remotekey+14,w
  3359  056F  00F6               	movwf	?_IAPWrite
  3360  0570  302E               	movlw	46
  3361  0571  2659               	fcall	_IAPWrite
  3362                           
  3363                           ;1.C: 561: IAPWrite(0x32,CH3_remotekey_num);
  3364  0572  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0573  0869               	movf	_CH3_remotekey_num,w
  3366  0574  00F6               	movwf	?_IAPWrite
  3367  0575  3032               	movlw	50
  3368  0576  2E59               	ljmp	_IAPWrite
  3369  0577                     __end_of_CH3_EEPROM_Write:	
  3370                           
  3371                           	psect	text709
  3372  0577                     __ptext709:	
  3373 ;; =============== function _CH3_EEPROM_Write ends ============
  3374                           
  3375                           
  3376 ;; *************** function _CH2_EEPROM_Write *****************
  3377 ;; Defined at:
  3378 ;;		line 525 in file "1.C"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;		None
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;		None               void
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 20/0
  3389 ;;		On exit  : 20/20
  3390 ;;		Unchanged: FFFDF/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1
  3392 ;;      Params:         0       0       0
  3393 ;;      Locals:         0       0       0
  3394 ;;      Temps:          0       0       0
  3395 ;;      Totals:         0       0       0
  3396 ;;Total ram usage:        0 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    1
  3399 ;; This function calls:
  3400 ;;		_IAPWrite
  3401 ;; This function is called by:
  3402 ;;		_KEY
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405  0577                     _CH2_EEPROM_Write:	
  3406                           
  3407                           ;1.C: 526: IAPWrite(0x04,((CH2_remotekey[0]&0x000000FF)>>0));
  3408                           
  3409                           ; Regs used in _CH2_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3410  0577  083D               	movf	_CH2_remotekey,w
  3411  0578  00F6               	movwf	?_IAPWrite
  3412  0579  3004               	movlw	4
  3413  057A  2659               	fcall	_IAPWrite
  3414                           
  3415                           ;1.C: 527: IAPWrite(0x05,((CH2_remotekey[0]&0x0000FF00)>>8));
  3416  057B  1283               	bcf	3,5	;RP0=0, select bank0
  3417  057C  083E               	movf	_CH2_remotekey+1,w
  3418  057D  00F6               	movwf	?_IAPWrite
  3419  057E  3005               	movlw	5
  3420  057F  2659               	fcall	_IAPWrite
  3421                           
  3422                           ;1.C: 528: IAPWrite(0x06,((CH2_remotekey[0]&0x00FF0000)>>16));
  3423  0580  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0581  083F               	movf	_CH2_remotekey+2,w
  3425  0582  00F6               	movwf	?_IAPWrite
  3426  0583  3006               	movlw	6
  3427  0584  2659               	fcall	_IAPWrite
  3428                           
  3429                           ;1.C: 530: IAPWrite(0x10,((CH2_remotekey[1]&0x000000FF)>>0));
  3430  0585  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0586  0841               	movf	_CH2_remotekey+4,w
  3432  0587  00F6               	movwf	?_IAPWrite
  3433  0588  3010               	movlw	16
  3434  0589  2659               	fcall	_IAPWrite
  3435                           
  3436                           ;1.C: 531: IAPWrite(0x11,((CH2_remotekey[1]&0x0000FF00)>>8));
  3437  058A  1283               	bcf	3,5	;RP0=0, select bank0
  3438  058B  0842               	movf	_CH2_remotekey+5,w
  3439  058C  00F6               	movwf	?_IAPWrite
  3440  058D  3011               	movlw	17
  3441  058E  2659               	fcall	_IAPWrite
  3442                           
  3443                           ;1.C: 532: IAPWrite(0x12,((CH2_remotekey[1]&0x00FF0000)>>16));
  3444  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0590  0843               	movf	_CH2_remotekey+6,w
  3446  0591  00F6               	movwf	?_IAPWrite
  3447  0592  3012               	movlw	18
  3448  0593  2659               	fcall	_IAPWrite
  3449                           
  3450                           ;1.C: 534: IAPWrite(0x1C,((CH2_remotekey[2]&0x000000FF)>>0));
  3451  0594  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0595  0845               	movf	_CH2_remotekey+8,w
  3453  0596  00F6               	movwf	?_IAPWrite
  3454  0597  301C               	movlw	28
  3455  0598  2659               	fcall	_IAPWrite
  3456                           
  3457                           ;1.C: 535: IAPWrite(0x1D,((CH2_remotekey[2]&0x0000FF00)>>8));
  3458  0599  1283               	bcf	3,5	;RP0=0, select bank0
  3459  059A  0846               	movf	_CH2_remotekey+9,w
  3460  059B  00F6               	movwf	?_IAPWrite
  3461  059C  301D               	movlw	29
  3462  059D  2659               	fcall	_IAPWrite
  3463                           
  3464                           ;1.C: 536: IAPWrite(0x1E,((CH2_remotekey[2]&0x00FF0000)>>16));
  3465  059E  1283               	bcf	3,5	;RP0=0, select bank0
  3466  059F  0847               	movf	_CH2_remotekey+10,w
  3467  05A0  00F6               	movwf	?_IAPWrite
  3468  05A1  301E               	movlw	30
  3469  05A2  2659               	fcall	_IAPWrite
  3470                           
  3471                           ;1.C: 538: IAPWrite(0x28,((CH2_remotekey[3]&0x000000FF)>>0));
  3472  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3473  05A4  0849               	movf	_CH2_remotekey+12,w
  3474  05A5  00F6               	movwf	?_IAPWrite
  3475  05A6  3028               	movlw	40
  3476  05A7  2659               	fcall	_IAPWrite
  3477                           
  3478                           ;1.C: 539: IAPWrite(0x29,((CH2_remotekey[3]&0x0000FF00)>>8));
  3479  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  3480  05A9  084A               	movf	_CH2_remotekey+13,w
  3481  05AA  00F6               	movwf	?_IAPWrite
  3482  05AB  3029               	movlw	41
  3483  05AC  2659               	fcall	_IAPWrite
  3484                           
  3485                           ;1.C: 540: IAPWrite(0x2A,((CH2_remotekey[3]&0x00FF0000)>>16));
  3486  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  3487  05AE  084B               	movf	_CH2_remotekey+14,w
  3488  05AF  00F6               	movwf	?_IAPWrite
  3489  05B0  302A               	movlw	42
  3490  05B1  2659               	fcall	_IAPWrite
  3491                           
  3492                           ;1.C: 542: IAPWrite(0x31,CH2_remotekey_num);
  3493  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3494  05B3  0868               	movf	_CH2_remotekey_num,w
  3495  05B4  00F6               	movwf	?_IAPWrite
  3496  05B5  3031               	movlw	49
  3497  05B6  2E59               	ljmp	_IAPWrite
  3498  05B7                     __end_of_CH2_EEPROM_Write:	
  3499                           
  3500                           	psect	text710
  3501  05B7                     __ptext710:	
  3502 ;; =============== function _CH2_EEPROM_Write ends ============
  3503                           
  3504                           
  3505 ;; *************** function _CH1_EEPROM_Write *****************
  3506 ;; Defined at:
  3507 ;;		line 506 in file "1.C"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;		None               void
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 20/0
  3518 ;;		On exit  : 20/20
  3519 ;;		Unchanged: FFFDF/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1
  3521 ;;      Params:         0       0       0
  3522 ;;      Locals:         0       0       0
  3523 ;;      Temps:          0       0       0
  3524 ;;      Totals:         0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    1
  3528 ;; This function calls:
  3529 ;;		_IAPWrite
  3530 ;; This function is called by:
  3531 ;;		_KEY
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534  05B7                     _CH1_EEPROM_Write:	
  3535                           
  3536                           ;1.C: 507: IAPWrite(0x00,((CH1_remotekey[0]&0x000000FF)>>0));
  3537                           
  3538                           ; Regs used in _CH1_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3539  05B7  082D               	movf	_CH1_remotekey,w
  3540  05B8  00F6               	movwf	?_IAPWrite
  3541  05B9  3000               	movlw	0
  3542  05BA  2659               	fcall	_IAPWrite
  3543                           
  3544                           ;1.C: 508: IAPWrite(0x01,((CH1_remotekey[0]&0x0000FF00)>>8));
  3545  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3546  05BC  082E               	movf	_CH1_remotekey+1,w
  3547  05BD  00F6               	movwf	?_IAPWrite
  3548  05BE  3001               	movlw	1
  3549  05BF  2659               	fcall	_IAPWrite
  3550                           
  3551                           ;1.C: 509: IAPWrite(0x02,((CH1_remotekey[0]&0x00FF0000)>>16));
  3552  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  3553  05C1  082F               	movf	_CH1_remotekey+2,w
  3554  05C2  00F6               	movwf	?_IAPWrite
  3555  05C3  3002               	movlw	2
  3556  05C4  2659               	fcall	_IAPWrite
  3557                           
  3558                           ;1.C: 511: IAPWrite(0x0C,((CH1_remotekey[1]&0x000000FF)>>0));
  3559  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3560  05C6  0831               	movf	_CH1_remotekey+4,w
  3561  05C7  00F6               	movwf	?_IAPWrite
  3562  05C8  300C               	movlw	12
  3563  05C9  2659               	fcall	_IAPWrite
  3564                           
  3565                           ;1.C: 512: IAPWrite(0x0D,((CH1_remotekey[1]&0x0000FF00)>>8));
  3566  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3567  05CB  0832               	movf	_CH1_remotekey+5,w
  3568  05CC  00F6               	movwf	?_IAPWrite
  3569  05CD  300D               	movlw	13
  3570  05CE  2659               	fcall	_IAPWrite
  3571                           
  3572                           ;1.C: 513: IAPWrite(0x0E,((CH1_remotekey[1]&0x00FF0000)>>16));
  3573  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  3574  05D0  0833               	movf	_CH1_remotekey+6,w
  3575  05D1  00F6               	movwf	?_IAPWrite
  3576  05D2  300E               	movlw	14
  3577  05D3  2659               	fcall	_IAPWrite
  3578                           
  3579                           ;1.C: 515: IAPWrite(0x18,((CH1_remotekey[2]&0x000000FF)>>0));
  3580  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3581  05D5  0835               	movf	_CH1_remotekey+8,w
  3582  05D6  00F6               	movwf	?_IAPWrite
  3583  05D7  3018               	movlw	24
  3584  05D8  2659               	fcall	_IAPWrite
  3585                           
  3586                           ;1.C: 516: IAPWrite(0x19,((CH1_remotekey[2]&0x0000FF00)>>8));
  3587  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  3588  05DA  0836               	movf	_CH1_remotekey+9,w
  3589  05DB  00F6               	movwf	?_IAPWrite
  3590  05DC  3019               	movlw	25
  3591  05DD  2659               	fcall	_IAPWrite
  3592                           
  3593                           ;1.C: 517: IAPWrite(0x1A,((CH1_remotekey[2]&0x00FF0000)>>16));
  3594  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3595  05DF  0837               	movf	_CH1_remotekey+10,w
  3596  05E0  00F6               	movwf	?_IAPWrite
  3597  05E1  301A               	movlw	26
  3598  05E2  2659               	fcall	_IAPWrite
  3599                           
  3600                           ;1.C: 519: IAPWrite(0x24,((CH1_remotekey[3]&0x000000FF)>>0));
  3601  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3602  05E4  0839               	movf	_CH1_remotekey+12,w
  3603  05E5  00F6               	movwf	?_IAPWrite
  3604  05E6  3024               	movlw	36
  3605  05E7  2659               	fcall	_IAPWrite
  3606                           
  3607                           ;1.C: 520: IAPWrite(0x25,((CH1_remotekey[3]&0x0000FF00)>>8));
  3608  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3609  05E9  083A               	movf	_CH1_remotekey+13,w
  3610  05EA  00F6               	movwf	?_IAPWrite
  3611  05EB  3025               	movlw	37
  3612  05EC  2659               	fcall	_IAPWrite
  3613                           
  3614                           ;1.C: 521: IAPWrite(0x26,((CH1_remotekey[3]&0x00FF0000)>>16));
  3615  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  3616  05EE  083B               	movf	_CH1_remotekey+14,w
  3617  05EF  00F6               	movwf	?_IAPWrite
  3618  05F0  3026               	movlw	38
  3619  05F1  2659               	fcall	_IAPWrite
  3620                           
  3621                           ;1.C: 523: IAPWrite(0x30,CH1_remotekey_num);
  3622  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  3623  05F3  0867               	movf	_CH1_remotekey_num,w
  3624  05F4  00F6               	movwf	?_IAPWrite
  3625  05F5  3030               	movlw	48
  3626  05F6  2E59               	ljmp	_IAPWrite
  3627  05F7                     __end_of_CH1_EEPROM_Write:	
  3628                           
  3629                           	psect	text711
  3630  06BB                     __ptext711:	
  3631 ;; =============== function _CH1_EEPROM_Write ends ============
  3632                           
  3633                           
  3634 ;; *************** function i1_EX_INT_FallingEdge *****************
  3635 ;; Defined at:
  3636 ;;		line 422 in file "1.C"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;		None               void
  3643 ;; Registers used:
  3644 ;;		None
  3645 ;; Tracked objects:
  3646 ;;		On entry : 20/0
  3647 ;;		On exit  : 20/20
  3648 ;;		Unchanged: FFFDF/0
  3649 ;; Data sizes:     COMMON   BANK0   BANK1
  3650 ;;      Params:         0       0       0
  3651 ;;      Locals:         0       0       0
  3652 ;;      Temps:          0       0       0
  3653 ;;      Totals:         0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used:    1
  3656 ;; This function calls:
  3657 ;;		Nothing
  3658 ;; This function is called by:
  3659 ;;		_ISR
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662  06BB                     i1_EX_INT_FallingEdge:	
  3663                           
  3664                           ;1.C: 423: INTEDG =0;
  3665                           
  3666                           ; Regs used in i1_EX_INT_FallingEdge: []
  3667  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  3668  06BC  1301               	bcf	1,6
  3669                           
  3670                           ;1.C: 424: FLAGs &= ~0x01;
  3671  06BD  1074               	bcf	_FLAGs,0
  3672  06BE  0008               	return
  3673  06BF                     __end_ofi1_EX_INT_FallingEdge:	
  3674                           
  3675                           	psect	text712
  3676  05F7                     __ptext712:	
  3677 ;; =============== function i1_EX_INT_FallingEdge ends ============
  3678                           
  3679                           
  3680 ;; *************** function ___lbmod *****************
  3681 ;; Defined at:
  3682 ;;		line 5 in file "f:\program files (x86)\fmd\fmdide\data\sources\lbmod.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  dividend        1    wreg     unsigned char 
  3685 ;;  divisor         1    0[COMMON] unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  dividend        1    2[COMMON] unsigned char 
  3688 ;;  rem             1    4[COMMON] unsigned char 
  3689 ;;  counter         1    3[COMMON] unsigned char 
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      unsigned char 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 20/0
  3696 ;;		On exit  : 20/0
  3697 ;;		Unchanged: FFFDF/0
  3698 ;; Data sizes:     COMMON   BANK0   BANK1
  3699 ;;      Params:         1       0       0
  3700 ;;      Locals:         3       0       0
  3701 ;;      Temps:          1       0       0
  3702 ;;      Totals:         5       0       0
  3703 ;;Total ram usage:        5 bytes
  3704 ;; Hardware stack levels used:    1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_ISR
  3709 ;; This function uses a non-reentrant model
  3710 ;;
  3711  05F7                     ___lbmod:	
  3712                           
  3713                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  3714                           ;___lbmod@dividend stored from wreg
  3715  05F7  00F8               	movwf	___lbmod@dividend
  3716  05F8  3008               	movlw	8
  3717  05F9  00F9               	movwf	___lbmod@counter
  3718  05FA  01FA               	clrf	___lbmod@rem
  3719  05FB                     i1l3527:	
  3720  05FB  0878               	movf	___lbmod@dividend,w
  3721  05FC  00F7               	movwf	??___lbmod
  3722  05FD  3007               	movlw	7
  3723  05FE  1003               	clrc
  3724  05FF                     L5:	
  3725  05FF  0CF7               	rrf	??___lbmod,f
  3726  0600  3EFF               	addlw	-1
  3727  0601  1003               	clrc
  3728  0602  1D03               	skipz
  3729  0603  2DFF               	goto	L5
  3730  0604  0D7A               	rlf	___lbmod@rem,w
  3731  0605  0477               	iorwf	??___lbmod,w
  3732  0606  00FA               	movwf	___lbmod@rem
  3733  0607  1003               	clrc
  3734  0608  0DF8               	rlf	___lbmod@dividend,f
  3735  0609  0876               	movf	___lbmod@divisor,w
  3736  060A  027A               	subwf	___lbmod@rem,w
  3737  060B  1C03               	skipc
  3738  060C  2E0F               	goto	i1l3535
  3739  060D  0876               	movf	___lbmod@divisor,w
  3740  060E  02FA               	subwf	___lbmod@rem,f
  3741  060F                     i1l3535:	
  3742  060F  0BF9               	decfsz	___lbmod@counter,f
  3743  0610  2DFB               	goto	i1l3527
  3744  0611  087A               	movf	___lbmod@rem,w
  3745  0612  0008               	return
  3746  0613                     __end_of___lbmod:	
  3747                           
  3748                           	psect	text713
  3749  062C                     __ptext713:	
  3750 ;; =============== function ___lbmod ends ============
  3751                           
  3752                           
  3753 ;; *************** function ___wmul *****************
  3754 ;; Defined at:
  3755 ;;		line 3 in file "f:\program files (x86)\fmd\fmdide\data\sources\wmul.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  multiplier      2    0[COMMON] unsigned int 
  3758 ;;  multiplicand    2    2[COMMON] unsigned int 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  product         2    4[COMMON] unsigned int 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  2    0[COMMON] unsigned int 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0
  3765 ;; Tracked objects:
  3766 ;;		On entry : 20/20
  3767 ;;		On exit  : 20/20
  3768 ;;		Unchanged: FFFDF/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1
  3770 ;;      Params:         4       0       0
  3771 ;;      Locals:         2       0       0
  3772 ;;      Temps:          0       0       0
  3773 ;;      Totals:         6       0       0
  3774 ;;Total ram usage:        6 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_ISR
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782  062C                     ___wmul:	
  3783                           
  3784                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3785  062C  01FA               	clrf	___wmul@product
  3786  062D  01FB               	clrf	___wmul@product+1
  3787  062E                     i1l3509:	
  3788  062E  1C76               	btfss	___wmul@multiplier,0
  3789  062F  2E36               	goto	i1l3513
  3790  0630  0878               	movf	___wmul@multiplicand,w
  3791  0631  07FA               	addwf	___wmul@product,f
  3792  0632  1803               	skipnc
  3793  0633  0AFB               	incf	___wmul@product+1,f
  3794  0634  0879               	movf	___wmul@multiplicand+1,w
  3795  0635  07FB               	addwf	___wmul@product+1,f
  3796  0636                     i1l3513:	
  3797  0636  1003               	clrc
  3798  0637  0DF8               	rlf	___wmul@multiplicand,f
  3799  0638  0DF9               	rlf	___wmul@multiplicand+1,f
  3800  0639  1003               	clrc
  3801  063A  0CF7               	rrf	___wmul@multiplier+1,f
  3802  063B  0CF6               	rrf	___wmul@multiplier,f
  3803  063C  0877               	movf	___wmul@multiplier+1,w
  3804  063D  0476               	iorwf	___wmul@multiplier,w
  3805  063E  1D03               	skipz
  3806  063F  2E2E               	goto	i1l3509
  3807  0640  087B               	movf	___wmul@product+1,w
  3808  0641  00F7               	movwf	?___wmul+1
  3809  0642  087A               	movf	___wmul@product,w
  3810  0643  00F6               	movwf	?___wmul
  3811  0644  0008               	return
  3812  0645                     __end_of___wmul:	
  3813                           
  3814                           	psect	text714
  3815  0659                     __ptext714:	
  3816 ;; =============== function ___wmul ends ============
  3817                           
  3818                           
  3819 ;; *************** function _IAPWrite *****************
  3820 ;; Defined at:
  3821 ;;		line 495 in file "1.C"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  EEAddr          1    wreg     unsigned char 
  3824 ;;  Data            1    0[COMMON] unsigned char 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  EEAddr          1    1[COMMON] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;		None               void
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 20/0
  3833 ;;		On exit  : 20/20
  3834 ;;		Unchanged: FFFDF/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1
  3836 ;;      Params:         1       0       0
  3837 ;;      Locals:         1       0       0
  3838 ;;      Temps:          0       0       0
  3839 ;;      Totals:         2       0       0
  3840 ;;Total ram usage:        2 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_CH1_EEPROM_Write
  3846 ;;		_CH2_EEPROM_Write
  3847 ;;		_CH3_EEPROM_Write
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850  0659                     _IAPWrite:	
  3851                           
  3852                           ; Regs used in _IAPWrite: [wreg+status,2+status,0]
  3853                           ;IAPWrite@EEAddr stored from wreg
  3854  0659  00F7               	movwf	IAPWrite@EEAddr
  3855                           
  3856                           ;1.C: 496: GIE = 0;
  3857  065A  138B               	bcf	11,7
  3858  065B                     i1l951:	
  3859                           ;1.C: 497: while(GIE);
  3860                           
  3861  065B  1B8B               	btfsc	11,7
  3862  065C  2E5B               	goto	i1l951
  3863                           
  3864                           ;1.C: 498: EEADR = EEAddr;
  3865  065D  0877               	movf	IAPWrite@EEAddr,w
  3866  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3867  065F  009B               	movwf	27	;volatile
  3868                           
  3869                           ;1.C: 499: EEDAT = Data;
  3870  0660  0876               	movf	IAPWrite@Data,w
  3871  0661  009A               	movwf	26	;volatile
  3872  0662  3034               	movlw	52
  3873                           
  3874                           ;1.C: 500: EEIF = 0;
  3875  0663  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0664  138C               	bcf	12,7
  3877                           
  3878                           ;1.C: 501: EECON1 |= 0x34;
  3879  0665  1683               	bsf	3,5	;RP0=1, select bank1
  3880  0666  049C               	iorwf	28,f	;volatile
  3881                           
  3882                           ;1.C: 502: WR = 1;
  3883  0667  141D               	bsf	29,0
  3884  0668                     i1l954:	
  3885                           ;1.C: 503: while(WR);
  3886                           
  3887  0668  181D               	btfsc	29,0
  3888  0669  2E68               	goto	i1l954
  3889                           
  3890                           ;1.C: 504: GIE = 1;
  3891  066A  178B               	bsf	11,7
  3892  066B  0008               	return
  3893  066C                     __end_of_IAPWrite:	
  3894                           
  3895                           	psect	text715
  3896  03EB                     __ptext715:	
  3897 ;; =============== function _IAPWrite ends ============
  3898                           
  3899                           
  3900 ;; *************** function _KEYSCAN *****************
  3901 ;; Defined at:
  3902 ;;		line 591 in file "1.C"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;		None               void
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, status,0
  3911 ;; Tracked objects:
  3912 ;;		On entry : 20/0
  3913 ;;		On exit  : 20/0
  3914 ;;		Unchanged: FFFDF/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1
  3916 ;;      Params:         0       0       0
  3917 ;;      Locals:         0       0       0
  3918 ;;      Temps:          0       0       0
  3919 ;;      Totals:         0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels used:    1
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_ISR
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928  03EB                     _KEYSCAN:	
  3929                           
  3930                           ;1.C: 592: if(PRESSED == 0){
  3931                           
  3932                           ; Regs used in _KEYSCAN: [wreg+status,2+status,0]
  3933  03EB  08F5               	movf	_PRESSED,f
  3934  03EC  1D03               	skipz
  3935  03ED  0008               	return
  3936                           
  3937                           ;1.C: 593: if(PC5 == 0){
  3938  03EE  1A87               	btfsc	7,5
  3939  03EF  2C27               	goto	i1l3235
  3940                           
  3941                           ;1.C: 594: if(KEY1_LongPress < 125) PRESS_FLAG |= 0x01;
  3942  03F0  307D               	movlw	125
  3943  03F1  0222               	subwf	_KEY1_LongPress,w
  3944  03F2  1803               	skipnc
  3945  03F3  2BF5               	goto	i1l3201
  3946  03F4  1427               	bsf	_PRESS_FLAG,0
  3947  03F5                     i1l3201:	
  3948                           
  3949                           ;1.C: 595: if(KEY1_LongPress < 254) KEY1_LongPress++;
  3950  03F5  30FE               	movlw	254
  3951  03F6  0222               	subwf	_KEY1_LongPress,w
  3952  03F7  1C03               	btfss	3,0
  3953  03F8  0AA2               	incf	_KEY1_LongPress,f
  3954                           
  3955                           ;1.C: 596: if((KEY1_LongPress > 125) && (KEY1_LongPress < 250)){
  3956  03F9  307E               	movlw	126
  3957  03FA  0222               	subwf	_KEY1_LongPress,w
  3958  03FB  1C03               	skipc
  3959  03FC  2C07               	goto	i1l3217
  3960  03FD  30FA               	movlw	250
  3961  03FE  0222               	subwf	_KEY1_LongPress,w
  3962  03FF  1803               	skipnc
  3963  0400  2C07               	goto	i1l3217
  3964                           
  3965                           ;1.C: 597: PRESS_FLAG |= 0x10;
  3966  0401  1627               	bsf	_PRESS_FLAG,4
  3967                           
  3968                           ;1.C: 598: match_slice = 0;
  3969  0402  01A8               	clrf	_match_slice
  3970                           
  3971                           ;1.C: 599: PC0 = 0;
  3972  0403  1007               	bcf	7,0
  3973                           
  3974                           ;1.C: 600: PA7 = 0;
  3975  0404  1385               	bcf	5,7
  3976                           
  3977                           ;1.C: 601: LONGPRESS_OverTime_Counter = 0;
  3978  0405  1683               	bsf	3,5	;RP0=1, select bank1
  3979  0406  01AA               	clrf	_LONGPRESS_OverTime_Counter^(0+128)
  3980  0407                     i1l3217:	
  3981                           
  3982                           ;1.C: 602: }
  3983                           ;1.C: 603: if(KEY1_LongPress > 250){
  3984  0407  30FB               	movlw	251
  3985  0408  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0409  0222               	subwf	_KEY1_LongPress,w
  3987  040A  1C03               	skipc
  3988  040B  2C28               	goto	i1l3237
  3989                           
  3990                           ;1.C: 604: CH1_remotekey[0] = 0xFFFFFFFF;
  3991  040C  30FF               	movlw	255
  3992  040D  00B0               	movwf	_CH1_remotekey+3
  3993  040E  00AF               	movwf	_CH1_remotekey+2
  3994  040F  00AE               	movwf	_CH1_remotekey+1
  3995  0410  00AD               	movwf	_CH1_remotekey
  3996                           
  3997                           ;1.C: 605: CH1_remotekey[1] = 0xFFFFFFFF;
  3998  0411  00B4               	movwf	_CH1_remotekey+7
  3999  0412  00B3               	movwf	_CH1_remotekey+6
  4000  0413  00B2               	movwf	_CH1_remotekey+5
  4001  0414  00B1               	movwf	_CH1_remotekey+4
  4002                           
  4003                           ;1.C: 606: CH1_remotekey[2] = 0xFFFFFFFF;
  4004  0415  00B8               	movwf	_CH1_remotekey+11
  4005  0416  00B7               	movwf	_CH1_remotekey+10
  4006  0417  00B6               	movwf	_CH1_remotekey+9
  4007  0418  00B5               	movwf	_CH1_remotekey+8
  4008                           
  4009                           ;1.C: 607: CH1_remotekey[3] = 0xFFFFFFFF;
  4010  0419  00BC               	movwf	_CH1_remotekey+15
  4011  041A  00BB               	movwf	_CH1_remotekey+14
  4012  041B  00BA               	movwf	_CH1_remotekey+13
  4013  041C  00B9               	movwf	_CH1_remotekey+12
  4014                           
  4015                           ;1.C: 608: CH1_remotekey_num = 0;
  4016  041D  01E7               	clrf	_CH1_remotekey_num
  4017                           
  4018                           ;1.C: 609: CH1_remotekey_Latest = 0;
  4019  041E  1683               	bsf	3,5	;RP0=1, select bank1
  4020  041F  01B3               	clrf	_CH1_remotekey_Latest^(0+128)
  4021                           
  4022                           ;1.C: 610: PRESS_FLAG &= ~0x10;
  4023  0420  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0421  1227               	bcf	_PRESS_FLAG,4
  4025                           
  4026                           ;1.C: 611: PRESS_FLAG &= ~0x01;
  4027  0422  1027               	bcf	_PRESS_FLAG,0
  4028                           
  4029                           ;1.C: 612: PC0 = 1;
  4030  0423  1407               	bsf	7,0
  4031                           
  4032                           ;1.C: 613: PA7 = 1;
  4033  0424  1785               	bsf	5,7
  4034                           
  4035                           ;1.C: 614: KEY_Match_counter = 0;
  4036  0425  01A5               	clrf	_KEY_Match_counter
  4037  0426  2C28               	goto	i1l3237
  4038  0427                     i1l3235:	
  4039  0427  01A2               	clrf	_KEY1_LongPress
  4040  0428                     i1l3237:	
  4041                           
  4042                           ;1.C: 618: if(PA4 == 0){
  4043  0428  1A05               	btfsc	5,4
  4044  0429  2C61               	goto	i1l3277
  4045                           
  4046                           ;1.C: 619: if(KEY2_LongPress < 125) PRESS_FLAG |= 0x02;
  4047  042A  307D               	movlw	125
  4048  042B  0223               	subwf	_KEY2_LongPress,w
  4049  042C  1803               	skipnc
  4050  042D  2C2F               	goto	i1l3243
  4051  042E  14A7               	bsf	_PRESS_FLAG,1
  4052  042F                     i1l3243:	
  4053                           
  4054                           ;1.C: 620: if(KEY2_LongPress < 254) KEY2_LongPress++;
  4055  042F  30FE               	movlw	254
  4056  0430  0223               	subwf	_KEY2_LongPress,w
  4057  0431  1C03               	btfss	3,0
  4058  0432  0AA3               	incf	_KEY2_LongPress,f
  4059                           
  4060                           ;1.C: 621: if((KEY2_LongPress > 125) && (KEY2_LongPress < 250)){
  4061  0433  307E               	movlw	126
  4062  0434  0223               	subwf	_KEY2_LongPress,w
  4063  0435  1C03               	skipc
  4064  0436  2C41               	goto	i1l3259
  4065  0437  30FA               	movlw	250
  4066  0438  0223               	subwf	_KEY2_LongPress,w
  4067  0439  1803               	skipnc
  4068  043A  2C41               	goto	i1l3259
  4069                           
  4070                           ;1.C: 622: PRESS_FLAG |= 0x20;
  4071  043B  16A7               	bsf	_PRESS_FLAG,5
  4072                           
  4073                           ;1.C: 623: match_slice = 0;
  4074  043C  01A8               	clrf	_match_slice
  4075                           
  4076                           ;1.C: 624: PC0 = 0;
  4077  043D  1007               	bcf	7,0
  4078                           
  4079                           ;1.C: 625: PA6 = 0;
  4080  043E  1305               	bcf	5,6
  4081                           
  4082                           ;1.C: 626: LONGPRESS_OverTime_Counter = 0;
  4083  043F  1683               	bsf	3,5	;RP0=1, select bank1
  4084  0440  01AA               	clrf	_LONGPRESS_OverTime_Counter^(0+128)
  4085  0441                     i1l3259:	
  4086                           
  4087                           ;1.C: 627: }
  4088                           ;1.C: 628: if(KEY2_LongPress > 250){
  4089  0441  30FB               	movlw	251
  4090  0442  1283               	bcf	3,5	;RP0=0, select bank0
  4091  0443  0223               	subwf	_KEY2_LongPress,w
  4092  0444  1C03               	skipc
  4093  0445  2C62               	goto	i1l3279
  4094                           
  4095                           ;1.C: 629: CH2_remotekey[0] = 0xFFFFFFFF;
  4096  0446  30FF               	movlw	255
  4097  0447  00C0               	movwf	_CH2_remotekey+3
  4098  0448  00BF               	movwf	_CH2_remotekey+2
  4099  0449  00BE               	movwf	_CH2_remotekey+1
  4100  044A  00BD               	movwf	_CH2_remotekey
  4101                           
  4102                           ;1.C: 630: CH2_remotekey[1] = 0xFFFFFFFF;
  4103  044B  00C4               	movwf	_CH2_remotekey+7
  4104  044C  00C3               	movwf	_CH2_remotekey+6
  4105  044D  00C2               	movwf	_CH2_remotekey+5
  4106  044E  00C1               	movwf	_CH2_remotekey+4
  4107                           
  4108                           ;1.C: 631: CH2_remotekey[2] = 0xFFFFFFFF;
  4109  044F  00C8               	movwf	_CH2_remotekey+11
  4110  0450  00C7               	movwf	_CH2_remotekey+10
  4111  0451  00C6               	movwf	_CH2_remotekey+9
  4112  0452  00C5               	movwf	_CH2_remotekey+8
  4113                           
  4114                           ;1.C: 632: CH2_remotekey[3] = 0xFFFFFFFF;
  4115  0453  00CC               	movwf	_CH2_remotekey+15
  4116  0454  00CB               	movwf	_CH2_remotekey+14
  4117  0455  00CA               	movwf	_CH2_remotekey+13
  4118  0456  00C9               	movwf	_CH2_remotekey+12
  4119                           
  4120                           ;1.C: 633: CH2_remotekey_num = 0;
  4121  0457  01E8               	clrf	_CH2_remotekey_num
  4122                           
  4123                           ;1.C: 634: CH2_remotekey_Latest = 0;
  4124  0458  1683               	bsf	3,5	;RP0=1, select bank1
  4125  0459  01B4               	clrf	_CH2_remotekey_Latest^(0+128)
  4126                           
  4127                           ;1.C: 635: PRESS_FLAG &= ~0x20;
  4128  045A  1283               	bcf	3,5	;RP0=0, select bank0
  4129  045B  12A7               	bcf	_PRESS_FLAG,5
  4130                           
  4131                           ;1.C: 636: PRESS_FLAG &= ~0x02;
  4132  045C  10A7               	bcf	_PRESS_FLAG,1
  4133                           
  4134                           ;1.C: 637: PC0 = 1;
  4135  045D  1407               	bsf	7,0
  4136                           
  4137                           ;1.C: 638: PA6 = 1;
  4138  045E  1705               	bsf	5,6
  4139                           
  4140                           ;1.C: 639: KEY_Match_counter = 0;
  4141  045F  01A5               	clrf	_KEY_Match_counter
  4142  0460  2C62               	goto	i1l3279
  4143  0461                     i1l3277:	
  4144  0461  01A3               	clrf	_KEY2_LongPress
  4145  0462                     i1l3279:	
  4146                           
  4147                           ;1.C: 643: if(PC4 == 0){
  4148  0462  1A07               	btfsc	7,4
  4149  0463  2C9B               	goto	i1l3319
  4150                           
  4151                           ;1.C: 644: if(KEY3_LongPress < 125) PRESS_FLAG |= 0x04;
  4152  0464  307D               	movlw	125
  4153  0465  0224               	subwf	_KEY3_LongPress,w
  4154  0466  1803               	skipnc
  4155  0467  2C69               	goto	i1l3285
  4156  0468  1527               	bsf	_PRESS_FLAG,2
  4157  0469                     i1l3285:	
  4158                           
  4159                           ;1.C: 645: if(KEY3_LongPress < 254) KEY3_LongPress++;
  4160  0469  30FE               	movlw	254
  4161  046A  0224               	subwf	_KEY3_LongPress,w
  4162  046B  1C03               	btfss	3,0
  4163  046C  0AA4               	incf	_KEY3_LongPress,f
  4164                           
  4165                           ;1.C: 646: if((KEY3_LongPress > 125) && (KEY3_LongPress < 250)){
  4166  046D  307E               	movlw	126
  4167  046E  0224               	subwf	_KEY3_LongPress,w
  4168  046F  1C03               	skipc
  4169  0470  2C7B               	goto	i1l3301
  4170  0471  30FA               	movlw	250
  4171  0472  0224               	subwf	_KEY3_LongPress,w
  4172  0473  1803               	skipnc
  4173  0474  2C7B               	goto	i1l3301
  4174                           
  4175                           ;1.C: 647: PRESS_FLAG |= 0x40;
  4176  0475  1727               	bsf	_PRESS_FLAG,6
  4177                           
  4178                           ;1.C: 648: match_slice = 0;
  4179  0476  01A8               	clrf	_match_slice
  4180                           
  4181                           ;1.C: 649: PC0 = 0;
  4182  0477  1007               	bcf	7,0
  4183                           
  4184                           ;1.C: 650: PA5 = 0;
  4185  0478  1285               	bcf	5,5
  4186                           
  4187                           ;1.C: 651: LONGPRESS_OverTime_Counter = 0;
  4188  0479  1683               	bsf	3,5	;RP0=1, select bank1
  4189  047A  01AA               	clrf	_LONGPRESS_OverTime_Counter^(0+128)
  4190  047B                     i1l3301:	
  4191                           
  4192                           ;1.C: 652: }
  4193                           ;1.C: 653: if(KEY3_LongPress > 250){
  4194  047B  30FB               	movlw	251
  4195  047C  1283               	bcf	3,5	;RP0=0, select bank0
  4196  047D  0224               	subwf	_KEY3_LongPress,w
  4197  047E  1C03               	skipc
  4198  047F  2C9C               	goto	i1l3321
  4199                           
  4200                           ;1.C: 654: CH3_remotekey[0] = 0xFFFFFFFF;
  4201  0480  30FF               	movlw	255
  4202  0481  00D0               	movwf	_CH3_remotekey+3
  4203  0482  00CF               	movwf	_CH3_remotekey+2
  4204  0483  00CE               	movwf	_CH3_remotekey+1
  4205  0484  00CD               	movwf	_CH3_remotekey
  4206                           
  4207                           ;1.C: 655: CH3_remotekey[1] = 0xFFFFFFFF;
  4208  0485  00D4               	movwf	_CH3_remotekey+7
  4209  0486  00D3               	movwf	_CH3_remotekey+6
  4210  0487  00D2               	movwf	_CH3_remotekey+5
  4211  0488  00D1               	movwf	_CH3_remotekey+4
  4212                           
  4213                           ;1.C: 656: CH3_remotekey[2] = 0xFFFFFFFF;
  4214  0489  00D8               	movwf	_CH3_remotekey+11
  4215  048A  00D7               	movwf	_CH3_remotekey+10
  4216  048B  00D6               	movwf	_CH3_remotekey+9
  4217  048C  00D5               	movwf	_CH3_remotekey+8
  4218                           
  4219                           ;1.C: 657: CH3_remotekey[3] = 0xFFFFFFFF;
  4220  048D  00DC               	movwf	_CH3_remotekey+15
  4221  048E  00DB               	movwf	_CH3_remotekey+14
  4222  048F  00DA               	movwf	_CH3_remotekey+13
  4223  0490  00D9               	movwf	_CH3_remotekey+12
  4224                           
  4225                           ;1.C: 658: CH3_remotekey_num = 0;
  4226  0491  01E9               	clrf	_CH3_remotekey_num
  4227                           
  4228                           ;1.C: 659: CH3_remotekey_Latest = 0;
  4229  0492  1683               	bsf	3,5	;RP0=1, select bank1
  4230  0493  01B5               	clrf	_CH3_remotekey_Latest^(0+128)
  4231                           
  4232                           ;1.C: 660: PRESS_FLAG &= ~0x40;
  4233  0494  1283               	bcf	3,5	;RP0=0, select bank0
  4234  0495  1327               	bcf	_PRESS_FLAG,6
  4235                           
  4236                           ;1.C: 661: PRESS_FLAG &= ~0x04;
  4237  0496  1127               	bcf	_PRESS_FLAG,2
  4238                           
  4239                           ;1.C: 662: PC0 = 1;
  4240  0497  1407               	bsf	7,0
  4241                           
  4242                           ;1.C: 663: PA5 = 1;
  4243  0498  1685               	bsf	5,5
  4244                           
  4245                           ;1.C: 664: KEY_Match_counter = 0;
  4246  0499  01A5               	clrf	_KEY_Match_counter
  4247  049A  2C9C               	goto	i1l3321
  4248  049B                     i1l3319:	
  4249  049B  01A4               	clrf	_KEY3_LongPress
  4250  049C                     i1l3321:	
  4251                           
  4252                           ;1.C: 668: if((PRESS_FLAG>0)&&(PC5==1)&&(PA4==1)&&(PC4==1)){
  4253  049C  0827               	movf	_PRESS_FLAG,w
  4254  049D  1D03               	skipz
  4255  049E  1E87               	btfss	7,5
  4256  049F  0008               	return
  4257  04A0  1A05               	btfsc	5,4
  4258  04A1  1E07               	btfss	7,4
  4259  04A2  0008               	return
  4260                           
  4261                           ;1.C: 669: PRESSED = PRESS_FLAG;
  4262  04A3  00F5               	movwf	_PRESSED
  4263                           
  4264                           ;1.C: 670: PRESS_FLAG = 0;
  4265  04A4  01A7               	clrf	_PRESS_FLAG
  4266  04A5  0008               	return
  4267  04A6                     __end_of_KEYSCAN:	
  4268                           
  4269                           	psect	text716
  4270  06BF                     __ptext716:	
  4271 ;; =============== function _KEYSCAN ends ============
  4272                           
  4273                           
  4274 ;; *************** function _led1_debug *****************
  4275 ;; Defined at:
  4276 ;;		line 405 in file "1.C"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;		None
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;		None               void
  4283 ;; Registers used:
  4284 ;;		wreg
  4285 ;; Tracked objects:
  4286 ;;		On entry : 20/0
  4287 ;;		On exit  : 20/0
  4288 ;;		Unchanged: FFFDF/0
  4289 ;; Data sizes:     COMMON   BANK0   BANK1
  4290 ;;      Params:         0       0       0
  4291 ;;      Locals:         0       0       0
  4292 ;;      Temps:          0       0       0
  4293 ;;      Totals:         0       0       0
  4294 ;;Total ram usage:        0 bytes
  4295 ;; Hardware stack levels used:    1
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_ISR
  4300 ;;		_KEY
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303  06BF                     _led1_debug:	
  4304                           
  4305                           ;1.C: 407: PC0 = ~PC0;
  4306                           
  4307                           ; Regs used in _led1_debug: [wreg]
  4308  06BF  3001               	movlw	1
  4309  06C0  0687               	xorwf	7,f
  4310  06C1  0008               	return
  4311  06C2                     __end_of_led1_debug:	
  4312                           
  4313                           	psect	text717
  4314  06C2                     __ptext717:	
  4315 ;; =============== function _led1_debug ends ============
  4316                           
  4317                           
  4318 ;; *************** function _EX_INT_RisingEdge *****************
  4319 ;; Defined at:
  4320 ;;		line 418 in file "1.C"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;		None               void
  4327 ;; Registers used:
  4328 ;;		None
  4329 ;; Tracked objects:
  4330 ;;		On entry : 20/20
  4331 ;;		On exit  : 20/20
  4332 ;;		Unchanged: FFFDF/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1
  4334 ;;      Params:         0       0       0
  4335 ;;      Locals:         0       0       0
  4336 ;;      Temps:          0       0       0
  4337 ;;      Totals:         0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_ISR
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346  06C2                     _EX_INT_RisingEdge:	
  4347                           
  4348                           ;1.C: 419: INTEDG =1;
  4349                           
  4350                           ; Regs used in _EX_INT_RisingEdge: []
  4351  06C2  1701               	bsf	1,6
  4352                           
  4353                           ;1.C: 420: FLAGs |= 0x01;
  4354  06C3  1474               	bsf	_FLAGs,0
  4355  06C4  0008               	return
  4356  06C5                     __end_of_EX_INT_RisingEdge:	
  4357                           
  4358                           	psect	text718
  4359  0000                     __ptext718:	
  4360 ;; =============== function _EX_INT_RisingEdge ends ============
  4361                           
  4362  007E                     btemp	set	126	;btemp
  4363  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Jan 16 18:22:32 2020

                IAPRead@EEAddr 00AB                              pc 0002                             _RD 04E0  
                           _WR 04E8                             fsr 0004            ___wmul@multiplicand 0078  
               _KEY3_LongPress 0024                            _C1R 08CA                            _C2R 08D2  
                          l933 0000                            l942 0000                            l927 0000  
                          l936 0000                            l945 0000                            l939 0000  
                          l948 0000                            l972 0000                            l969 0000  
                          _GIE 005F                            _PA2 002A                            _PA3 002B  
                          _PC0 0038                            _PA4 002C                            _PA5 002D  
                          _PA6 002E                            _PA7 002F                            _PC4 003C  
                          _PC5 003D                            _KEY 0264                            _ISR 0010  
                          _SR0 0CF6                            _SR1 0CF7                            _PSA 040B  
                          _VR0 08C0                            _VR1 08C1                            _VR2 08C2  
                          _VR3 08C3                            _VRR 08C5                            _num 002A  
                          fsr0 0004                            indf 0000       __end_of_CH2_EEPROM_Write 05B7  
              __end_of_IAPRead 06AE                           ?_KEY 0076                           ?_ISR 0076  
              __end_of_KEYSCAN 04A6                           _C1OE 08CD                           _C2OE 08D5  
                         _C1ON 08CF                           _C2ON 08D7                           l3701 0000  
                         l3711 0000                           l3705 0000                           l3721 0000  
                         l3713 0000                           l3651 0000                           l3707 0000  
                         l3723 0000                           l3715 0000                           l3731 0000  
                         l3645 0000                           l3661 0000                           l3653 0000  
                         l3709 0000                           l3725 0000                           l3717 0000  
                         l3733 0000                           l3741 0000                           l3663 0000  
                         l3655 0000                           l3647 0000                           l3671 0000  
                         l3719 0000                           l3727 0000                           l3751 0000  
                         l3743 0000                           l3735 0000                           l3665 0000  
                         l3657 0000                           l3649 0000                           l3681 0000  
                         l3673 0000                           l3729 0000                           l3761 0000  
                         l3753 0000                           l3745 0000                           l3737 0000  
                         l3667 0000                           l3659 0000                           l3675 0000  
                         l3691 0000                           l3683 0000                           l3763 0000  
                         l3755 0000                           l3747 0000                           l3739 0000  
                         l3669 0000                           l3677 0000                           l3693 0000  
                         l3685 0000                           l3765 0657                           l3757 0000  
                         l3749 0000                           l3679 0000                           l3695 0000  
                         l3687 0000                           l3759 0000                           l3697 0000  
                         l3689 0000                           l3699 0000                           _EEIF 0067  
                         _ANS0 08F0                           _ANS1 08F1                           _ANS2 08F2  
                         _ANS3 08F3                           _ANS4 08F4                           _ANS5 08F5  
                         _ANS6 08F6                           _ANS7 08F7                           _ANS8 08F8  
                         _ANS9 08F9                           _T0IE 005D                           _T0IF 005A  
                         _T0CS 040D                           _IOCB 0116                           _PEIE 005E  
                         _INTE 005C                           _INTF 0059                           _PR2H 0092  
                         _PR2L 0091                           _TMR0 0001                           _STRA 0CE8  
                         _STRB 0CE9                           _STRC 0CEA                           _STRD 0CEB  
                         _WREN 0C62                           _WPUA 0095                           _WPUB 0115  
                         _WPUC 0093         ??i1_EX_INT_FallingEdge 0076                           _buff 0020  
                         _main 0645                           btemp 007E                           start 000F  
     __size_of_EEPROM_ReadWord 001A             _Key_dealed_counter 0026                          ??_KEY 0078  
                        ??_ISR 005D                 _Ctrl_remotekey 00A0                 _TIMER0_INITIAL 068D  
             __end_of_IAPWrite 066C                          _C1CH0 08C8                          _C1CH1 08C9  
                        _C2CH0 08D0                          _C2CH1 08D1                          _C1SEN 0CF5  
                        _C2REN 0CF4                          _C1POL 08CC                          _C2POL 08D4  
                        _C1OUT 08CE                          _C2OUT 08D6                          ?_main 0076  
                        _EEADR 009B                          _EEDAT 009A                          _ANS10 08FA  
                        _ANS11 08FB                __end_of___lbmod 0613                          _EEPGD 0C67  
               _TIMER2_INITIAL 066C                          _ANSEL 011E                          _FLAGs 0074  
                        _IOCA2 04B2                          _IOCB4 08B4                          _IOCB5 08B5  
                        _IOCB6 08B6                          _IOCB7 08B7                          _T1GSS 08D9  
                        i1l904 01BD                          i1l921 0218                          i1l930 0000  
                        i1l907 01C0                          i1l924 0000                          i1l933 0000  
                        i1l861 005E                          i1l854 001D                          i1l951 065B  
                        i1l863 008B                          i1l960 0000                          i1l872 0109  
                        i1l954 0668                          i1l866 0141                          i1l963 0000  
                        i1l867 00D1                          i1l957 0000                          i1l893 0180  
                        i1l966 0000                          i1l998 03AE                          _VP6EN 08C4  
                        _TMR2H 0013                          _TMR2L 0011                          _PSRCA 0088  
                        _PSRCC 0094                          _PORTA 0005                          _PORTC 0007  
                        _SRCON 019E                   ?_INT_INITIAL 0076                          _PULSR 0CF2  
                        _PULSS 0CF3                          _TRISA 0085                          _TRISC 0087  
                        _VRCON 0118                          _WPUB4 08AC                          _WPUB5 08AD  
                        _WPUB6 08AE                          _WPUB7 08AF               __end_of_OSC_INIT 062C  
          IAPRead@ReEEPROMread 00AC                          pclath 000A                          status 0003  
                        wtemp0 007E             _EX_INT_FallingEdge 06B3           __size_of_EEPROM_Read 0042  
                 _ms16_counter 0029                   __end_of_main 0659         __end_of_TIMER0_INITIAL 0699  
          ?_EX_INT_FallingEdge 0076         __end_of_TIMER2_INITIAL 067E                _Match_remotekey 0070  
                       ??_main 00B3                   IAPWrite@Data 0076                      ??_IAPRead 00AB  
                    ??_KEYSCAN 0076              ?_CH1_EEPROM_Write 0076       __end_of_CH3_EEPROM_Write 0577  
                       _C1VREN 08C7                         _C2VREN 08C6                         _C2SYNC 08D8  
           ??_CH1_EEPROM_Write 0078                         i1S3807 06B7                         _EEADRH 010F  
                       _EEDATH 010E                         _EECON1 009C           ??_EX_INT_FallingEdge 00AB  
                       _ANSELH 011F                         _MC1OUT 08DF                         _MC2OUT 08DE  
                       _T2CON0 0012                         _T2CON1 009E                         i1l1010 0282  
                       i1l1012 0286                         i1l1004 0270                         i1l1005 0274  
                       i1l1006 0277                         i1l1008 027B                         i1l1009 027F  
                       i1l3011 0000                         i1l3021 0000                         i1l3005 0000  
                       i1l3013 013C                         i1l3111 01A3                         i1l3031 0000  
                       i1l3007 0000                         i1l3015 010E                         i1l3023 014B  
                       i1l3201 03F5                         i1l3121 0000                         i1l3105 019C  
                       i1l3041 0000                         i1l3033 0000                         i1l3017 0000  
                       i1l3009 0000                         i1l3211 0000                         i1l3131 0000  
                       i1l3123 0000                         i1l3115 0000                         i1l3107 0000  
                       i1l3019 0000                         i1l3043 015F                         i1l3301 047B  
                       i1l3221 0000                         i1l3213 0000                         i1l3133 01C5  
                       i1l3117 0000                         i1l3125 01B3                         i1l3061 0175  
                       i1l3045 0000                         i1l3029 0000                         i1l3311 0000  
                       i1l3231 0000                         i1l3223 0000                         i1l3215 0000  
                       i1l3151 0000                         i1l3143 01CF                         i1l3119 0000  
                       i1l3055 016F                         i1l3039 015C                         i1l3047 0162  
                       i1l3313 0000                         i1l3305 0000                         i1l3321 049C  
                       i1l3233 0000                         i1l3225 0000                         i1l3217 0407  
                       i1l3401 0339                         i1l3161 0000                         i1l3137 0000  
                       i1l3081 0186                         i1l1714 0000                         i1l3331 0000  
                       i1l3323 0000                         i1l3315 0000                         i1l3307 0000  
                       i1l3243 042F                         i1l3227 0000                         i1l3235 0427  
                       i1l3411 0344                         i1l3155 0000                         i1l3163 01EE  
                       i1l3147 0000                         i1l3091 0000                         i1l3067 0000  
                       i1l3059 0000                         i1l3317 0000                         i1l3309 0000  
                       i1l3253 0000                         i1l3229 0000                         i1l3237 0428  
                       i1l3501 0000                         i1l3405 0340                         i1l3333 0000  
                       i1l3181 0000                         i1l3173 0000                         i1l3157 0000  
                       i1l3093 0000                         i1l3077 0183                         i1l3069 0000  
                       i1l1750 0000                         i1l3191 0000                         i1l3319 049B  
                       i1l3271 0000                         i1l3263 0000                         i1l3255 0000  
                       i1l3503 0000                         i1l3407 0000                         i1l3167 0000  
                       i1l3175 0202                         i1l3095 0000                         i1l3273 0000  
                       i1l3265 0000                         i1l3257 0000                         i1l3193 0000  
                       i1l3513 0636                         i1l3505 0000                         i1l3441 0000  
                       i1l3433 039C                         i1l3425 0000                         i1l3409 0000  
                       i1l3353 0000                         i1l3185 0000                         i1l3169 0000  
                       i1l3097 0000                         i1l3089 0192                         i1l3275 0000  
                       i1l3267 0000                         i1l3259 0441                         i1l3515 0000  
                       i1l3507 0000                         i1l3531 0000                         i1l3523 0000  
                       i1l3435 0000                         i1l3427 0390                         i1l3371 02D8  
                       i1l3339 026A                         i1l3179 0000                         i1l3187 0216  
                       i1l3099 0197                         i1l3189 0000                         i1l3285 0469  
                       i1l3269 0000                         i1l3277 0461                         i1l3517 0000  
                       i1l3509 062E                         i1l3525 0000                         i1l3541 0000  
                       i1l3437 0000                         i1l3429 0395                         i1l3381 0000  
                       i1l3373 02DD                         i1l3445 03A3                         i1l2901 0000  
                       i1l3295 0000                         i1l3279 0462                         i1l3535 060F  
                       i1l3527 05FB                         i1l3463 03BE                         i1l3455 03B8  
                       i1l3471 03D4                         i1l3439 03A0                         i1l3383 02E8  
                       i1l3297 0000                         i1l3537 0000                         i1l3529 0000  
                       i1l3377 02E4                         i1l3369 0000                         i1l2913 0000  
                       i1l3299 0000                         i1l3491 0000                         i1l3459 03BC  
                       i1l3379 0000                         i1l2915 0000                         i1l3469 03C0  
                       i1l3397 0000                         i1l2933 0000                         i1l2941 0060  
                       i1l2917 0000                         i1l2909 0000                         i1l3495 0000  
                       i1l3399 0334                         i1l2935 004D                         i1l3497 0000  
                       i1l3809 03C9                         i1l3499 0000                         i1l2971 0000  
                       i1l2955 0000                         i1l2973 0000                         i1l2949 0000  
                       i1l2991 0000                         i1l2975 0000                         i1l2993 0000  
                       i1l2969 0000                         i1l2977 00CC                         i1l2987 0000  
                       i1l2995 0104                         i1l2979 009E                         i1l2989 0000  
                       i1l2997 00D6                         _INTEDG 040E                         _INTCON 000B  
                       u161_25 0132                         u250_25 0354                         u162_25 0117  
                       u251_25 0364                         u243_25 02F8                         u155_25 00C2  
                       u252_25 0374                         u244_25 0308                         u236_25 029C  
                       u156_25 00A7                         u253_25 0384                         u245_25 0318  
                       u237_25 02AC                         u149_25 0079                         u246_25 0328  
                       u238_25 02BC                         u158_25 00FA                         u239_25 02CC  
                       u159_25 00DF                         _OSCCON 008F                         _TMR2IE 0461  
                       _TMR2IF 0061                         _PSINKA 0097                         _PSINKC 009F  
                       _OPTION 0081                         _TMR2ON 0092                         _WDTCON 0018  
                       _TRISA2 042A                         _Indata 00A8                ?_TIMER0_INITIAL 0076  
                       ___wmul 062C                      ??___lbmod 0077              _EX_INT_RisingEdge 06C2  
              ?_TIMER2_INITIAL 0076              ??_EEPROM_ReadWord 00AE             ?_EX_INT_RisingEdge 0076  
                       clrloop 069A                         saved_w 007E            ??_EX_INT_RisingEdge 0076  
                 ?_WDT_INITIAL 0076                ___lbmod@divisor 0076          _remotekey_Receive_num 002B  
              ___lbmod@counter 0079                      ?_IAPWrite 0076      __end_of_EX_INT_RisingEdge 06C5  
               __pcstackCOMMON 0076                      ?_OSC_INIT 0076              ?_CH2_EEPROM_Write 0076  
         _CH1_remotekey_Latest 00B3           __size_of_INT_INITIAL 0007             ??_CH2_EEPROM_Write 0078  
                   __pbssBANK0 0020                     __pbssBANK1 00A0                     _led1_debug 06BF  
                   ??_IAPWrite 0077                     __pmaintext 0645                     ??_OSC_INIT 00AB  
                      ?___wmul 0076                     __pintentry 0004                        _CM1CON0 0119  
                      _CM2CON0 011A                        _CM2CON1 011B                        _IAPRead 06A8  
                      _EE_Buff 00B6                        _KEYSCAN 03EB                        _PRESSED 0075  
                      _PSTRCON 019D                        _STRSYNC 0CEC  __size_ofi1_EX_INT_FallingEdge 0004  
   __size_of_EX_INT_RisingEdge 0003                  _CH1_remotekey 002D                        ___lbmod 05F7  
              __size_of___wmul 0019              _CH1_remotekey_num 0067                  _CH2_remotekey 003D  
                 __size_of_KEY 0173                   __size_of_ISR 0214                  _CH3_remotekey 004D  
            ?_CH3_EEPROM_Write 0076             ??_CH3_EEPROM_Write 0078           end_of_initialization 068B  
                  ?_led1_debug 0076                  ??_EEPROM_Read 00B3           __size_of_WDT_INITIAL 0005  
             ??_TIMER0_INITIAL 00AB                _EEPROM_ReadWord 04A6      __size_of_CH1_EEPROM_Write 0040  
             ??_TIMER2_INITIAL 00AB           _CH2_remotekey_Latest 00B4               ___lbmod@dividend 0078  
  __size_of_EX_INT_FallingEdge 0004                    ___lbmod@rem 007A              __size_of_IAPWrite 0013  
          __end_of_EEPROM_Read 0537                 __end_of___wmul 0645              __size_of_OSC_INIT 0019  
          __size_of_led1_debug 0003            start_initialization 067E                    __end_of_KEY 03D7  
                  __end_of_ISR 0224        __end_of_EEPROM_ReadWord 04C0      __size_of_CH2_EEPROM_Write 0040  
            _KEY_Match_counter 0025                 IAPWrite@EEAddr 0077                       ??___wmul 007A  
                     ?_IAPRead 0076                  ??_INT_INITIAL 00AB                       ?_KEYSCAN 0076  
                  __pbssCOMMON 0070                  __pcstackBANK0 005D                  __pcstackBANK1 00AB  
         _CH3_remotekey_Latest 00B5                    _EEPROM_Read 04F5                      __pnvBANK0 0067  
                    __pnvBANK1 00B3               _CH1_EEPROM_Write 05B7                      __ptext700 06A8  
                    __ptext701 066C                      __ptext710 05B7                      __ptext702 068D  
                    __ptext711 06BB                      __ptext703 06AE                      __ptext712 05F7  
                    __ptext704 0613                      __ptext713 062C                      __ptext705 06B3  
                    __ptext714 0659                      __ptext706 0010                      __ptext715 03EB  
                    __ptext707 0264                       ?___lbmod 0076                      __ptext716 06BF  
                    __ptext708 0537                      __ptext717 06C2                      __ptext709 0577  
                    __ptext718 0000                      __ptext696 0000                      __ptext697 04F5  
                    __ptext698 04A6                      __ptext699 06A1     _LONGPRESS_OverTime_Counter 00AA  
                    __pswtext1 06B7              _CH2_remotekey_num 0068   __end_ofi1_EX_INT_FallingEdge 06BF  
          __end_of_INT_INITIAL 06A8               ?_EEPROM_ReadWord 00AD                   ??_led1_debug 0076  
            interrupt_function 0004                       _IAPWrite 0659                 ___wmul@product 007A  
    __size_of_CH3_EEPROM_Write 0040                      _remotekey 00A4                       _OSC_INIT 0613  
            ___wmul@multiplier 0076             __end_of_led1_debug 06C2               __size_of_IAPRead 0006  
             __size_of_KEYSCAN 00BB                  ??_WDT_INITIAL 00AB               _CH2_EEPROM_Write 0577  
                  _match_slice 0028               __size_of___lbmod 001C                    _INT_INITIAL 06A1  
   __end_of_EX_INT_FallingEdge 06B7                  __size_of_main 0014           i1_EX_INT_FallingEdge 06BB  
          __end_of_WDT_INITIAL 06B3                       clear_ram 0699                _remotekey_slice 002C  
      __size_of_TIMER0_INITIAL 000C        __size_of_TIMER2_INITIAL 0012       __end_of_CH1_EEPROM_Write 05F7  
                     intlevel1 0000                   ?_EEPROM_Read 0076          ?i1_EX_INT_FallingEdge 0076  
             _CH3_EEPROM_Write 0537                     _PRESS_FLAG 0027              _CH3_remotekey_num 0069  
                  _WDT_INITIAL 06AE                 _KEY1_LongPress 0022            EEPROM_ReadWord@data 00AD  
          EEPROM_ReadWord@buff 00B2                 _KEY2_LongPress 0023  
