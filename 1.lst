

HI-TECH Software PIC PRO Macro Assembler V9.83 build 10920 
                                                                                               Sat Feb 15 18:46:00 2020

HI-TECH Software Omniscient Code Generator (PRO mode) build 10920
     1                           	processor	16F685
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text677,local,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,delta=2
    16                           	psect	text678,local,class=CODE,delta=2
    17                           	psect	text679,local,class=CODE,delta=2
    18                           	psect	text680,local,class=CODE,delta=2
    19                           	psect	text681,local,class=CODE,delta=2
    20                           	psect	text682,local,class=CODE,delta=2
    21                           	psect	text683,local,class=CODE,delta=2
    22                           	psect	text684,local,class=CODE,delta=2
    23                           	psect	text685,local,class=CODE,delta=2
    24                           	psect	text686,local,class=CODE,delta=2
    25                           	psect	text687,local,class=CODE,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text688,local,class=CODE,delta=2
    28                           	psect	swtext1,local,class=CONST,delta=2
    29                           	psect	text689,local,class=CODE,delta=2
    30                           	psect	text690,local,class=CODE,delta=2
    31                           	psect	text691,local,class=CODE,delta=2
    32                           	psect	text692,local,class=CODE,delta=2
    33                           	psect	text693,local,class=CODE,delta=2
    34                           	psect	text694,local,class=CODE,delta=2
    35                           	psect	text695,local,class=CODE,delta=2
    36                           	psect	text696,local,class=CODE,delta=2
    37                           	psect	text697,local,class=CODE,delta=2
    38                           	psect	text698,local,class=CODE,delta=2
    39                           	psect	pa_nodes,global,class=CODE,delta=2
    40                           	dabs	1,0x11E,1
    41                           	dabs	1,0x11F,1
    42                           	dabs	1,0x119,1
    43                           	dabs	1,0x11A,1
    44                           	dabs	1,0x11B,1
    45                           	dabs	1,0x10F,1
    46                           	dabs	1,0x10E,1
    47                           	dabs	1,0x116,1
    48                           	dabs	1,0x19D,1
    49                           	dabs	1,0x19E,1
    50                           	dabs	1,0x118,1
    51                           	dabs	1,0x115,1
    52                           	dabs	1,0x11E,1
    53                           	dabs	1,0x11E,1
    54                           	dabs	1,0x11F,1
    55                           	dabs	1,0x11F,1
    56                           	dabs	1,0x11E,1
    57                           	dabs	1,0x11E,1
    58                           	dabs	1,0x11E,1
    59                           	dabs	1,0x11E,1
    60                           	dabs	1,0x11E,1
    61                           	dabs	1,0x11E,1
    62                           	dabs	1,0x11F,1
    63                           	dabs	1,0x11F,1
    64                           	dabs	1,0x119,1
    65                           	dabs	1,0x119,1
    66                           	dabs	1,0x119,1
    67                           	dabs	1,0x119,1
    68                           	dabs	1,0x119,1
    69                           	dabs	1,0x119,1
    70                           	dabs	1,0x119,1
    71                           	dabs	1,0x19E,1
    72                           	dabs	1,0x118,1
    73                           	dabs	1,0x11A,1
    74                           	dabs	1,0x11A,1
    75                           	dabs	1,0x11A,1
    76                           	dabs	1,0x11A,1
    77                           	dabs	1,0x11A,1
    78                           	dabs	1,0x11A,1
    79                           	dabs	1,0x11A,1
    80                           	dabs	1,0x19E,1
    81                           	dabs	1,0x11B,1
    82                           	dabs	1,0x118,1
    83                           	dabs	1,0x18C,1
    84                           	dabs	1,0x116,1
    85                           	dabs	1,0x116,1
    86                           	dabs	1,0x116,1
    87                           	dabs	1,0x116,1
    88                           	dabs	1,0x11B,1
    89                           	dabs	1,0x11B,1
    90                           	dabs	1,0x19E,1
    91                           	dabs	1,0x19E,1
    92                           	dabs	1,0x19E,1
    93                           	dabs	1,0x19E,1
    94                           	dabs	1,0x19D,1
    95                           	dabs	1,0x19D,1
    96                           	dabs	1,0x19D,1
    97                           	dabs	1,0x19D,1
    98                           	dabs	1,0x19D,1
    99                           	dabs	1,0x11B,1
   100                           	dabs	1,0x118,1
   101                           	dabs	1,0x118,1
   102                           	dabs	1,0x118,1
   103                           	dabs	1,0x118,1
   104                           	dabs	1,0x118,1
   105                           	dabs	1,0x118,1
   106                           	dabs	1,0x115,1
   107                           	dabs	1,0x115,1
   108                           	dabs	1,0x115,1
   109                           	dabs	1,0x115,1
   110                           	dabs	1,0x18C,1
   111                           	dabs	1,0x7E,2
   112  000A                     
   113                           	psect	text677
   114  0000                     __ptext677:	
   115  011E                     _ANSEL	set	286	;_ANSEL
   116  011F                     _ANSELH	set	287	;_ANSELH
   117  0119                     _CM1CON0	set	281	;_CM1CON0
   118  011A                     _CM2CON0	set	282	;_CM2CON0
   119  011B                     _CM2CON1	set	283	;_CM2CON1
   120  010F                     _EEADRH	set	271	;_EEADRH
   121  010E                     _EEDATH	set	270	;_EEDATH
   122  0116                     _IOCB	set	278	;_IOCB
   123  019D                     _PSTRCON	set	413	;_PSTRCON
   124  019E                     _SRCON	set	414	;_SRCON
   125  0118                     _VRCON	set	280	;_VRCON
   126  0115                     _WPUB	set	277	;_WPUB
   127  08F0                     _ANS0	set	2288	;_ANS0
   128  08F1                     _ANS1	set	2289	;_ANS1
   129  08FA                     _ANS10	set	2298	;_ANS10
   130  08FB                     _ANS11	set	2299	;_ANS11
   131  08F2                     _ANS2	set	2290	;_ANS2
   132  08F3                     _ANS3	set	2291	;_ANS3
   133  08F4                     _ANS4	set	2292	;_ANS4
   134  08F5                     _ANS5	set	2293	;_ANS5
   135  08F6                     _ANS6	set	2294	;_ANS6
   136  08F7                     _ANS7	set	2295	;_ANS7
   137  08F8                     _ANS8	set	2296	;_ANS8
   138  08F9                     _ANS9	set	2297	;_ANS9
   139  08C8                     _C1CH0	set	2248	;_C1CH0
   140  08C9                     _C1CH1	set	2249	;_C1CH1
   141  08CD                     _C1OE	set	2253	;_C1OE
   142  08CF                     _C1ON	set	2255	;_C1ON
   143  08CE                     _C1OUT	set	2254	;_C1OUT
   144  08CC                     _C1POL	set	2252	;_C1POL
   145  08CA                     _C1R	set	2250	;_C1R
   146  0CF5                     _C1SEN	set	3317	;_C1SEN
   147  08C7                     _C1VREN	set	2247	;_C1VREN
   148  08D0                     _C2CH0	set	2256	;_C2CH0
   149  08D1                     _C2CH1	set	2257	;_C2CH1
   150  08D5                     _C2OE	set	2261	;_C2OE
   151  08D7                     _C2ON	set	2263	;_C2ON
   152  08D6                     _C2OUT	set	2262	;_C2OUT
   153  08D4                     _C2POL	set	2260	;_C2POL
   154  08D2                     _C2R	set	2258	;_C2R
   155  0CF4                     _C2REN	set	3316	;_C2REN
   156  08D8                     _C2SYNC	set	2264	;_C2SYNC
   157  08C6                     _C2VREN	set	2246	;_C2VREN
   158  0C67                     _EEPGD	set	3175	;_EEPGD
   159  08B4                     _IOCB4	set	2228	;_IOCB4
   160  08B5                     _IOCB5	set	2229	;_IOCB5
   161  08B6                     _IOCB6	set	2230	;_IOCB6
   162  08B7                     _IOCB7	set	2231	;_IOCB7
   163  08DF                     _MC1OUT	set	2271	;_MC1OUT
   164  08DE                     _MC2OUT	set	2270	;_MC2OUT
   165  0CF2                     _PULSR	set	3314	;_PULSR
   166  0CF3                     _PULSS	set	3315	;_PULSS
   167  0CF6                     _SR0	set	3318	;_SR0
   168  0CF7                     _SR1	set	3319	;_SR1
   169  0CE8                     _STRA	set	3304	;_STRA
   170  0CE9                     _STRB	set	3305	;_STRB
   171  0CEA                     _STRC	set	3306	;_STRC
   172  0CEB                     _STRD	set	3307	;_STRD
   173  0CEC                     _STRSYNC	set	3308	;_STRSYNC
   174  08D9                     _T1GSS	set	2265	;_T1GSS
   175  08C4                     _VP6EN	set	2244	;_VP6EN
   176  08C0                     _VR0	set	2240	;_VR0
   177  08C1                     _VR1	set	2241	;_VR1
   178  08C2                     _VR2	set	2242	;_VR2
   179  08C3                     _VR3	set	2243	;_VR3
   180  08C5                     _VRR	set	2245	;_VRR
   181  08AC                     _WPUB4	set	2220	;_WPUB4
   182  08AD                     _WPUB5	set	2221	;_WPUB5
   183  08AE                     _WPUB6	set	2222	;_WPUB6
   184  08AF                     _WPUB7	set	2223	;_WPUB7
   185  0C62                     _WREN	set	3170	;_WREN
   186                           
   187                           	psect	nvBANK0
   188  0067                     __pnvBANK0:	
   189  0067                     _CH1_remotekey_num:	
   190  0067                     	ds	1
   191  0068                     _CH2_remotekey_num:	
   192  0068                     	ds	1
   193  0069                     _CH3_remotekey_num:	
   194  0069                     	ds	1
   195  000B                     _INTCON	set	11
   196  0005                     _PORTA	set	5
   197  0007                     _PORTC	set	7
   198  0012                     _T2CON0	set	18
   199  0001                     _TMR0	set	1
   200  0013                     _TMR2H	set	19
   201  0011                     _TMR2L	set	17
   202  0018                     _WDTCON	set	24
   203  0067                     _EEIF	set	103
   204  005F                     _GIE	set	95
   205  005C                     _INTE	set	92
   206  0059                     _INTF	set	89
   207  002A                     _PA2	set	42
   208  002B                     _PA3	set	43
   209  002C                     _PA4	set	44
   210  002D                     _PA5	set	45
   211  002E                     _PA6	set	46
   212  002F                     _PA7	set	47
   213  0038                     _PC0	set	56
   214  003C                     _PC4	set	60
   215  003D                     _PC5	set	61
   216  005E                     _PEIE	set	94
   217  005D                     _T0IE	set	93
   218  005A                     _T0IF	set	90
   219  0061                     _TMR2IF	set	97
   220  0092                     _TMR2ON	set	146
   221  009B                     _EEADR	set	155
   222  009C                     _EECON1	set	156
   223  009A                     _EEDAT	set	154
   224  0081                     _OPTION	set	129
   225  008F                     _OSCCON	set	143
   226  0092                     _PR2H	set	146
   227  0091                     _PR2L	set	145
   228  0097                     _PSINKA	set	151
   229  009F                     _PSINKC	set	159
   230  0088                     _PSRCA	set	136
   231  0094                     _PSRCC	set	148
   232  009E                     _T2CON1	set	158
   233  0085                     _TRISA	set	133
   234  0087                     _TRISC	set	135
   235  0095                     _WPUA	set	149
   236  0093                     _WPUC	set	147
   237  040E                     _INTEDG	set	1038
   238  04B2                     _IOCA2	set	1202
   239  040B                     _PSA	set	1035
   240  04E0                     _RD	set	1248
   241  040D                     _T0CS	set	1037
   242  0461                     _TMR2IE	set	1121
   243  042A                     _TRISA2	set	1066
   244  04E8                     _WR	set	1256
   245                           
   246                           	psect	nvBANK1
   247  00B7                     __pnvBANK1:	
   248  00B7                     _CH1_remotekey_Latest:	
   249  00B7                     	ds	1
   250  00B8                     _CH2_remotekey_Latest:	
   251  00B8                     	ds	1
   252  00B9                     _CH3_remotekey_Latest:	
   253  00B9                     	ds	1
   254  00BA                     _EE_Buff:	
   255  00BA                     	ds	1
   256                           
   257                           	psect	cinit
   258  06B3                     start_initialization:	
   259                           
   260                           ; Clear objects allocated to COMMON
   261  06B3  3070               	movlw	low __pbssCOMMON
   262  06B4  0084               	movwf	4
   263  06B5  3076               	movlw	low (__pbssCOMMON+6)
   264  06B6  26CE               	fcall	clear_ram
   265  06B7  3020               	movlw	low __pbssBANK0
   266                           
   267                           ; Clear objects allocated to BANK0
   268  06B8  1383               	bcf	3,7	;select IRP bank0
   269  06B9  0084               	movwf	4
   270  06BA  305D               	movlw	low (__pbssBANK0+61)
   271  06BB  26CE               	fcall	clear_ram
   272                           
   273                           ; Clear objects allocated to BANK1
   274  06BC  30A0               	movlw	low __pbssBANK1
   275  06BD  0084               	movwf	4
   276  06BE  30AF               	movlw	low (__pbssBANK1+15)
   277  06BF  26CE               	fcall	clear_ram
   278  06C0                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  06C0  0183               	clrf	3
   282  06C1  2E7A               	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMMON
   285  0070                     __pbssCOMMON:	
   286  0070                     _buff:	
   287  0070                     	ds	2
   288  0072                     _FLAGs:	
   289  0072                     	ds	1
   290  0073                     _KEY1_LongPress:	
   291  0073                     	ds	1
   292  0074                     _KEY2_LongPress:	
   293  0074                     	ds	1
   294  0075                     _PRESSED:	
   295  0075                     	ds	1
   296                           
   297                           	psect	bssBANK0
   298  0020                     __pbssBANK0:	
   299  0020                     _Match_remotekey:	
   300  0020                     	ds	4
   301  0024                     _KEY3_LongPress:	
   302  0024                     	ds	1
   303  0025                     _KEY_Match_counter:	
   304  0025                     	ds	1
   305  0026                     _LONGPRESS_OverTime_Counter:	
   306  0026                     	ds	1
   307  0027                     _PRESS_FLAG:	
   308  0027                     	ds	1
   309  0028                     _match_slice:	
   310  0028                     	ds	1
   311  0029                     _ms16_counter:	
   312  0029                     	ds	1
   313  002A                     _num:	
   314  002A                     	ds	1
   315  002B                     _remotekey_Receive_num:	
   316  002B                     	ds	1
   317  002C                     _remotekey_slice:	
   318  002C                     	ds	1
   319  002D                     _CH1_remotekey:	
   320  002D                     	ds	16
   321  003D                     _CH2_remotekey:	
   322  003D                     	ds	16
   323  004D                     _CH3_remotekey:	
   324  004D                     	ds	16
   325                           
   326                           	psect	bssBANK1
   327  00A0                     __pbssBANK1:	
   328  00A0                     _Ctrl_remotekey:	
   329  00A0                     	ds	4
   330  00A4                     _remotekey:	
   331  00A4                     	ds	4
   332  00A8                     _HIndata:	
   333  00A8                     	ds	2
   334  00AA                     _Indata:	
   335  00AA                     	ds	2
   336  00AC                     _LIndata:	
   337  00AC                     	ds	2
   338  00AE                     _i:	
   339  00AE                     	ds	1
   340                           
   341                           	psect	clrtext
   342  06CE                     clear_ram:	
   343                           ;	Called with FSR containing the base address, and
   344                           ;	W with the last address+1
   345                           
   346  06CE  0064               	clrwdt	;clear the watchdog before getting into this loop
   347  06CF                     clrloop:	
   348  06CF  0180               	clrf	0	;clear RAM location pointed to by FSR
   349  06D0  0A84               	incf	4,f	;increment pointer
   350  06D1  0604               	xorwf	4,w	;XOR with final address
   351  06D2  1903               	btfsc	3,2	;have we reached the end yet?
   352  06D3  3400               	retlw	0	;all done for this memory range, return
   353  06D4  0604               	xorwf	4,w	;XOR again to restore value
   354  06D5  2ECF               	goto	clrloop	;do the next byte
   355                           
   356                           	psect	cstackBANK1
   357  00AF                     __pcstackBANK1:	
   358  00AF                     ??_EX_INT_FallingEdge:	
   359  00AF                     ??_INT_INITIAL:	
   360                           ; 0 bytes @ 0x0
   361                           
   362  00AF                     ??_OSC_INIT:	
   363                           ; 0 bytes @ 0x0
   364                           
   365  00AF                     ??_WDT_INITIAL:	
   366                           ; 0 bytes @ 0x0
   367                           
   368  00AF                     ??_TIMER0_INITIAL:	
   369                           ; 0 bytes @ 0x0
   370                           
   371  00AF                     ??_TIMER2_INITIAL:	
   372                           ; 0 bytes @ 0x0
   373                           
   374  00AF                     ??_IAPRead:	
   375                           ; 0 bytes @ 0x0
   376                           
   377  00AF                     IAPRead@EEAddr:	
   378                           ; 0 bytes @ 0x0
   379                           
   380                           
   381                           ; 1 bytes @ 0x0
   382  00AF                     	ds	1
   383  00B0                     IAPRead@ReEEPROMread:	
   384                           
   385                           ; 1 bytes @ 0x1
   386  00B0                     	ds	1
   387  00B1                     ?_EEPROM_ReadWord:	
   388  00B1                     EEPROM_ReadWord@data:	
   389                           ; 0 bytes @ 0x2
   390                           
   391                           
   392                           ; 1 bytes @ 0x2
   393  00B1                     	ds	1
   394  00B2                     ??_EEPROM_ReadWord:	
   395                           
   396                           ; 0 bytes @ 0x3
   397  00B2                     	ds	4
   398  00B6                     EEPROM_ReadWord@buff:	
   399                           
   400                           ; 1 bytes @ 0x7
   401  00B6                     	ds	1
   402  00B7                     ??_EEPROM_Read:	
   403  00B7                     ??_main:	
   404                           ; 0 bytes @ 0x8
   405                           
   406                           
   407                           	psect	cstackCOMMON
   408  0076                     __pcstackCOMMON:	
   409                           ; 0 bytes @ 0x8
   410                           
   411  0076                     ?_EX_INT_RisingEdge:	
   412  0076                     ??_EX_INT_RisingEdge:	
   413                           ; 0 bytes @ 0x0
   414                           
   415  0076                     ?_EX_INT_FallingEdge:	
   416                           ; 0 bytes @ 0x0
   417                           
   418  0076                     ?_led1_debug:	
   419                           ; 0 bytes @ 0x0
   420                           
   421  0076                     ??_led1_debug:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0076                     ?_KEYSCAN:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0076                     ??_KEYSCAN:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0076                     ?_KEY:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0076                     ?_ISR:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0076                     ?_INT_INITIAL:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0076                     ?_OSC_INIT:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0076                     ?_WDT_INITIAL:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0076                     ?_TIMER0_INITIAL:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0076                     ?_TIMER2_INITIAL:	
   449                           ; 0 bytes @ 0x0
   450                           
   451  0076                     ?_IAPWrite:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0076                     ?_CH1_EEPROM_Write:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0076                     ?_CH2_EEPROM_Write:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0076                     ?_CH3_EEPROM_Write:	
   461                           ; 0 bytes @ 0x0
   462                           
   463  0076                     ?_EEPROM_Read:	
   464                           ; 0 bytes @ 0x0
   465                           
   466  0076                     ?i1_EX_INT_FallingEdge:	
   467                           ; 0 bytes @ 0x0
   468                           
   469  0076                     ??i1_EX_INT_FallingEdge:	
   470                           ; 0 bytes @ 0x0
   471                           
   472  0076                     ?_IAPRead:	
   473                           ; 0 bytes @ 0x0
   474                           
   475  0076                     ?_main:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0076                     ?___wmul:	
   479                           ; 2 bytes @ 0x0
   480                           
   481  0076                     IAPWrite@Data:	
   482                           ; 2 bytes @ 0x0
   483                           
   484  0076                     ___wmul@multiplier:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 2 bytes @ 0x0
   489  0076                     	ds	1
   490  0077                     ??_IAPWrite:	
   491  0077                     IAPWrite@EEAddr:	
   492                           ; 0 bytes @ 0x1
   493                           
   494                           
   495                           ; 1 bytes @ 0x1
   496  0077                     	ds	1
   497  0078                     ??_KEY:	
   498  0078                     ??_CH1_EEPROM_Write:	
   499                           ; 0 bytes @ 0x2
   500                           
   501  0078                     ??_CH2_EEPROM_Write:	
   502                           ; 0 bytes @ 0x2
   503                           
   504  0078                     ??_CH3_EEPROM_Write:	
   505                           ; 0 bytes @ 0x2
   506                           
   507  0078                     ___wmul@multiplicand:	
   508                           ; 0 bytes @ 0x2
   509                           
   510                           
   511                           ; 2 bytes @ 0x2
   512  0078                     	ds	2
   513  007A                     ??___wmul:	
   514  007A                     ___wmul@product:	
   515                           ; 0 bytes @ 0x4
   516                           
   517                           
   518                           ; 2 bytes @ 0x4
   519  007A                     	ds	2
   520                           
   521                           	psect	cstackBANK0
   522  005D                     __pcstackBANK0:	
   523  005D                     ??_ISR:	
   524                           
   525                           ; 0 bytes @ 0x0
   526  005D                     	ds	10
   527                           
   528                           	psect	maintext
   529  067A                     __pmaintext:	
   530 ;;Data sizes: Strings 0, constant 0, data 0, bss 82, persistent 7 stack 0
   531 ;;Auto spaces:   Size  Autos    Used
   532 ;; COMMON          14      6      12
   533 ;; BANK0           80     10      74
   534 ;; BANK1           32      8      27
   535 ;;
   536 ;; Pointer list with targets:
   537 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   538 ;;
   539 ;; EEPROM_ReadWord@buff	PTR unsigned long  size(1) Largest target is 16
   540 ;;		 -> CH3_remotekey(BANK0[16]), CH2_remotekey(BANK0[16]), CH1_remotekey(BANK0[16]), 
   541 ;;
   542 ;;
   543 ;; Critical Paths under _main in COMMON
   544 ;;
   545 ;;   None.
   546 ;;
   547 ;; Critical Paths under _ISR in COMMON
   548 ;;
   549 ;;   _ISR->___wmul
   550 ;;   _CH3_EEPROM_Write->_IAPWrite
   551 ;;   _CH2_EEPROM_Write->_IAPWrite
   552 ;;   _CH1_EEPROM_Write->_IAPWrite
   553 ;;
   554 ;; Critical Paths under _main in BANK0
   555 ;;
   556 ;;   None.
   557 ;;
   558 ;; Critical Paths under _ISR in BANK0
   559 ;;
   560 ;;   None.
   561 ;;
   562 ;; Critical Paths under _main in BANK1
   563 ;;
   564 ;;   _EEPROM_Read->_EEPROM_ReadWord
   565 ;;   _EEPROM_ReadWord->_IAPRead
   566 ;;
   567 ;; Critical Paths under _ISR in BANK1
   568 ;;
   569 ;;   None.
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   572 ;;
   573 ;;
   574 ;;Call Graph Tables:
   575 ;;
   576 ;; ---------------------------------------------------------------------------------
   577 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   578 ;; ---------------------------------------------------------------------------------
   579 ;; (0) _main                                                 0     0      0     471
   580 ;;                           _OSC_INIT
   581 ;;                     _TIMER0_INITIAL
   582 ;;                     _TIMER2_INITIAL
   583 ;;                        _INT_INITIAL
   584 ;;                        _EEPROM_Read
   585 ;;                        _WDT_INITIAL
   586 ;;                 _EX_INT_FallingEdge
   587 ;; ---------------------------------------------------------------------------------
   588 ;; (1) _EEPROM_Read                                          0     0      0     471
   589 ;;                    _EEPROM_ReadWord
   590 ;;                            _IAPRead
   591 ;; ---------------------------------------------------------------------------------
   592 ;; (2) _EEPROM_ReadWord                                      6     5      1     406
   593 ;;                                              2 BANK1      6     5      1
   594 ;;                            _IAPRead
   595 ;; ---------------------------------------------------------------------------------
   596 ;; (1) _INT_INITIAL                                          0     0      0       0
   597 ;;                 _EX_INT_FallingEdge
   598 ;; ---------------------------------------------------------------------------------
   599 ;; (2) _IAPRead                                              2     2      0      65
   600 ;;                                              0 BANK1      2     2      0
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (1) _TIMER2_INITIAL                                       0     0      0       0
   603 ;; ---------------------------------------------------------------------------------
   604 ;; (1) _TIMER0_INITIAL                                       0     0      0       0
   605 ;; ---------------------------------------------------------------------------------
   606 ;; (1) _WDT_INITIAL                                          0     0      0       0
   607 ;; ---------------------------------------------------------------------------------
   608 ;; (1) _OSC_INIT                                             0     0      0       0
   609 ;; ---------------------------------------------------------------------------------
   610 ;; (1) _EX_INT_FallingEdge                                   0     0      0       0
   611 ;; ---------------------------------------------------------------------------------
   612 ;; Estimated maximum stack depth 2
   613 ;; ---------------------------------------------------------------------------------
   614 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   615 ;; ---------------------------------------------------------------------------------
   616 ;; (4) _ISR                                                 10    10      0     224
   617 ;;                                              0 BANK0     10    10      0
   618 ;;                  _EX_INT_RisingEdge
   619 ;;               i1_EX_INT_FallingEdge
   620 ;;                             ___wmul
   621 ;;                         _led1_debug
   622 ;;                            _KEYSCAN
   623 ;;                                _KEY
   624 ;; ---------------------------------------------------------------------------------
   625 ;; (5) _KEY                                                  2     2      0     132
   626 ;;                                              2 COMMON     2     2      0
   627 ;;                   _CH1_EEPROM_Write
   628 ;;                   _CH2_EEPROM_Write
   629 ;;                   _CH3_EEPROM_Write
   630 ;;                         _led1_debug
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (6) _CH3_EEPROM_Write                                     0     0      0      44
   633 ;;                           _IAPWrite
   634 ;; ---------------------------------------------------------------------------------
   635 ;; (6) _CH2_EEPROM_Write                                     0     0      0      44
   636 ;;                           _IAPWrite
   637 ;; ---------------------------------------------------------------------------------
   638 ;; (6) _CH1_EEPROM_Write                                     0     0      0      44
   639 ;;                           _IAPWrite
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (5) i1_EX_INT_FallingEdge                                 0     0      0       0
   642 ;; ---------------------------------------------------------------------------------
   643 ;; (5) ___wmul                                               6     2      4      92
   644 ;;                                              0 COMMON     6     2      4
   645 ;; ---------------------------------------------------------------------------------
   646 ;; (7) _IAPWrite                                             2     1      1      44
   647 ;;                                              0 COMMON     2     1      1
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (5) _KEYSCAN                                              0     0      0       0
   650 ;; ---------------------------------------------------------------------------------
   651 ;; (6) _led1_debug                                           0     0      0       0
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (5) _EX_INT_RisingEdge                                    0     0      0       0
   654 ;; ---------------------------------------------------------------------------------
   655 ;; Estimated maximum stack depth 7
   656 ;; ---------------------------------------------------------------------------------
   657 ;; Call Graph Graphs:
   658 ;; _main (ROOT)
   659 ;;   _OSC_INIT
   660 ;;   _TIMER0_INITIAL
   661 ;;   _TIMER2_INITIAL
   662 ;;   _INT_INITIAL
   663 ;;     _EX_INT_FallingEdge
   664 ;;   _EEPROM_Read
   665 ;;     _EEPROM_ReadWord
   666 ;;       _IAPRead
   667 ;;     _IAPRead
   668 ;;   _WDT_INITIAL
   669 ;;   _EX_INT_FallingEdge
   670 ;;
   671 ;; _ISR (ROOT)
   672 ;;   _EX_INT_RisingEdge
   673 ;;   i1_EX_INT_FallingEdge
   674 ;;   ___wmul
   675 ;;   _led1_debug
   676 ;;   _KEYSCAN
   677 ;;   _KEY
   678 ;;     _CH1_EEPROM_Write
   679 ;;       _IAPWrite
   680 ;;     _CH2_EEPROM_Write
   681 ;;       _IAPWrite
   682 ;;     _CH3_EEPROM_Write
   683 ;;       _IAPWrite
   684 ;;     _led1_debug
   685 ;;
   686 ;; Address spaces:
   687 ;;Name               Size   Autos  Total    Cost      Usage
   688 ;;BITCOMMON            E      0       0       0        0.0%
   689 ;;EEDATA             100      0       0       0        0.0%
   690 ;;NULL                 0      0       0       0        0.0%
   691 ;;CODE                 0      0       0       0        0.0%
   692 ;;COMMON               E      6       C       1       85.7%
   693 ;;BITSFR0              0      0       0       1        0.0%
   694 ;;SFR0                 0      0       0       1        0.0%
   695 ;;BITSFR1              0      0       0       2        0.0%
   696 ;;SFR1                 0      0       0       2        0.0%
   697 ;;STACK                0      0       B       2        0.0%
   698 ;;BITBANK0            50      0       0       3        0.0%
   699 ;;BANK0               50      A      4A       4       92.5%
   700 ;;BANK1               20      8      1B       5       84.4%
   701 ;;ABS                  0      0      71       6        0.0%
   702 ;;BITBANK1            20      0       0       7        0.0%
   703 ;;DATA                 0      0      7C       8        0.0%
   704                           
   705                           
   706 ;; *************** function _main *****************
   707 ;; Defined at:
   708 ;;		line 781 in file "1.C"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  2  1056[COMMON] int 
   715 ;; Registers used:
   716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : 17F/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: FFE00/0
   721 ;; Data sizes:     COMMON   BANK0   BANK1
   722 ;;      Params:         0       0       0
   723 ;;      Locals:         0       0       0
   724 ;;      Temps:          0       0       0
   725 ;;      Totals:         0       0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels required when called:    7
   728 ;; This function calls:
   729 ;;		_OSC_INIT
   730 ;;		_TIMER0_INITIAL
   731 ;;		_TIMER2_INITIAL
   732 ;;		_INT_INITIAL
   733 ;;		_EEPROM_Read
   734 ;;		_WDT_INITIAL
   735 ;;		_EX_INT_FallingEdge
   736 ;; This function is called by:
   737 ;;		Startup code after reset
   738 ;; This function uses a non-reentrant model
   739 ;;
   740  067A                     _main:	
   741                           
   742                           ;1.C: 782: OSC_INIT();
   743                           
   744                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   745  067A  2648               	fcall	_OSC_INIT
   746                           
   747                           ;1.C: 783: TIMER0_INITIAL();
   748  067B  26C2               	fcall	_TIMER0_INITIAL
   749                           
   750                           ;1.C: 784: TIMER2_INITIAL();
   751  067C  26A1               	fcall	_TIMER2_INITIAL
   752                           
   753                           ;1.C: 785: INT_INITIAL();
   754  067D  26D6               	fcall	_INT_INITIAL
   755                           
   756                           ;1.C: 786: EEPROM_Read();
   757  067E  2546               	fcall	_EEPROM_Read
   758                           
   759                           ;1.C: 787: WDT_INITIAL();
   760  067F  26E3               	fcall	_WDT_INITIAL
   761                           
   762                           ;1.C: 788: PC0 = 1;
   763  0680  1407               	bsf	7,0
   764                           
   765                           ;1.C: 789: PA7 = 1;
   766  0681  1785               	bsf	5,7
   767                           
   768                           ;1.C: 790: PA6 = 1;
   769  0682  1705               	bsf	5,6
   770                           
   771                           ;1.C: 791: PA5 = 1;
   772  0683  1685               	bsf	5,5
   773                           
   774                           ;1.C: 793: PA3 = 0;
   775  0684  1185               	bcf	5,3
   776                           
   777                           ;1.C: 794: FLAGs &= ~0x08;
   778  0685  11F2               	bcf	_FLAGs,3
   779                           
   780                           ;1.C: 795: EX_INT_FallingEdge();
   781  0686  26E8               	fcall	_EX_INT_FallingEdge
   782                           
   783                           ;1.C: 796: INTE =1;
   784  0687  160B               	bsf	11,4
   785                           
   786                           ;1.C: 797: TMR2ON =1;
   787  0688  1283               	bcf	3,5	;RP0=0, select bank0
   788  0689  1512               	bsf	18,2
   789                           
   790                           ;1.C: 799: PEIE = 1;
   791  068A  170B               	bsf	11,6
   792                           
   793                           ;1.C: 800: GIE = 1;
   794  068B  178B               	bsf	11,7
   795  068C                     l3835:	
   796  068C  0064               	clrwdt	;#
   797  068D  2E8C               	goto	l3835
   798  068E                     __end_of_main:	
   799                           
   800                           	psect	text678
   801  0546                     __ptext678:	
   802 ;; =============== function _main ends ============
   803                           
   804                           
   805 ;; *************** function _EEPROM_Read *****************
   806 ;; Defined at:
   807 ;;		line 566 in file "1.C"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;		None               void
   814 ;; Registers used:
   815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : 17F/20
   818 ;;		On exit  : 17F/20
   819 ;;		Unchanged: FFE80/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1
   821 ;;      Params:         0       0       0
   822 ;;      Locals:         0       0       0
   823 ;;      Temps:          0       0       0
   824 ;;      Totals:         0       0       0
   825 ;;Total ram usage:        0 bytes
   826 ;; Hardware stack levels used:    1
   827 ;; Hardware stack levels required when called:    6
   828 ;; This function calls:
   829 ;;		_EEPROM_ReadWord
   830 ;;		_IAPRead
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835  0546                     _EEPROM_Read:	
   836                           
   837                           ; Regs used in _EEPROM_Read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   838  0546  302D               	movlw	_CH1_remotekey& (0+255)
   839                           
   840                           ;1.C: 567: EEPROM_ReadWord(&CH1_remotekey[0],0x00);
   841  0547  01B1               	clrf	?_EEPROM_ReadWord^(0+128)
   842  0548  24F7               	fcall	_EEPROM_ReadWord
   843                           
   844                           ;1.C: 568: EEPROM_ReadWord(&CH2_remotekey[0],0x04);
   845  0549  3004               	movlw	4
   846  054A  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   847  054B  303D               	movlw	_CH2_remotekey& (0+255)
   848  054C  24F7               	fcall	_EEPROM_ReadWord
   849                           
   850                           ;1.C: 569: EEPROM_ReadWord(&CH3_remotekey[0],0x08);
   851  054D  3008               	movlw	8
   852  054E  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   853  054F  304D               	movlw	_CH3_remotekey& (0+255)
   854  0550  24F7               	fcall	_EEPROM_ReadWord
   855                           
   856                           ;1.C: 570: EEPROM_ReadWord(&CH1_remotekey[1],0x0C);
   857  0551  300C               	movlw	12
   858  0552  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   859  0553  3031               	movlw	(_CH1_remotekey+4)& (0+255)
   860  0554  24F7               	fcall	_EEPROM_ReadWord
   861                           
   862                           ;1.C: 571: EEPROM_ReadWord(&CH2_remotekey[1],0x10);
   863  0555  3010               	movlw	16
   864  0556  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   865  0557  3041               	movlw	(_CH2_remotekey+4)& (0+255)
   866  0558  24F7               	fcall	_EEPROM_ReadWord
   867                           
   868                           ;1.C: 572: EEPROM_ReadWord(&CH3_remotekey[1],0x14);
   869  0559  3014               	movlw	20
   870  055A  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   871  055B  3051               	movlw	(_CH3_remotekey+4)& (0+255)
   872  055C  24F7               	fcall	_EEPROM_ReadWord
   873                           
   874                           ;1.C: 573: EEPROM_ReadWord(&CH1_remotekey[2],0x18);
   875  055D  3018               	movlw	24
   876  055E  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   877  055F  3035               	movlw	(_CH1_remotekey+8)& (0+255)
   878  0560  24F7               	fcall	_EEPROM_ReadWord
   879                           
   880                           ;1.C: 574: EEPROM_ReadWord(&CH2_remotekey[2],0x1C);
   881  0561  301C               	movlw	28
   882  0562  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   883  0563  3045               	movlw	(_CH2_remotekey+8)& (0+255)
   884  0564  24F7               	fcall	_EEPROM_ReadWord
   885                           
   886                           ;1.C: 575: EEPROM_ReadWord(&CH3_remotekey[2],0x20);
   887  0565  3020               	movlw	32
   888  0566  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   889  0567  3055               	movlw	(_CH3_remotekey+8)& (0+255)
   890  0568  24F7               	fcall	_EEPROM_ReadWord
   891                           
   892                           ;1.C: 576: EEPROM_ReadWord(&CH1_remotekey[3],0x24);
   893  0569  3024               	movlw	36
   894  056A  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   895  056B  3039               	movlw	(_CH1_remotekey+12)& (0+255)
   896  056C  24F7               	fcall	_EEPROM_ReadWord
   897                           
   898                           ;1.C: 577: EEPROM_ReadWord(&CH2_remotekey[3],0x28);
   899  056D  3028               	movlw	40
   900  056E  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   901  056F  3049               	movlw	(_CH2_remotekey+12)& (0+255)
   902  0570  24F7               	fcall	_EEPROM_ReadWord
   903                           
   904                           ;1.C: 578: EEPROM_ReadWord(&CH3_remotekey[3],0x2C);
   905  0571  302C               	movlw	44
   906  0572  00B1               	movwf	?_EEPROM_ReadWord^(0+128)
   907  0573  3059               	movlw	(_CH3_remotekey+12)& (0+255)
   908  0574  24F7               	fcall	_EEPROM_ReadWord
   909                           
   910                           ;1.C: 579: CH1_remotekey_Latest = CH1_remotekey_num = IAPRead(0x30);
   911  0575  3030               	movlw	48
   912  0576  26DD               	fcall	_IAPRead
   913  0577  1283               	bcf	3,5	;RP0=0, select bank0
   914  0578  00E7               	movwf	_CH1_remotekey_num
   915  0579  1683               	bsf	3,5	;RP0=1, select bank1
   916  057A  00B7               	movwf	_CH1_remotekey_Latest^(0+128)
   917                           
   918                           ;1.C: 580: CH2_remotekey_Latest = CH2_remotekey_num = IAPRead(0x31);
   919  057B  3031               	movlw	49
   920  057C  26DD               	fcall	_IAPRead
   921  057D  1283               	bcf	3,5	;RP0=0, select bank0
   922  057E  00E8               	movwf	_CH2_remotekey_num
   923  057F  1683               	bsf	3,5	;RP0=1, select bank1
   924  0580  00B8               	movwf	_CH2_remotekey_Latest^(0+128)
   925                           
   926                           ;1.C: 581: CH3_remotekey_Latest = CH3_remotekey_num = IAPRead(0x32);
   927  0581  3032               	movlw	50
   928  0582  26DD               	fcall	_IAPRead
   929  0583  1283               	bcf	3,5	;RP0=0, select bank0
   930  0584  00E9               	movwf	_CH3_remotekey_num
   931  0585  1683               	bsf	3,5	;RP0=1, select bank1
   932  0586  00B9               	movwf	_CH3_remotekey_Latest^(0+128)
   933  0587  0008               	return
   934  0588                     __end_of_EEPROM_Read:	
   935                           
   936                           	psect	text679
   937  04F7                     __ptext679:	
   938 ;; =============== function _EEPROM_Read ends ============
   939                           
   940                           
   941 ;; *************** function _EEPROM_ReadWord *****************
   942 ;; Defined at:
   943 ;;		line 555 in file "1.C"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  buff            1    wreg     PTR unsigned long 
   946 ;;		 -> CH3_remotekey(16), CH2_remotekey(16), CH1_remotekey(16), 
   947 ;;  data            1    2[BANK1 ] unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  buff            1    7[BANK1 ] PTR unsigned long 
   950 ;;		 -> CH3_remotekey(16), CH2_remotekey(16), CH1_remotekey(16), 
   951 ;; Return value:  Size  Location     Type
   952 ;;		None               void
   953 ;; Registers used:
   954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 17F/20
   957 ;;		On exit  : 17F/20
   958 ;;		Unchanged: FFE80/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1
   960 ;;      Params:         0       0       1
   961 ;;      Locals:         0       0       1
   962 ;;      Temps:          0       0       4
   963 ;;      Totals:         0       0       6
   964 ;;Total ram usage:        6 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; Hardware stack levels required when called:    5
   967 ;; This function calls:
   968 ;;		_IAPRead
   969 ;; This function is called by:
   970 ;;		_EEPROM_Read
   971 ;; This function uses a non-reentrant model
   972 ;;
   973  04F7                     _EEPROM_ReadWord:	
   974                           
   975                           ; Regs used in _EEPROM_ReadWord: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   976                           ;EEPROM_ReadWord@buff stored from wreg
   977  04F7  00B6               	movwf	EEPROM_ReadWord@buff^(0+128)
   978                           
   979                           ;1.C: 556: *buff = 0;
   980  04F8  0084               	movwf	4
   981  04F9  0180               	clrf	0
   982  04FA  0A84               	incf	4,f
   983  04FB  0180               	clrf	0
   984  04FC  0A84               	incf	4,f
   985  04FD  0180               	clrf	0
   986  04FE  0A84               	incf	4,f
   987  04FF  0180               	clrf	0
   988                           
   989                           ;1.C: 557: EE_Buff = IAPRead(data+2);
   990  0500  0831               	movf	EEPROM_ReadWord@data^(0+128),w
   991  0501  3E02               	addlw	2
   992  0502  26DD               	fcall	_IAPRead
   993                           
   994                           ;1.C: 558: *buff |= EE_Buff;
   995  0503  2537               	fcall	PL5	;call to abstracted procedure
   996                           
   997                           ;1.C: 559: *buff = *buff<<8;
   998  0504  2511               	fcall	PL4	;call to abstracted procedure
   999                           
  1000                           ;1.C: 560: EE_Buff = IAPRead(data+1);
  1001  0505  0A31               	incf	EEPROM_ReadWord@data^(0+128),w
  1002  0506  26DD               	fcall	_IAPRead
  1003                           
  1004                           ;1.C: 561: *buff |= EE_Buff;
  1005  0507  2537               	fcall	PL5	;call to abstracted procedure
  1006                           
  1007                           ;1.C: 562: *buff = *buff<<8;
  1008  0508  2511               	fcall	PL4	;call to abstracted procedure
  1009                           
  1010                           ;1.C: 563: EE_Buff = IAPRead(data);
  1011  0509  0831               	movf	EEPROM_ReadWord@data^(0+128),w
  1012  050A  26DD               	fcall	_IAPRead
  1013                           
  1014                           ;1.C: 564: *buff |= EE_Buff;
  1015  050B  2537               	fcall	PL5	;call to abstracted procedure
  1016  050C  0480               	iorwf	0,f
  1017  050D  0A84               	incf	4,f
  1018  050E  0835               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1019  050F  0480               	iorwf	0,f
  1020  0510  0008               	return
  1021  0511                     __end_of_EEPROM_ReadWord:	
  1022  0511                     PL4:	
  1023  0511  0480               	iorwf	0,f
  1024  0512  0A84               	incf	4,f
  1025  0513  0835               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1026  0514  0480               	iorwf	0,f
  1027  0515  0836               	movf	EEPROM_ReadWord@buff^(0+128),w
  1028  0516  0084               	movwf	4
  1029  0517  0800               	movf	0,w
  1030  0518  00B2               	movwf	??_EEPROM_ReadWord^(0+128)
  1031  0519  0A84               	incf	4,f
  1032  051A  0800               	movf	0,w
  1033  051B  00B3               	movwf	(??_EEPROM_ReadWord^(0+128)+1)
  1034  051C  0A84               	incf	4,f
  1035  051D  0800               	movf	0,w
  1036  051E  00B4               	movwf	(??_EEPROM_ReadWord^(0+128)+2)
  1037  051F  0A84               	incf	4,f
  1038  0520  0800               	movf	0,w
  1039  0521  00B5               	movwf	(??_EEPROM_ReadWord^(0+128)+3)
  1040  0522  0834               	movf	(??_EEPROM_ReadWord^(0+128)+2),w
  1041  0523  00B5               	movwf	(??_EEPROM_ReadWord^(0+128)+3)
  1042  0524  0833               	movf	(??_EEPROM_ReadWord^(0+128)+1),w
  1043  0525  00B4               	movwf	(??_EEPROM_ReadWord^(0+128)+2)
  1044  0526  0832               	movf	??_EEPROM_ReadWord^(0+128),w
  1045  0527  00B3               	movwf	(??_EEPROM_ReadWord^(0+128)+1)
  1046  0528  01B2               	clrf	??_EEPROM_ReadWord^(0+128)
  1047  0529  0836               	movf	EEPROM_ReadWord@buff^(0+128),w
  1048  052A  0084               	movwf	4
  1049  052B  0832               	movf	??_EEPROM_ReadWord^(0+128),w
  1050  052C  0080               	movwf	0
  1051  052D  0A84               	incf	4,f
  1052  052E  0833               	movf	(??_EEPROM_ReadWord+1)^(0+128),w
  1053  052F  0080               	movwf	0
  1054  0530  0A84               	incf	4,f
  1055  0531  0834               	movf	(??_EEPROM_ReadWord+2)^(0+128),w
  1056  0532  0080               	movwf	0
  1057  0533  0A84               	incf	4,f
  1058  0534  0835               	movf	(??_EEPROM_ReadWord+3)^(0+128),w
  1059  0535  0080               	movwf	0
  1060  0536  0008               	return
  1061  0537                     PL5:	
  1062  0537  00BA               	movwf	_EE_Buff^(0+128)
  1063  0538  00B2               	movwf	??_EEPROM_ReadWord^(0+128)
  1064  0539  01B3               	clrf	(??_EEPROM_ReadWord^(0+128)+1)
  1065  053A  01B4               	clrf	(??_EEPROM_ReadWord^(0+128)+2)
  1066  053B  01B5               	clrf	(??_EEPROM_ReadWord^(0+128)+3)
  1067  053C  0836               	movf	EEPROM_ReadWord@buff^(0+128),w
  1068  053D  0084               	movwf	4
  1069  053E  0832               	movf	??_EEPROM_ReadWord^(0+128),w
  1070  053F  0480               	iorwf	0,f
  1071  0540  0A84               	incf	4,f
  1072  0541  0833               	movf	(??_EEPROM_ReadWord+1)^(0+128),w
  1073  0542  0480               	iorwf	0,f
  1074  0543  0A84               	incf	4,f
  1075  0544  0834               	movf	(??_EEPROM_ReadWord+2)^(0+128),w
  1076  0545  0008               	return
  1077                           
  1078                           	psect	text680
  1079  06D6                     __ptext680:	
  1080 ;; =============== function _EEPROM_ReadWord ends ============
  1081                           
  1082                           
  1083 ;; *************** function _INT_INITIAL *****************
  1084 ;; Defined at:
  1085 ;;		line 402 in file "1.C"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;		None               void
  1092 ;; Registers used:
  1093 ;;		status,2, status,0, pclath, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 17F/0
  1096 ;;		On exit  : 17F/20
  1097 ;;		Unchanged: FFE80/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1
  1099 ;;      Params:         0       0       0
  1100 ;;      Locals:         0       0       0
  1101 ;;      Temps:          0       0       0
  1102 ;;      Totals:         0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    5
  1106 ;; This function calls:
  1107 ;;		_EX_INT_FallingEdge
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112  06D6                     _INT_INITIAL:	
  1113                           
  1114                           ;1.C: 403: TRISA2 =1;
  1115                           
  1116                           ; Regs used in _INT_INITIAL: [status,2+status,0+pclath+cstack]
  1117  06D6  1683               	bsf	3,5	;RP0=1, select bank1
  1118  06D7  1505               	bsf	5,2
  1119                           
  1120                           ;1.C: 404: IOCA2 =0;
  1121  06D8  1116               	bcf	22,2
  1122                           
  1123                           ;1.C: 405: EX_INT_FallingEdge();
  1124  06D9  26E8               	fcall	_EX_INT_FallingEdge
  1125                           
  1126                           ;1.C: 406: INTF =0;
  1127  06DA  108B               	bcf	11,1
  1128                           
  1129                           ;1.C: 408: INTE =0;
  1130  06DB  120B               	bcf	11,4
  1131  06DC  0008               	return
  1132  06DD                     __end_of_INT_INITIAL:	
  1133                           
  1134                           	psect	text681
  1135  06DD                     __ptext681:	
  1136 ;; =============== function _INT_INITIAL ends ============
  1137                           
  1138                           
  1139 ;; *************** function _IAPRead *****************
  1140 ;; Defined at:
  1141 ;;		line 480 in file "1.C"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  EEAddr          1    wreg     unsigned char 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  EEAddr          1    0[BANK1 ] unsigned char 
  1146 ;;  ReEEPROMread    1    1[BANK1 ] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      unsigned char 
  1149 ;; Registers used:
  1150 ;;		wreg
  1151 ;; Tracked objects:
  1152 ;;		On entry : 17F/20
  1153 ;;		On exit  : 17F/20
  1154 ;;		Unchanged: FFE80/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1
  1156 ;;      Params:         0       0       0
  1157 ;;      Locals:         0       0       2
  1158 ;;      Temps:          0       0       0
  1159 ;;      Totals:         0       0       2
  1160 ;;Total ram usage:        2 bytes
  1161 ;; Hardware stack levels used:    1
  1162 ;; Hardware stack levels required when called:    4
  1163 ;; This function calls:
  1164 ;;		Nothing
  1165 ;; This function is called by:
  1166 ;;		_EEPROM_ReadWord
  1167 ;;		_EEPROM_Read
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170  06DD                     _IAPRead:	
  1171                           
  1172                           ; Regs used in _IAPRead: [wreg]
  1173                           ;IAPRead@EEAddr stored from wreg
  1174  06DD  00AF               	movwf	IAPRead@EEAddr^(0+128)
  1175                           
  1176                           ;1.C: 481: unsigned char ReEEPROMread;
  1177                           ;1.C: 482: EEADR = EEAddr;
  1178  06DE  009B               	movwf	27	;volatile
  1179                           
  1180                           ;1.C: 483: RD = 1;
  1181  06DF  141C               	bsf	28,0
  1182                           
  1183                           ;1.C: 484: ReEEPROMread = EEDAT;
  1184  06E0  081A               	movf	26,w	;volatile
  1185  06E1  00B0               	movwf	IAPRead@ReEEPROMread^(0+128)
  1186                           
  1187                           ;1.C: 485: return ReEEPROMread;
  1188  06E2  0008               	return
  1189  06E3                     __end_of_IAPRead:	
  1190                           
  1191                           	psect	text682
  1192  06A1                     __ptext682:	
  1193 ;; =============== function _IAPRead ends ============
  1194                           
  1195                           
  1196 ;; *************** function _TIMER2_INITIAL *****************
  1197 ;; Defined at:
  1198 ;;		line 456 in file "1.C"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;		None               void
  1205 ;; Registers used:
  1206 ;;		wreg, status,2
  1207 ;; Tracked objects:
  1208 ;;		On entry : 17F/0
  1209 ;;		On exit  : 17F/0
  1210 ;;		Unchanged: FFE80/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1
  1212 ;;      Params:         0       0       0
  1213 ;;      Locals:         0       0       0
  1214 ;;      Temps:          0       0       0
  1215 ;;      Totals:         0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    4
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225  06A1                     _TIMER2_INITIAL:	
  1226                           
  1227                           ;1.C: 457: T2CON0 = 0B00000001;
  1228                           
  1229                           ; Regs used in _TIMER2_INITIAL: [wreg+status,2]
  1230  06A1  3001               	movlw	1
  1231  06A2  0092               	movwf	18	;volatile
  1232                           
  1233                           ;1.C: 463: T2CON1 = 0B00000000;
  1234  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  1235  06A4  019E               	clrf	30	;volatile
  1236                           
  1237                           ;1.C: 468: TMR2H = (53)/256;
  1238  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  1239  06A6  0193               	clrf	19	;volatile
  1240                           
  1241                           ;1.C: 469: TMR2L = (53)%256;
  1242  06A7  3035               	movlw	53
  1243  06A8  0091               	movwf	17	;volatile
  1244                           
  1245                           ;1.C: 472: PR2H = (53)/256;
  1246  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  1247  06AA  0192               	clrf	18	;volatile
  1248                           
  1249                           ;1.C: 473: PR2L = (53)%256;
  1250  06AB  0091               	movwf	17	;volatile
  1251                           
  1252                           ;1.C: 475: TMR2IF = 0;
  1253  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1254  06AD  108C               	bcf	12,1
  1255                           
  1256                           ;1.C: 476: TMR2IE = 1;
  1257  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  1258  06AF  148C               	bsf	12,1
  1259                           
  1260                           ;1.C: 478: TMR2ON =0;
  1261  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1262  06B1  1112               	bcf	18,2
  1263  06B2  0008               	return
  1264  06B3                     __end_of_TIMER2_INITIAL:	
  1265                           
  1266                           	psect	text683
  1267  06C2                     __ptext683:	
  1268 ;; =============== function _TIMER2_INITIAL ends ============
  1269                           
  1270                           
  1271 ;; *************** function _TIMER0_INITIAL *****************
  1272 ;; Defined at:
  1273 ;;		line 446 in file "1.C"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;		None               void
  1280 ;; Registers used:
  1281 ;;		wreg, status,2, status,0
  1282 ;; Tracked objects:
  1283 ;;		On entry : 17F/20
  1284 ;;		On exit  : 17F/0
  1285 ;;		Unchanged: FFE80/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1
  1287 ;;      Params:         0       0       0
  1288 ;;      Locals:         0       0       0
  1289 ;;      Temps:          0       0       0
  1290 ;;      Totals:         0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    4
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300  06C2                     _TIMER0_INITIAL:	
  1301  06C2  30F8               	movlw	248
  1302                           
  1303                           ;1.C: 447: T0CS = 0;
  1304                           
  1305                           ; Regs used in _TIMER0_INITIAL: [wreg+status,2+status,0]
  1306  06C3  1281               	bcf	1,5
  1307                           
  1308                           ;1.C: 448: PSA = 0;
  1309  06C4  1181               	bcf	1,3
  1310                           
  1311                           ;1.C: 449: OPTION &= 0xF8;
  1312  06C5  0581               	andwf	1,f	;volatile
  1313                           
  1314                           ;1.C: 450: OPTION |= 0x06;
  1315  06C6  3006               	movlw	6
  1316  06C7  0481               	iorwf	1,f	;volatile
  1317                           
  1318                           ;1.C: 452: TMR0 = 5;
  1319  06C8  3005               	movlw	5
  1320  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  1321  06CA  0081               	movwf	1	;volatile
  1322                           
  1323                           ;1.C: 453: T0IE = 1;
  1324  06CB  168B               	bsf	11,5
  1325                           
  1326                           ;1.C: 454: T0IF = 0;
  1327  06CC  110B               	bcf	11,2
  1328  06CD  0008               	return
  1329  06CE                     __end_of_TIMER0_INITIAL:	
  1330                           
  1331                           	psect	text684
  1332  06E3                     __ptext684:	
  1333 ;; =============== function _TIMER0_INITIAL ends ============
  1334                           
  1335                           
  1336 ;; *************** function _WDT_INITIAL *****************
  1337 ;; Defined at:
  1338 ;;		line 441 in file "1.C"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;		None               void
  1345 ;; Registers used:
  1346 ;;		wreg
  1347 ;; Tracked objects:
  1348 ;;		On entry : 17F/20
  1349 ;;		On exit  : 20/0
  1350 ;;		Unchanged: FFE00/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1
  1352 ;;      Params:         0       0       0
  1353 ;;      Locals:         0       0       0
  1354 ;;      Temps:          0       0       0
  1355 ;;      Totals:         0       0       0
  1356 ;;Total ram usage:        0 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    4
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_main
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365  06E3                     _WDT_INITIAL:	
  1366                           
  1367                           ; Regs used in _WDT_INITIAL: [wreg]
  1368  06E3  0064               	clrwdt	;#
  1369                           
  1370                           ;1.C: 443: WDTCON = 0B00010110;
  1371  06E4  3016               	movlw	22
  1372  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1373  06E6  0098               	movwf	24	;volatile
  1374  06E7  0008               	return
  1375  06E8                     __end_of_WDT_INITIAL:	
  1376                           
  1377                           	psect	text685
  1378  0648                     __ptext685:	
  1379 ;; =============== function _WDT_INITIAL ends ============
  1380                           
  1381                           
  1382 ;; *************** function _OSC_INIT *****************
  1383 ;; Defined at:
  1384 ;;		line 418 in file "1.C"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;		None               void
  1391 ;; Registers used:
  1392 ;;		wreg, status,2
  1393 ;; Tracked objects:
  1394 ;;		On entry : 17F/0
  1395 ;;		On exit  : 17F/20
  1396 ;;		Unchanged: FFE80/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1
  1398 ;;      Params:         0       0       0
  1399 ;;      Locals:         0       0       0
  1400 ;;      Temps:          0       0       0
  1401 ;;      Totals:         0       0       0
  1402 ;;Total ram usage:        0 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    4
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_main
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411  0648                     _OSC_INIT:	
  1412                           
  1413                           ;1.C: 419: OSCCON = 0B01100001;
  1414                           
  1415                           ; Regs used in _OSC_INIT: [wreg+status,2]
  1416  0648  3061               	movlw	97
  1417  0649  1683               	bsf	3,5	;RP0=1, select bank1
  1418  064A  008F               	movwf	15	;volatile
  1419                           
  1420                           ;1.C: 424: INTCON = 0;
  1421  064B  018B               	clrf	11	;volatile
  1422                           
  1423                           ;1.C: 426: PORTA = 0B00000000;
  1424  064C  1283               	bcf	3,5	;RP0=0, select bank0
  1425  064D  0185               	clrf	5	;volatile
  1426                           
  1427                           ;1.C: 427: TRISA = 0B00010111;
  1428  064E  3017               	movlw	23
  1429  064F  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0650  0085               	movwf	5	;volatile
  1431                           
  1432                           ;1.C: 428: WPUA = 0B00000000;
  1433  0651  0195               	clrf	21	;volatile
  1434                           
  1435                           ;1.C: 429: PSRCA = 0B11111111;
  1436  0652  30FF               	movlw	255
  1437  0653  0088               	movwf	8	;volatile
  1438                           
  1439                           ;1.C: 430: PSINKA = 0B11111111;
  1440  0654  0097               	movwf	23	;volatile
  1441                           
  1442                           ;1.C: 432: PORTC = 0B00000000;
  1443  0655  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0656  0187               	clrf	7	;volatile
  1445                           
  1446                           ;1.C: 433: TRISC = 0B11110000;
  1447  0657  30F0               	movlw	240
  1448  0658  1683               	bsf	3,5	;RP0=1, select bank1
  1449  0659  0087               	movwf	7	;volatile
  1450                           
  1451                           ;1.C: 434: WPUC = 0B00000000;
  1452  065A  0193               	clrf	19	;volatile
  1453                           
  1454                           ;1.C: 435: PSRCC = 0B11111111;
  1455  065B  30FF               	movlw	255
  1456  065C  0094               	movwf	20	;volatile
  1457                           
  1458                           ;1.C: 436: PSINKC = 0B11111111;
  1459  065D  009F               	movwf	31	;volatile
  1460                           
  1461                           ;1.C: 438: OPTION = 0B00001000;
  1462  065E  3008               	movlw	8
  1463  065F  0081               	movwf	1	;volatile
  1464  0660  0008               	return
  1465  0661                     __end_of_OSC_INIT:	
  1466                           
  1467                           	psect	text686
  1468  06E8                     __ptext686:	
  1469 ;; =============== function _OSC_INIT ends ============
  1470                           
  1471                           
  1472 ;; *************** function _EX_INT_FallingEdge *****************
  1473 ;; Defined at:
  1474 ;;		line 414 in file "1.C"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;		None               void
  1481 ;; Registers used:
  1482 ;;		None
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 20/20
  1486 ;;		Unchanged: FFFDF/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1
  1488 ;;      Params:         0       0       0
  1489 ;;      Locals:         0       0       0
  1490 ;;      Temps:          0       0       0
  1491 ;;      Totals:         0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    4
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_INT_INITIAL
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502  06E8                     _EX_INT_FallingEdge:	
  1503                           
  1504                           ;1.C: 415: INTEDG =0;
  1505                           
  1506                           ; Regs used in _EX_INT_FallingEdge: []
  1507  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  1508  06E9  1301               	bcf	1,6
  1509                           
  1510                           ;1.C: 416: FLAGs &= ~0x01;
  1511  06EA  1072               	bcf	_FLAGs,0
  1512  06EB  0008               	return
  1513  06EC                     __end_of_EX_INT_FallingEdge:	
  1514                           
  1515                           	psect	text687
  1516  0010                     __ptext687:	
  1517 ;; =============== function _EX_INT_FallingEdge ends ============
  1518                           
  1519                           
  1520 ;; *************** function _ISR *****************
  1521 ;; Defined at:
  1522 ;;		line 136 in file "1.C"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;		None
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;		None
  1527 ;; Return value:  Size  Location     Type
  1528 ;;		None               void
  1529 ;; Registers used:
  1530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 20/0
  1534 ;;		Unchanged: FFEDF/0
  1535 ;; Data sizes:     COMMON   BANK0   BANK1
  1536 ;;      Params:         0       0       0
  1537 ;;      Locals:         0       0       0
  1538 ;;      Temps:          0      10       0
  1539 ;;      Totals:         0      10       0
  1540 ;;Total ram usage:       10 bytes
  1541 ;; Hardware stack levels used:    1
  1542 ;; Hardware stack levels required when called:    3
  1543 ;; This function calls:
  1544 ;;		_EX_INT_RisingEdge
  1545 ;;		i1_EX_INT_FallingEdge
  1546 ;;		___wmul
  1547 ;;		_led1_debug
  1548 ;;		_KEYSCAN
  1549 ;;		_KEY
  1550 ;; This function is called by:
  1551 ;;		Interrupt level 1
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554  0010                     _ISR:	
  1555                           
  1556                           ;1.C: 138: if(INTE && INTF){
  1557  0010  1A0B               	btfsc	11,4
  1558  0011  1C8B               	btfss	11,1
  1559  0012  295B               	goto	i1l3107
  1560                           
  1561                           ;1.C: 139: INTF = 0;
  1562  0013  108B               	bcf	11,1
  1563                           
  1564                           ;1.C: 140: INTE = 0;
  1565  0014  120B               	bcf	11,4
  1566                           
  1567                           ;1.C: 141: TMR2ON =0;
  1568  0015  1112               	bcf	18,2
  1569                           
  1570                           ;1.C: 142: if((FLAGs&0x01) == 0){
  1571  0016  1872               	btfsc	_FLAGs,0
  1572  0017  281D               	goto	i1l858
  1573                           
  1574                           ;1.C: 143: Indata = 0;
  1575  0018  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0019  01AA               	clrf	_Indata^(0+128)
  1577  001A  01AB               	clrf	(_Indata+1)^(0+128)
  1578                           
  1579                           ;1.C: 144: EX_INT_RisingEdge();
  1580  001B  26F4               	fcall	_EX_INT_RisingEdge
  1581                           
  1582                           ;1.C: 145: }else if((FLAGs&0x01) == 0x01){
  1583  001C  2958               	goto	i1l3103
  1584  001D                     i1l858:	
  1585  001D  1C72               	btfss	_FLAGs,0
  1586  001E  2958               	goto	i1l3103
  1587                           
  1588                           ;1.C: 146: EX_INT_FallingEdge();
  1589  001F  26F0               	fcall	i1_EX_INT_FallingEdge
  1590                           
  1591                           ;1.C: 147: buff = Indata*53;
  1592  0020  082B               	movf	(_Indata+1)^(0+128),w
  1593  0021  00F7               	movwf	?___wmul+1
  1594  0022  082A               	movf	_Indata^(0+128),w
  1595  0023  22B1               	fcall	PL15	;call to abstracted procedure
  1596  0024  2661               	fcall	___wmul
  1597  0025  0877               	movf	?___wmul+1,w
  1598  0026  00F1               	movwf	_buff+1
  1599  0027  0876               	movf	?___wmul,w
  1600  0028  00F0               	movwf	_buff
  1601                           
  1602                           ;1.C: 148: Indata = 0;
  1603  0029  01AA               	clrf	_Indata^(0+128)
  1604  002A  01AB               	clrf	(_Indata+1)^(0+128)
  1605                           
  1606                           ;1.C: 150: if( ((FLAGs&0x10) == 0) &&
  1607                           ;1.C: 151: ((FLAGs&0x20) == 0) &&
  1608                           ;1.C: 152: ((FLAGs&0x40) == 0)
  1609                           ;1.C: 153: ){
  1610  002B  1E72               	btfss	_FLAGs,4
  1611  002C  1AF2               	btfsc	_FLAGs,5
  1612  002D  2945               	goto	i1l3083
  1613  002E  1F72               	btfss	_FLAGs,6
  1614                           
  1615                           ;1.C: 154: if((FLAGs&0x08) == 0x08){
  1616  002F  1DF2               	btfss	_FLAGs,3
  1617  0030  2945               	goto	i1l3083
  1618                           
  1619                           ;1.C: 155: if(num < 24){
  1620  0031  3018               	movlw	24
  1621  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1622  0033  022A               	subwf	_num,w
  1623  0034  1803               	skipnc
  1624  0035  2855               	goto	i1l3007
  1625                           
  1626                           ;1.C: 156: if((buff>200)&&(buff<600)){
  1627  0036  3000               	movlw	0
  1628  0037  22A1               	fcall	PL12	;call to abstracted procedure
  1629  0038  1C03               	skipc
  1630  0039  2844               	goto	L1
  1631  003A  0271               	subwf	_buff+1,w
  1632  003B  3058               	movlw	88
  1633  003C  1903               	skipnz
  1634  003D  0270               	subwf	_buff,w
  1635  003E  1803               	skipnc
  1636  003F  2843               	goto	i1l3001
  1637                           
  1638                           ;1.C: 157: remotekey = remotekey<<1;
  1639  0040  1003               	clrc
  1640  0041  22AB               	fcall	PL14	;call to abstracted procedure
  1641                           
  1642                           ;1.C: 158: remotekey |= 0x00000001;
  1643  0042  1424               	bsf	_remotekey^(0+128),0
  1644  0043                     i1l3001:	
  1645                           
  1646                           ;1.C: 159: }
  1647                           ;1.C: 160: if((buff>700)&&(buff<1800)){
  1648  0043  3002               	movlw	2
  1649  0044                     L1:	
  1650  0044  0271               	subwf	_buff+1,w
  1651  0045  30BD               	movlw	189
  1652  0046  1903               	skipnz
  1653  0047  0270               	subwf	_buff,w
  1654  0048  1C03               	skipc
  1655  0049  2853               	goto	i1l865
  1656  004A  3007               	movlw	7
  1657  004B  0271               	subwf	_buff+1,w
  1658  004C  3008               	movlw	8
  1659  004D  1903               	skipnz
  1660  004E  0270               	subwf	_buff,w
  1661  004F  1803               	skipnc
  1662  0050  2853               	goto	i1l865
  1663                           
  1664                           ;1.C: 161: remotekey = remotekey<<1;
  1665  0051  1003               	clrc
  1666  0052  22AB               	fcall	PL14	;call to abstracted procedure
  1667  0053                     i1l865:	
  1668                           
  1669                           ;1.C: 162: }
  1670                           ;1.C: 163: num++;
  1671  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0054  0AAA               	incf	_num,f
  1673  0055                     i1l3007:	
  1674                           
  1675                           ;1.C: 164: }
  1676                           ;1.C: 166: if(num >= 24){
  1677  0055  3018               	movlw	24
  1678  0056  022A               	subwf	_num,w
  1679  0057  1C03               	skipc
  1680  0058  2945               	goto	i1l3083
  1681                           
  1682                           ;1.C: 168: if(remotekey>0){
  1683  0059  1683               	bsf	3,5	;RP0=1, select bank1
  1684  005A  0827               	movf	(_remotekey+3)^(0+128),w
  1685  005B  0426               	iorwf	(_remotekey+2)^(0+128),w
  1686  005C  0425               	iorwf	(_remotekey+1)^(0+128),w
  1687  005D  0424               	iorwf	_remotekey^(0+128),w
  1688  005E  1903               	skipnz
  1689  005F  288C               	goto	i1l867
  1690                           
  1691                           ;1.C: 169: if(Match_remotekey == remotekey){
  1692  0060  0827               	movf	(_remotekey+3)^(0+128),w
  1693  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0062  0623               	xorwf	_Match_remotekey+3,w
  1695  0063  1D03               	skipz
  1696  0064  2875               	goto	u154_25
  1697  0065  1683               	bsf	3,5	;RP0=1, select bank1
  1698  0066  0826               	movf	(_remotekey+2)^(0+128),w
  1699  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0068  0622               	xorwf	_Match_remotekey+2,w
  1701  0069  1D03               	skipz
  1702  006A  2875               	goto	u154_25
  1703  006B  1683               	bsf	3,5	;RP0=1, select bank1
  1704  006C  0825               	movf	(_remotekey+1)^(0+128),w
  1705  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1706  006E  0621               	xorwf	_Match_remotekey+1,w
  1707  006F  1D03               	skipz
  1708  0070  2875               	goto	u154_25
  1709  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1710  0072  0824               	movf	_remotekey^(0+128),w
  1711  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1712  0074  0620               	xorwf	_Match_remotekey,w
  1713  0075                     u154_25:	
  1714  0075  1D03               	skipz
  1715  0076  2879               	goto	i1l3017
  1716                           
  1717                           ;1.C: 170: remotekey_Receive_num++;
  1718  0077  0AAB               	incf	_remotekey_Receive_num,f
  1719                           
  1720                           ;1.C: 171: match_slice = 0;
  1721  0078  01A8               	clrf	_match_slice
  1722  0079                     i1l3017:	
  1723                           
  1724                           ;1.C: 172: }
  1725                           ;1.C: 173: if(remotekey_Receive_num == 0) Match_remotekey = remotekey;
  1726  0079  08AB               	movf	_remotekey_Receive_num,f
  1727  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1728  007B  1D03               	skipz
  1729  007C  288D               	goto	L2
  1730  007D  0827               	movf	(_remotekey+3)^(0+128),w
  1731  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1732  007F  00A3               	movwf	_Match_remotekey+3
  1733  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1734  0081  0826               	movf	(_remotekey+2)^(0+128),w
  1735  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1736  0083  00A2               	movwf	_Match_remotekey+2
  1737  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1738  0085  0825               	movf	(_remotekey+1)^(0+128),w
  1739  0086  1283               	bcf	3,5	;RP0=0, select bank0
  1740  0087  00A1               	movwf	_Match_remotekey+1
  1741  0088  1683               	bsf	3,5	;RP0=1, select bank1
  1742  0089  0824               	movf	_remotekey^(0+128),w
  1743  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1744  008B  00A0               	movwf	_Match_remotekey
  1745  008C                     i1l867:	
  1746                           
  1747                           ;1.C: 174: }
  1748                           ;1.C: 176: Ctrl_remotekey = remotekey;
  1749  008C  1683               	bsf	3,5	;RP0=1, select bank1
  1750  008D                     L2:	
  1751  008D  0827               	movf	(_remotekey+3)^(0+128),w
  1752  008E  00A3               	movwf	(_Ctrl_remotekey+3)^(0+128)
  1753  008F  0826               	movf	(_remotekey+2)^(0+128),w
  1754  0090  00A2               	movwf	(_Ctrl_remotekey+2)^(0+128)
  1755  0091  0825               	movf	(_remotekey+1)^(0+128),w
  1756  0092  00A1               	movwf	(_Ctrl_remotekey+1)^(0+128)
  1757  0093  0824               	movf	_remotekey^(0+128),w
  1758  0094  00A0               	movwf	_Ctrl_remotekey^(0+128)
  1759                           
  1760                           ;1.C: 178: if( ((PRESSED&0x10) == 0) &&
  1761                           ;1.C: 179: ((PRESSED&0x20) == 0) &&
  1762                           ;1.C: 180: ((PRESSED&0x40) == 0)
  1763                           ;1.C: 181: ){
  1764  0095  1E75               	btfss	_PRESSED,4
  1765  0096  1AF5               	btfsc	_PRESSED,5
  1766  0097  293C               	goto	i1l870
  1767  0098  1B75               	btfsc	_PRESSED,6
  1768  0099  293C               	goto	i1l870
  1769                           
  1770                           ;1.C: 182: if((FLAGs&0x10) == 0){
  1771  009A  1A72               	btfsc	_FLAGs,4
  1772  009B  28D0               	goto	i1l871
  1773                           
  1774                           ;1.C: 183: for(buff=0;buff<CH1_remotekey_num;buff++){
  1775  009C  01F0               	clrf	_buff
  1776  009D  01F1               	clrf	_buff+1
  1777  009E                     i1l3043:	
  1778  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1779  009F  0867               	movf	_CH1_remotekey_num,w
  1780  00A0  00DD               	movwf	??_ISR
  1781  00A1  01DE               	clrf	??_ISR+1
  1782  00A2  085E               	movf	??_ISR+1,w
  1783  00A3  0271               	subwf	_buff+1,w
  1784  00A4  1D03               	skipz
  1785  00A5  28A8               	goto	u161_25
  1786  00A6  085D               	movf	??_ISR,w
  1787  00A7  0270               	subwf	_buff,w
  1788  00A8                     u161_25:	
  1789  00A8  1803               	btfsc	3,0
  1790  00A9  28D0               	goto	i1l871
  1791                           
  1792                           ;1.C: 184: if(Ctrl_remotekey == CH1_remotekey[buff]){
  1793  00AA  0870               	movf	_buff,w
  1794  00AB  2282               	fcall	PL7	;call to abstracted procedure
  1795  00AC  3E2D               	addlw	_CH1_remotekey& (0+255)
  1796  00AD  2266               	fcall	PL2	;call to abstracted procedure
  1797  00AE  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1798  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1799  00B0  0661               	xorwf	??_ISR+4,w
  1800  00B1  1D03               	skipz
  1801  00B2  28C3               	goto	u160_25
  1802  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1803  00B4  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1804  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1805  00B6  0660               	xorwf	??_ISR+3,w
  1806  00B7  1D03               	skipz
  1807  00B8  28C3               	goto	u160_25
  1808  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1809  00BA  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1810  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1811  00BC  065F               	xorwf	??_ISR+2,w
  1812  00BD  1D03               	skipz
  1813  00BE  28C3               	goto	u160_25
  1814  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1815  00C0  0820               	movf	_Ctrl_remotekey^(0+128),w
  1816  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1817  00C2  065E               	xorwf	??_ISR+1,w
  1818  00C3                     u160_25:	
  1819  00C3  1D03               	skipz
  1820  00C4  28CC               	goto	i1l3041
  1821                           
  1822                           ;1.C: 185: FLAGs |= 0x10;
  1823  00C5  1672               	bsf	_FLAGs,4
  1824                           
  1825                           ;1.C: 186: led1_debug();
  1826  00C6  26F7               	fcall	_led1_debug
  1827                           
  1828                           ;1.C: 187: PA7 = ~PA7;
  1829  00C7  3080               	movlw	128
  1830  00C8  0685               	xorwf	5,f
  1831                           
  1832                           ;1.C: 188: CH1_remotekey_Latest = buff;
  1833  00C9  0870               	movf	_buff,w
  1834  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1835  00CB  00B7               	movwf	_CH1_remotekey_Latest^(0+128)
  1836  00CC                     i1l3041:	
  1837  00CC  0AF0               	incf	_buff,f
  1838  00CD  1903               	skipnz
  1839  00CE  0AF1               	incf	_buff+1,f
  1840  00CF  289E               	goto	i1l3043
  1841  00D0                     i1l871:	
  1842                           
  1843                           ;1.C: 189: }
  1844                           ;1.C: 190: }
  1845                           ;1.C: 191: }
  1846                           ;1.C: 192: if((FLAGs&0x20) == 0){
  1847  00D0  1AF2               	btfsc	_FLAGs,5
  1848  00D1  2906               	goto	i1l876
  1849                           
  1850                           ;1.C: 193: for(buff=0;buff<CH2_remotekey_num;buff++){
  1851  00D2  01F0               	clrf	_buff
  1852  00D3  01F1               	clrf	_buff+1
  1853  00D4                     i1l3059:	
  1854  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1855  00D5  0868               	movf	_CH2_remotekey_num,w
  1856  00D6  00DD               	movwf	??_ISR
  1857  00D7  01DE               	clrf	??_ISR+1
  1858  00D8  085E               	movf	??_ISR+1,w
  1859  00D9  0271               	subwf	_buff+1,w
  1860  00DA  1D03               	skipz
  1861  00DB  28DE               	goto	u164_25
  1862  00DC  085D               	movf	??_ISR,w
  1863  00DD  0270               	subwf	_buff,w
  1864  00DE                     u164_25:	
  1865  00DE  1803               	btfsc	3,0
  1866  00DF  2906               	goto	i1l876
  1867                           
  1868                           ;1.C: 194: if(Ctrl_remotekey == CH2_remotekey[buff]){
  1869  00E0  0870               	movf	_buff,w
  1870  00E1  2282               	fcall	PL7	;call to abstracted procedure
  1871  00E2  3E3D               	addlw	_CH2_remotekey& (0+255)
  1872  00E3  2266               	fcall	PL2	;call to abstracted procedure
  1873  00E4  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1874  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1875  00E6  0661               	xorwf	??_ISR+4,w
  1876  00E7  1D03               	skipz
  1877  00E8  28F9               	goto	u163_25
  1878  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  1879  00EA  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1880  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1881  00EC  0660               	xorwf	??_ISR+3,w
  1882  00ED  1D03               	skipz
  1883  00EE  28F9               	goto	u163_25
  1884  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1885  00F0  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1886  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1887  00F2  065F               	xorwf	??_ISR+2,w
  1888  00F3  1D03               	skipz
  1889  00F4  28F9               	goto	u163_25
  1890  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1891  00F6  0820               	movf	_Ctrl_remotekey^(0+128),w
  1892  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1893  00F8  065E               	xorwf	??_ISR+1,w
  1894  00F9                     u163_25:	
  1895  00F9  1D03               	skipz
  1896  00FA  2902               	goto	i1l3057
  1897                           
  1898                           ;1.C: 195: FLAGs |= 0x20;
  1899  00FB  16F2               	bsf	_FLAGs,5
  1900                           
  1901                           ;1.C: 196: led1_debug();
  1902  00FC  26F7               	fcall	_led1_debug
  1903                           
  1904                           ;1.C: 197: PA6 = ~PA6;
  1905  00FD  3040               	movlw	64
  1906  00FE  0685               	xorwf	5,f
  1907                           
  1908                           ;1.C: 198: CH2_remotekey_Latest = buff;
  1909  00FF  0870               	movf	_buff,w
  1910  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0101  00B8               	movwf	_CH2_remotekey_Latest^(0+128)
  1912  0102                     i1l3057:	
  1913  0102  0AF0               	incf	_buff,f
  1914  0103  1903               	skipnz
  1915  0104  0AF1               	incf	_buff+1,f
  1916  0105  28D4               	goto	i1l3059
  1917  0106                     i1l876:	
  1918                           
  1919                           ;1.C: 199: }
  1920                           ;1.C: 200: }
  1921                           ;1.C: 201: }
  1922                           ;1.C: 202: if((FLAGs&0x40) == 0){
  1923  0106  1B72               	btfsc	_FLAGs,6
  1924  0107  293C               	goto	i1l870
  1925                           
  1926                           ;1.C: 203: for(buff=0;buff<CH3_remotekey_num;buff++){
  1927  0108  01F0               	clrf	_buff
  1928  0109  01F1               	clrf	_buff+1
  1929  010A                     i1l3075:	
  1930  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1931  010B  0869               	movf	_CH3_remotekey_num,w
  1932  010C  00DD               	movwf	??_ISR
  1933  010D  01DE               	clrf	??_ISR+1
  1934  010E  085E               	movf	??_ISR+1,w
  1935  010F  0271               	subwf	_buff+1,w
  1936  0110  1D03               	skipz
  1937  0111  2914               	goto	u167_25
  1938  0112  085D               	movf	??_ISR,w
  1939  0113  0270               	subwf	_buff,w
  1940  0114                     u167_25:	
  1941  0114  1803               	btfsc	3,0
  1942  0115  293C               	goto	i1l870
  1943                           
  1944                           ;1.C: 204: if(Ctrl_remotekey == CH3_remotekey[buff]){
  1945  0116  0870               	movf	_buff,w
  1946  0117  2282               	fcall	PL7	;call to abstracted procedure
  1947  0118  3E4D               	addlw	_CH3_remotekey& (0+255)
  1948  0119  2266               	fcall	PL2	;call to abstracted procedure
  1949  011A  0823               	movf	(_Ctrl_remotekey+3)^(0+128),w
  1950  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1951  011C  0661               	xorwf	??_ISR+4,w
  1952  011D  1D03               	skipz
  1953  011E  292F               	goto	u166_25
  1954  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1955  0120  0822               	movf	(_Ctrl_remotekey+2)^(0+128),w
  1956  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0122  0660               	xorwf	??_ISR+3,w
  1958  0123  1D03               	skipz
  1959  0124  292F               	goto	u166_25
  1960  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1961  0126  0821               	movf	(_Ctrl_remotekey+1)^(0+128),w
  1962  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0128  065F               	xorwf	??_ISR+2,w
  1964  0129  1D03               	skipz
  1965  012A  292F               	goto	u166_25
  1966  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1967  012C  0820               	movf	_Ctrl_remotekey^(0+128),w
  1968  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1969  012E  065E               	xorwf	??_ISR+1,w
  1970  012F                     u166_25:	
  1971  012F  1D03               	skipz
  1972  0130  2938               	goto	i1l3073
  1973                           
  1974                           ;1.C: 205: FLAGs |= 0x40;
  1975  0131  1772               	bsf	_FLAGs,6
  1976                           
  1977                           ;1.C: 206: led1_debug();
  1978  0132  26F7               	fcall	_led1_debug
  1979                           
  1980                           ;1.C: 207: PA5 = ~PA5;
  1981  0133  3020               	movlw	32
  1982  0134  0685               	xorwf	5,f
  1983                           
  1984                           ;1.C: 208: CH3_remotekey_Latest = buff;
  1985  0135  0870               	movf	_buff,w
  1986  0136  1683               	bsf	3,5	;RP0=1, select bank1
  1987  0137  00B9               	movwf	_CH3_remotekey_Latest^(0+128)
  1988  0138                     i1l3073:	
  1989  0138  0AF0               	incf	_buff,f
  1990  0139  1903               	skipnz
  1991  013A  0AF1               	incf	_buff+1,f
  1992  013B  290A               	goto	i1l3075
  1993  013C                     i1l870:	
  1994                           
  1995                           ;1.C: 209: }
  1996                           ;1.C: 210: }
  1997                           ;1.C: 211: }
  1998                           ;1.C: 212: }
  1999                           ;1.C: 213: FLAGs &= ~0x08;
  2000  013C  11F2               	bcf	_FLAGs,3
  2001                           
  2002                           ;1.C: 214: Indata = 0;
  2003  013D  1683               	bsf	3,5	;RP0=1, select bank1
  2004  013E  01AA               	clrf	_Indata^(0+128)
  2005  013F  01AB               	clrf	(_Indata+1)^(0+128)
  2006                           
  2007                           ;1.C: 215: num = 0;
  2008                           
  2009                           ;1.C: 216: remotekey = 0;
  2010  0140  2299               	fcall	PL11	;call to abstracted procedure
  2011                           
  2012                           ;1.C: 217: Ctrl_remotekey = 0;
  2013  0141  01A0               	clrf	_Ctrl_remotekey^(0+128)
  2014  0142  01A1               	clrf	(_Ctrl_remotekey+1)^(0+128)
  2015  0143  01A2               	clrf	(_Ctrl_remotekey+2)^(0+128)
  2016  0144  01A3               	clrf	(_Ctrl_remotekey+3)^(0+128)
  2017  0145                     i1l3083:	
  2018                           
  2019                           ;1.C: 218: }
  2020                           ;1.C: 219: }
  2021                           ;1.C: 220: }
  2022                           ;1.C: 221: if((FLAGs&0x08) == 0){
  2023  0145  19F2               	btfsc	_FLAGs,3
  2024  0146  2958               	goto	i1l3103
  2025                           
  2026                           ;1.C: 222: if(buff > 7000){
  2027  0147  301B               	movlw	27
  2028  0148  0271               	subwf	_buff+1,w
  2029  0149  3059               	movlw	89
  2030  014A  1903               	skipnz
  2031  014B  0270               	subwf	_buff,w
  2032  014C  1C03               	skipc
  2033  014D  2958               	goto	i1l3103
  2034                           
  2035                           ;1.C: 223: FLAGs |= 0x08;
  2036  014E  15F2               	bsf	_FLAGs,3
  2037                           
  2038                           ;1.C: 224: num = 0;
  2039                           
  2040                           ;1.C: 225: remotekey = 0;
  2041  014F  2299               	fcall	PL11	;call to abstracted procedure
  2042                           
  2043                           ;1.C: 227: if( ((FLAGs&0x10) == 0x10) ||
  2044                           ;1.C: 228: ((FLAGs&0x20) == 0x20) ||
  2045                           ;1.C: 229: ((FLAGs&0x40) == 0x40)
  2046                           ;1.C: 230: ){
  2047  0150  1E72               	btfss	_FLAGs,4
  2048  0151  1AF2               	btfsc	_FLAGs,5
  2049  0152  2955               	goto	i1l3099
  2050  0153  1F72               	btfss	_FLAGs,6
  2051  0154  2958               	goto	i1l3103
  2052  0155                     i1l3099:	
  2053                           
  2054                           ;1.C: 231: remotekey_slice = 0;
  2055  0155  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0156  01AC               	clrf	_remotekey_slice
  2057                           
  2058                           ;1.C: 232: FLAGs &= ~0x08;
  2059  0157  11F2               	bcf	_FLAGs,3
  2060  0158                     i1l3103:	
  2061                           
  2062                           ;1.C: 233: }
  2063                           ;1.C: 234: }
  2064                           ;1.C: 235: }
  2065                           ;1.C: 236: }
  2066                           ;1.C: 237: TMR2ON =1;
  2067  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0159  1512               	bsf	18,2
  2069                           
  2070                           ;1.C: 238: INTE = 1;
  2071  015A  160B               	bsf	11,4
  2072  015B                     i1l3107:	
  2073                           
  2074                           ;1.C: 239: }
  2075                           ;1.C: 242: if(TMR2IE && TMR2IF){
  2076  015B  1683               	bsf	3,5	;RP0=1, select bank1
  2077  015C  1C8C               	btfss	12,1
  2078  015D  29CA               	goto	i1l3163
  2079  015E  1283               	bcf	3,5	;RP0=0, select bank0
  2080  015F  1C8C               	btfss	12,1
  2081  0160  29CA               	goto	i1l3163
  2082                           
  2083                           ;1.C: 243: TMR2IF = 0;
  2084  0161  108C               	bcf	12,1
  2085                           
  2086                           ;1.C: 245: if((FLAGs&0x02) == 0x02){
  2087  0162  1CF2               	btfss	_FLAGs,1
  2088  0163  2969               	goto	i1l892
  2089                           
  2090                           ;1.C: 246: Indata++;
  2091  0164  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0165  0AAA               	incf	_Indata^(0+128),f
  2093  0166  1903               	skipnz
  2094  0167  0AAB               	incf	(_Indata+1)^(0+128),f
  2095                           
  2096                           ;1.C: 247: }else{
  2097  0168  29CA               	goto	i1l3163
  2098  0169                     i1l892:	
  2099                           
  2100                           ;1.C: 256: if((FLAGs&0x80) == 0){
  2101  0169  1BF2               	btfsc	_FLAGs,7
  2102  016A  2995               	goto	i1l3133
  2103                           
  2104                           ;1.C: 257: if(PA2 == 1){
  2105  016B  1D05               	btfss	5,2
  2106  016C  2972               	goto	i1l3119
  2107                           
  2108                           ;1.C: 258: HIndata++;
  2109  016D  1683               	bsf	3,5	;RP0=1, select bank1
  2110  016E  0AA8               	incf	_HIndata^(0+128),f
  2111  016F  1903               	skipnz
  2112  0170  0AA9               	incf	(_HIndata+1)^(0+128),f
  2113                           
  2114                           ;1.C: 259: }else{
  2115  0171  2995               	goto	i1l3133
  2116  0172                     i1l3119:	
  2117                           
  2118                           ;1.C: 260: buff = HIndata*53;
  2119  0172  1683               	bsf	3,5	;RP0=1, select bank1
  2120  0173  0829               	movf	(_HIndata+1)^(0+128),w
  2121  0174  00F7               	movwf	?___wmul+1
  2122  0175  0828               	movf	_HIndata^(0+128),w
  2123  0176  22B1               	fcall	PL15	;call to abstracted procedure
  2124  0177  2661               	fcall	___wmul
  2125  0178  22A6               	fcall	PL13	;call to abstracted procedure
  2126                           
  2127                           ;1.C: 261: HIndata = 0;
  2128  0179  01A8               	clrf	_HIndata^(0+128)
  2129  017A  01A9               	clrf	(_HIndata+1)^(0+128)
  2130                           
  2131                           ;1.C: 262: if( ((buff>200)&&(buff<600)) ||
  2132                           ;1.C: 263: ((buff>700)&&(buff<1800))
  2133                           ;1.C: 264: ){
  2134  017B  22A1               	fcall	PL12	;call to abstracted procedure
  2135  017C  1C03               	skipc
  2136  017D  2985               	goto	L3
  2137  017E  0271               	subwf	_buff+1,w
  2138  017F  3058               	movlw	88
  2139  0180  1903               	skipnz
  2140  0181  0270               	subwf	_buff,w
  2141  0182  1C03               	skipc
  2142  0183  2992               	goto	i1l899
  2143  0184  3002               	movlw	2
  2144  0185                     L3:	
  2145  0185  0271               	subwf	_buff+1,w
  2146  0186  30BD               	movlw	189
  2147  0187  1903               	skipnz
  2148  0188  0270               	subwf	_buff,w
  2149  0189  1C03               	skipc
  2150  018A  2994               	goto	i1l3131
  2151  018B  3007               	movlw	7
  2152  018C  0271               	subwf	_buff+1,w
  2153  018D  3008               	movlw	8
  2154  018E  1903               	skipnz
  2155  018F  0270               	subwf	_buff,w
  2156  0190  1803               	skipnc
  2157  0191  2994               	goto	i1l3131
  2158  0192                     i1l899:	
  2159                           
  2160                           ;1.C: 265: FLAGs |= 0x80;
  2161  0192  17F2               	bsf	_FLAGs,7
  2162                           
  2163                           ;1.C: 266: }else{
  2164  0193  2995               	goto	i1l3133
  2165  0194                     i1l3131:	
  2166                           
  2167                           ;1.C: 267: i = 0;
  2168  0194  01AE               	clrf	_i^(0+128)
  2169  0195                     i1l3133:	
  2170                           
  2171                           ;1.C: 268: }
  2172                           ;1.C: 269: }
  2173                           ;1.C: 270: }
  2174                           ;1.C: 271: if((FLAGs&0x80) == 0x80){
  2175  0195  1FF2               	btfss	_FLAGs,7
  2176  0196  29C3               	goto	i1l3157
  2177                           
  2178                           ;1.C: 272: if(PA2 == 0){
  2179  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0198  1905               	btfsc	5,2
  2181  0199  299F               	goto	i1l3139
  2182                           
  2183                           ;1.C: 273: LIndata++;
  2184  019A  1683               	bsf	3,5	;RP0=1, select bank1
  2185  019B  0AAC               	incf	_LIndata^(0+128),f
  2186  019C  1903               	skipnz
  2187  019D  0AAD               	incf	(_LIndata+1)^(0+128),f
  2188                           
  2189                           ;1.C: 274: }else{
  2190  019E  29C3               	goto	i1l3157
  2191  019F                     i1l3139:	
  2192                           
  2193                           ;1.C: 275: buff = LIndata*53;
  2194  019F  1683               	bsf	3,5	;RP0=1, select bank1
  2195  01A0  082D               	movf	(_LIndata+1)^(0+128),w
  2196  01A1  00F7               	movwf	?___wmul+1
  2197  01A2  082C               	movf	_LIndata^(0+128),w
  2198  01A3  22B1               	fcall	PL15	;call to abstracted procedure
  2199  01A4  2661               	fcall	___wmul
  2200  01A5  22A6               	fcall	PL13	;call to abstracted procedure
  2201                           
  2202                           ;1.C: 276: LIndata = 0;
  2203  01A6  01AC               	clrf	_LIndata^(0+128)
  2204  01A7  01AD               	clrf	(_LIndata+1)^(0+128)
  2205                           
  2206                           ;1.C: 277: if( ((buff>200)&&(buff<600)) ||
  2207                           ;1.C: 278: ((buff>700)&&(buff<1800))
  2208                           ;1.C: 279: ){
  2209  01A8  22A1               	fcall	PL12	;call to abstracted procedure
  2210  01A9  1C03               	skipc
  2211  01AA  29B2               	goto	L4
  2212  01AB  0271               	subwf	_buff+1,w
  2213  01AC  3058               	movlw	88
  2214  01AD  1903               	skipnz
  2215  01AE  0270               	subwf	_buff,w
  2216  01AF  1C03               	skipc
  2217  01B0  29BF               	goto	i1l3151
  2218  01B1  3002               	movlw	2
  2219  01B2                     L4:	
  2220  01B2  0271               	subwf	_buff+1,w
  2221  01B3  30BD               	movlw	189
  2222  01B4  1903               	skipnz
  2223  01B5  0270               	subwf	_buff,w
  2224  01B6  1C03               	skipc
  2225  01B7  29C1               	goto	i1l3153
  2226  01B8  3007               	movlw	7
  2227  01B9  0271               	subwf	_buff+1,w
  2228  01BA  3008               	movlw	8
  2229  01BB  1903               	skipnz
  2230  01BC  0270               	subwf	_buff,w
  2231  01BD  1803               	skipnc
  2232  01BE  29C1               	goto	i1l3153
  2233  01BF                     i1l3151:	
  2234                           
  2235                           ;1.C: 280: i++;
  2236  01BF  0AAE               	incf	_i^(0+128),f
  2237                           
  2238                           ;1.C: 281: }else{
  2239  01C0  29C2               	goto	i1l3155
  2240  01C1                     i1l3153:	
  2241                           
  2242                           ;1.C: 282: i = 0;
  2243  01C1  01AE               	clrf	_i^(0+128)
  2244  01C2                     i1l3155:	
  2245                           
  2246                           ;1.C: 283: }
  2247                           ;1.C: 284: FLAGs &= ~0x80;
  2248  01C2  13F2               	bcf	_FLAGs,7
  2249  01C3                     i1l3157:	
  2250                           
  2251                           ;1.C: 285: }
  2252                           ;1.C: 286: }
  2253                           ;1.C: 287: if(i>3){
  2254  01C3  3004               	movlw	4
  2255  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2256  01C5  022E               	subwf	_i^(0+128),w
  2257  01C6  1C03               	skipc
  2258  01C7  29CA               	goto	i1l3163
  2259                           
  2260                           ;1.C: 288: FLAGs |= 0x02;
  2261  01C8  14F2               	bsf	_FLAGs,1
  2262                           
  2263                           ;1.C: 289: i = 0;
  2264  01C9  01AE               	clrf	_i^(0+128)
  2265  01CA                     i1l3163:	
  2266                           
  2267                           ;1.C: 291: }
  2268                           ;1.C: 292: }
  2269                           ;1.C: 293: }
  2270                           ;1.C: 296: if(T0IE && T0IF){
  2271  01CA  1A8B               	btfsc	11,5
  2272  01CB  1D0B               	btfss	11,2
  2273  01CC  2A5A               	goto	i1l939
  2274                           
  2275                           ;1.C: 297: T0IF = 0;
  2276  01CD  110B               	bcf	11,2
  2277                           
  2278                           ;1.C: 298: ms16_counter ++;
  2279  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  2280  01CF  0AA9               	incf	_ms16_counter,f
  2281                           
  2282                           ;1.C: 301: if( ((FLAGs&0x10) == 0x10) ||
  2283                           ;1.C: 302: ((FLAGs&0x20) == 0x20) ||
  2284                           ;1.C: 303: ((FLAGs&0x40) == 0x40)
  2285                           ;1.C: 304: ){
  2286  01D0  1E72               	btfss	_FLAGs,4
  2287  01D1  1AF2               	btfsc	_FLAGs,5
  2288  01D2  29D5               	goto	i1l3177
  2289  01D3  1F72               	btfss	_FLAGs,6
  2290  01D4  29DF               	goto	i1l3191
  2291  01D5                     i1l3177:	
  2292  01D5  300E               	movlw	14
  2293                           
  2294                           ;1.C: 305: remotekey_slice++;
  2295  01D6  0AAC               	incf	_remotekey_slice,f
  2296                           
  2297                           ;1.C: 306: if( remotekey_slice>(110/8)){
  2298  01D7  022C               	subwf	_remotekey_slice,w
  2299  01D8  1C03               	skipc
  2300  01D9  29DF               	goto	i1l3191
  2301                           
  2302                           ;1.C: 307: remotekey_slice = 0;
  2303  01DA  01AC               	clrf	_remotekey_slice
  2304                           
  2305                           ;1.C: 309: FLAGs &= ~0x02;
  2306  01DB  10F2               	bcf	_FLAGs,1
  2307                           
  2308                           ;1.C: 310: FLAGs &= ~0x10;
  2309  01DC  1272               	bcf	_FLAGs,4
  2310                           
  2311                           ;1.C: 311: FLAGs &= ~0x20;
  2312  01DD  12F2               	bcf	_FLAGs,5
  2313                           
  2314                           ;1.C: 312: FLAGs &= ~0x40;
  2315  01DE  1372               	bcf	_FLAGs,6
  2316  01DF                     i1l3191:	
  2317                           
  2318                           ;1.C: 313: }
  2319                           ;1.C: 314: }
  2320                           ;1.C: 316: if( ((PRESSED&0x10) == 0x10) ||
  2321                           ;1.C: 317: ((PRESSED&0x20) == 0x20) ||
  2322                           ;1.C: 318: ((PRESSED&0x40) == 0x40)
  2323                           ;1.C: 319: ){
  2324  01DF  1E75               	btfss	_PRESSED,4
  2325  01E0  1AF5               	btfsc	_PRESSED,5
  2326  01E1  29E4               	goto	i1l3197
  2327  01E2  1F75               	btfss	_PRESSED,6
  2328  01E3  29EB               	goto	i1l3203
  2329  01E4                     i1l3197:	
  2330  01E4  300E               	movlw	14
  2331                           
  2332                           ;1.C: 320: match_slice++;
  2333  01E5  0AA8               	incf	_match_slice,f
  2334                           
  2335                           ;1.C: 321: if(match_slice>(110/8)){
  2336  01E6  0228               	subwf	_match_slice,w
  2337  01E7  1C03               	skipc
  2338  01E8  29EB               	goto	i1l3203
  2339                           
  2340                           ;1.C: 322: match_slice = 0;
  2341  01E9  01A8               	clrf	_match_slice
  2342                           
  2343                           ;1.C: 323: remotekey_Receive_num = 0;
  2344  01EA  01AB               	clrf	_remotekey_Receive_num
  2345  01EB                     i1l3203:	
  2346                           
  2347                           ;1.C: 324: }
  2348                           ;1.C: 325: }
  2349                           ;1.C: 328: if((FLAGs&0x02) == 0){
  2350  01EB  18F2               	btfsc	_FLAGs,1
  2351  01EC  2A04               	goto	i1l922
  2352                           
  2353                           ;1.C: 329: EE_Buff = ms16_counter%8;
  2354  01ED  0829               	movf	_ms16_counter,w
  2355  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  2356  01EF  00BA               	movwf	_EE_Buff^(0+128)
  2357  01F0  3007               	movlw	7
  2358  01F1  05BA               	andwf	_EE_Buff^(0+128),f
  2359                           
  2360                           ;1.C: 330: if(EE_Buff == 1){
  2361  01F2  0B3A               	decfsz	_EE_Buff^(0+128),w
  2362  01F3  29FA               	goto	i1l3219
  2363                           
  2364                           ;1.C: 331: PA3 = 0;
  2365  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  2366  01F5  1185               	bcf	5,3
  2367                           
  2368                           ;1.C: 333: EX_INT_FallingEdge();
  2369  01F6  26F0               	fcall	i1_EX_INT_FallingEdge
  2370                           
  2371                           ;1.C: 334: INTE =1;
  2372  01F7  160B               	bsf	11,4
  2373                           
  2374                           ;1.C: 335: TMR2ON =1;
  2375  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2376  01F9  1512               	bsf	18,2
  2377  01FA                     i1l3219:	
  2378                           
  2379                           ;1.C: 336: }
  2380                           ;1.C: 337: if(EE_Buff == 4){
  2381  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  2382  01FB  083A               	movf	_EE_Buff^(0+128),w
  2383  01FC  3A04               	xorlw	4
  2384                           
  2385                           ;1.C: 338: PA3 = 1;
  2386  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2387  01FE  1D03               	skipz
  2388  01FF  2A08               	goto	L5
  2389  0200  1585               	bsf	5,3
  2390                           
  2391                           ;1.C: 339: TMR2ON =0;
  2392  0201  1112               	bcf	18,2
  2393                           
  2394                           ;1.C: 340: INTE =0;
  2395  0202  120B               	bcf	11,4
  2396  0203  2A07               	goto	i1l925
  2397  0204                     i1l922:	
  2398                           
  2399                           ;1.C: 343: PA3 = 0;
  2400  0204  1185               	bcf	5,3
  2401                           
  2402                           ;1.C: 344: INTE =1;
  2403  0205  160B               	bsf	11,4
  2404                           
  2405                           ;1.C: 345: TMR2ON =1;
  2406  0206  1512               	bsf	18,2
  2407  0207                     i1l925:	
  2408                           
  2409                           ;1.C: 346: }
  2410                           ;1.C: 349: if(ms16_counter%2 == 0){
  2411  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0208                     L5:	
  2413  0208  1829               	btfsc	_ms16_counter,0
  2414  0209  2A0C               	goto	i1l3227
  2415                           
  2416                           ;1.C: 350: KEYSCAN();
  2417  020A  2442               	fcall	_KEYSCAN
  2418                           
  2419                           ;1.C: 351: KEY();
  2420  020B  22B6               	fcall	_KEY
  2421  020C                     i1l3227:	
  2422                           
  2423                           ;1.C: 352: }
  2424                           ;1.C: 356: if(ms16_counter >= 120){
  2425  020C  3078               	movlw	120
  2426  020D  0229               	subwf	_ms16_counter,w
  2427  020E  1C03               	skipc
  2428  020F  2A5A               	goto	i1l939
  2429                           
  2430                           ;1.C: 357: ms16_counter = 0;
  2431  0210  01A9               	clrf	_ms16_counter
  2432                           
  2433                           ;1.C: 360: if( ((PRESSED&0x10) == 0x10) ||
  2434                           ;1.C: 361: ((PRESSED&0x20) == 0x20) ||
  2435                           ;1.C: 362: ((PRESSED&0x40) == 0x40)
  2436                           ;1.C: 363: ){
  2437  0211  1E75               	btfss	_PRESSED,4
  2438  0212  1AF5               	btfsc	_PRESSED,5
  2439  0213  2A16               	goto	i1l3237
  2440  0214  1F75               	btfss	_PRESSED,6
  2441  0215  2A5A               	goto	i1l939
  2442  0216                     i1l3237:	
  2443                           
  2444                           ;1.C: 364: if(KEY_Match_counter<4){
  2445  0216  3004               	movlw	4
  2446  0217  0225               	subwf	_KEY_Match_counter,w
  2447  0218  1C03               	btfss	3,0
  2448                           
  2449                           ;1.C: 365: KEY_Match_counter++;
  2450  0219  0AA5               	incf	_KEY_Match_counter,f
  2451  021A  3010               	movlw	16
  2452                           
  2453                           ;1.C: 366: }
  2454                           ;1.C: 367: LONGPRESS_OverTime_Counter++;
  2455  021B  0AA6               	incf	_LONGPRESS_OverTime_Counter,f
  2456                           
  2457                           ;1.C: 368: if(LONGPRESS_OverTime_Counter > 15){
  2458  021C  0226               	subwf	_LONGPRESS_OverTime_Counter,w
  2459  021D  1C03               	skipc
  2460  021E  2A5A               	goto	i1l939
  2461                           
  2462                           ;1.C: 369: LONGPRESS_OverTime_Counter = 0;
  2463  021F  01A6               	clrf	_LONGPRESS_OverTime_Counter
  2464                           
  2465                           ;1.C: 370: if((PRESSED&0x10) == 0x10){
  2466  0220  1E75               	btfss	_PRESSED,4
  2467  0221  2A33               	goto	i1l3257
  2468                           
  2469                           ;1.C: 371: CH1_remotekey[CH1_remotekey_Latest] = CH1_remotekey[CH1_remotekey_num-1];
  2470  0222  0867               	movf	_CH1_remotekey_num,w
  2471  0223  2282               	fcall	PL7	;call to abstracted procedure
  2472  0224  3E29               	addlw	(_CH1_remotekey+-4)& (0+255)
  2473  0225  2266               	fcall	PL2	;call to abstracted procedure
  2474  0226  0837               	movf	_CH1_remotekey_Latest^(0+128),w
  2475  0227  2292               	fcall	PL10	;call to abstracted procedure
  2476  0228  3E2D               	addlw	_CH1_remotekey& (0+255)
  2477  0229  2275               	fcall	PL6	;call to abstracted procedure
  2478                           
  2479                           ;1.C: 372: CH1_remotekey[CH1_remotekey_num-1] = 0xFFFFFFFF;
  2480  022A  0867               	movf	_CH1_remotekey_num,w
  2481  022B  2282               	fcall	PL7	;call to abstracted procedure
  2482  022C  3E29               	addlw	(_CH1_remotekey+-4)& (0+255)
  2483  022D  2288               	fcall	PL8	;call to abstracted procedure
  2484                           
  2485                           ;1.C: 373: if(CH1_remotekey_num>0) CH1_remotekey_num--;
  2486  022E  0867               	movf	_CH1_remotekey_num,w
  2487  022F  1D03               	skipz
  2488  0230  03E7               	decf	_CH1_remotekey_num,f
  2489                           
  2490                           ;1.C: 374: PRESSED &= ~0x10;
  2491  0231  1275               	bcf	_PRESSED,4
  2492                           
  2493                           ;1.C: 375: PA7 = 1;
  2494  0232  1785               	bsf	5,7
  2495  0233                     i1l3257:	
  2496                           
  2497                           ;1.C: 376: }
  2498                           ;1.C: 377: if((PRESSED&0x20) == 0x20){
  2499  0233  1EF5               	btfss	_PRESSED,5
  2500  0234  2A46               	goto	i1l3269
  2501                           
  2502                           ;1.C: 378: CH2_remotekey[CH2_remotekey_Latest] = CH2_remotekey[CH2_remotekey_num-1];
  2503  0235  0868               	movf	_CH2_remotekey_num,w
  2504  0236  2282               	fcall	PL7	;call to abstracted procedure
  2505  0237  3E39               	addlw	(_CH2_remotekey+-4)& (0+255)
  2506  0238  2266               	fcall	PL2	;call to abstracted procedure
  2507  0239  0838               	movf	_CH2_remotekey_Latest^(0+128),w
  2508  023A  2292               	fcall	PL10	;call to abstracted procedure
  2509  023B  3E3D               	addlw	_CH2_remotekey& (0+255)
  2510  023C  2275               	fcall	PL6	;call to abstracted procedure
  2511                           
  2512                           ;1.C: 379: CH2_remotekey[CH2_remotekey_num-1] = 0xFFFFFFFF;
  2513  023D  0868               	movf	_CH2_remotekey_num,w
  2514  023E  2282               	fcall	PL7	;call to abstracted procedure
  2515  023F  3E39               	addlw	(_CH2_remotekey+-4)& (0+255)
  2516  0240  2288               	fcall	PL8	;call to abstracted procedure
  2517                           
  2518                           ;1.C: 380: if(CH2_remotekey_num>0) CH2_remotekey_num--;
  2519  0241  0868               	movf	_CH2_remotekey_num,w
  2520  0242  1D03               	skipz
  2521  0243  03E8               	decf	_CH2_remotekey_num,f
  2522                           
  2523                           ;1.C: 381: PRESSED &= ~0x20;
  2524  0244  12F5               	bcf	_PRESSED,5
  2525                           
  2526                           ;1.C: 382: PA6 = 1;
  2527  0245  1705               	bsf	5,6
  2528  0246                     i1l3269:	
  2529                           
  2530                           ;1.C: 383: }
  2531                           ;1.C: 384: if((PRESSED&0x40) == 0x40){
  2532  0246  1F75               	btfss	_PRESSED,6
  2533  0247  2A59               	goto	i1l3281
  2534                           
  2535                           ;1.C: 385: CH3_remotekey[CH3_remotekey_Latest] = CH3_remotekey[CH3_remotekey_num-1];
  2536  0248  0869               	movf	_CH3_remotekey_num,w
  2537  0249  2282               	fcall	PL7	;call to abstracted procedure
  2538  024A  3E49               	addlw	(_CH3_remotekey+-4)& (0+255)
  2539  024B  2266               	fcall	PL2	;call to abstracted procedure
  2540  024C  0839               	movf	_CH3_remotekey_Latest^(0+128),w
  2541  024D  2292               	fcall	PL10	;call to abstracted procedure
  2542  024E  3E4D               	addlw	_CH3_remotekey& (0+255)
  2543  024F  2275               	fcall	PL6	;call to abstracted procedure
  2544                           
  2545                           ;1.C: 386: CH3_remotekey[CH3_remotekey_num-1] = 0xFFFFFFFF;
  2546  0250  0869               	movf	_CH3_remotekey_num,w
  2547  0251  2282               	fcall	PL7	;call to abstracted procedure
  2548  0252  3E49               	addlw	(_CH3_remotekey+-4)& (0+255)
  2549  0253  2288               	fcall	PL8	;call to abstracted procedure
  2550                           
  2551                           ;1.C: 387: if(CH3_remotekey_num>0) CH3_remotekey_num--;
  2552  0254  0869               	movf	_CH3_remotekey_num,w
  2553  0255  1D03               	skipz
  2554  0256  03E9               	decf	_CH3_remotekey_num,f
  2555                           
  2556                           ;1.C: 388: PRESSED &= ~0x40;
  2557  0257  1375               	bcf	_PRESSED,6
  2558                           
  2559                           ;1.C: 389: PA5 = 1;
  2560  0258  1685               	bsf	5,5
  2561  0259                     i1l3281:	
  2562                           
  2563                           ;1.C: 390: }
  2564                           ;1.C: 391: PC0 = 1;
  2565  0259  1407               	bsf	7,0
  2566  025A                     i1l939:	
  2567  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2568  025B  0866               	movf	??_ISR+9,w
  2569  025C  00FF               	movwf	127
  2570  025D  0865               	movf	??_ISR+8,w
  2571  025E  008A               	movwf	10
  2572  025F  0864               	movf	??_ISR+7,w
  2573  0260  0084               	movwf	4
  2574  0261  0E63               	swapf	(??_ISR+6)^0,w
  2575  0262  0083               	movwf	3
  2576  0263  0EFE               	swapf	126,f
  2577  0264  0E7E               	swapf	126,w
  2578  0265  0009               	retfie
  2579  0266                     __end_of_ISR:	
  2580  0266                     PL2:	
  2581  0266  0084               	movwf	4
  2582  0267  1383               	bcf	3,7	;select IRP bank0
  2583  0268  0800               	movf	0,w
  2584  0269  00DE               	movwf	??_ISR+1
  2585  026A  0A84               	incf	4,f
  2586  026B  0800               	movf	0,w
  2587  026C  00DF               	movwf	??_ISR+2
  2588  026D  0A84               	incf	4,f
  2589  026E  0800               	movf	0,w
  2590  026F  00E0               	movwf	??_ISR+3
  2591  0270  0A84               	incf	4,f
  2592  0271  0800               	movf	0,w
  2593  0272  00E1               	movwf	??_ISR+4
  2594  0273  1683               	bsf	3,5	;RP0=1, select bank1
  2595  0274  0008               	return
  2596  0275                     PL6:	
  2597  0275  0084               	movwf	4
  2598  0276  085E               	movf	??_ISR+1,w
  2599  0277  0080               	movwf	0
  2600  0278  0A84               	incf	4,f
  2601  0279  085F               	movf	??_ISR+2,w
  2602  027A  0080               	movwf	0
  2603  027B  0A84               	incf	4,f
  2604  027C  0860               	movf	??_ISR+3,w
  2605  027D  0080               	movwf	0
  2606  027E  0A84               	incf	4,f
  2607  027F  0861               	movf	??_ISR+4,w
  2608  0280  0080               	movwf	0
  2609  0281  0008               	return
  2610  0282                     PL7:	
  2611  0282  00DD               	movwf	??_ISR
  2612  0283  1003               	clrc
  2613  0284  0DDD               	rlf	??_ISR,f
  2614  0285  1003               	clrc
  2615  0286  0D5D               	rlf	??_ISR,w
  2616  0287  0008               	return
  2617  0288                     PL8:	
  2618  0288  0084               	movwf	4
  2619  0289  30FF               	movlw	255
  2620  028A  0080               	movwf	0
  2621  028B  0A84               	incf	4,f
  2622  028C  0080               	movwf	0
  2623  028D  0A84               	incf	4,f
  2624  028E  0080               	movwf	0
  2625  028F  0A84               	incf	4,f
  2626  0290  0080               	movwf	0
  2627  0291  0008               	return
  2628  0292                     PL10:	
  2629  0292  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0293  00E2               	movwf	??_ISR+5
  2631  0294  1003               	clrc
  2632  0295  0DE2               	rlf	??_ISR+5,f
  2633  0296  1003               	clrc
  2634  0297  0D62               	rlf	??_ISR+5,w
  2635  0298  0008               	return
  2636  0299                     PL11:	
  2637  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2638  029A  01AA               	clrf	_num
  2639  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2640  029C  01A4               	clrf	_remotekey^(0+128)
  2641  029D  01A5               	clrf	(_remotekey+1)^(0+128)
  2642  029E  01A6               	clrf	(_remotekey+2)^(0+128)
  2643  029F  01A7               	clrf	(_remotekey+3)^(0+128)
  2644  02A0  0008               	return
  2645  02A1                     PL12:	
  2646  02A1  0271               	subwf	_buff+1,w
  2647  02A2  30C9               	movlw	201
  2648  02A3  1903               	skipnz
  2649  02A4  0270               	subwf	_buff,w
  2650  02A5  3402               	retlw	2
  2651  02A6                     PL13:	
  2652  02A6  0877               	movf	?___wmul+1,w
  2653  02A7  00F1               	movwf	_buff+1
  2654  02A8  0876               	movf	?___wmul,w
  2655  02A9  00F0               	movwf	_buff
  2656  02AA  3400               	retlw	0
  2657  02AB                     PL14:	
  2658  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  2659  02AC  0DA4               	rlf	_remotekey^(0+128),f
  2660  02AD  0DA5               	rlf	(_remotekey+1)^(0+128),f
  2661  02AE  0DA6               	rlf	(_remotekey+2)^(0+128),f
  2662  02AF  0DA7               	rlf	(_remotekey+3)^(0+128),f
  2663  02B0  0008               	return
  2664  02B1                     PL15:	
  2665  02B1  00F6               	movwf	?___wmul
  2666  02B2  3035               	movlw	53
  2667  02B3  00F8               	movwf	?___wmul+2
  2668  02B4  01F9               	clrf	?___wmul+3
  2669  02B5  0008               	return
  2670                           
  2671                           	psect	intentry
  2672  0004                     __pintentry:	
  2673                           ; Regs used in _ISR: [allreg]
  2674                           
  2675  0004                     interrupt_function:	
  2676  007E                     saved_w	set	btemp
  2677  0004  00FE               	movwf	btemp
  2678  0005  0E03               	swapf	3,w
  2679  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2680  0007  00E3               	movwf	??_ISR+6
  2681  0008  0804               	movf	4,w
  2682  0009  00E4               	movwf	??_ISR+7
  2683  000A  080A               	movf	10,w
  2684  000B  00E5               	movwf	??_ISR+8
  2685  000C  087F               	movf	btemp+1,w
  2686  000D  00E6               	movwf	??_ISR+9
  2687  000E  2810               	ljmp	_ISR
  2688                           
  2689                           	psect	text688
  2690  02B6                     __ptext688:	
  2691 ;; =============== function _ISR ends ============
  2692                           
  2693                           
  2694 ;; *************** function _KEY *****************
  2695 ;; Defined at:
  2696 ;;		line 666 in file "1.C"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;		None               void
  2703 ;; Registers used:
  2704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 20/0
  2707 ;;		On exit  : 20/0
  2708 ;;		Unchanged: FFEDF/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1
  2710 ;;      Params:         0       0       0
  2711 ;;      Locals:         0       0       0
  2712 ;;      Temps:          2       0       0
  2713 ;;      Totals:         2       0       0
  2714 ;;Total ram usage:        2 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    2
  2717 ;; This function calls:
  2718 ;;		_CH1_EEPROM_Write
  2719 ;;		_CH2_EEPROM_Write
  2720 ;;		_CH3_EEPROM_Write
  2721 ;;		_led1_debug
  2722 ;; This function is called by:
  2723 ;;		_ISR
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726  02B6                     _KEY:	
  2727                           
  2728                           ;1.C: 667: if( ((PRESSED&0x10) == 0x10) ||
  2729                           ;1.C: 668: ((PRESSED&0x20) == 0x20) ||
  2730                           ;1.C: 669: ((PRESSED&0x40) == 0x40)
  2731                           ;1.C: 670: ){
  2732                           
  2733                           ; Regs used in _KEY: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2734  02B6  1E75               	btfss	_PRESSED,4
  2735  02B7  1AF5               	btfsc	_PRESSED,5
  2736  02B8  2BFB               	goto	i1l3537
  2737  02B9  1B75               	btfsc	_PRESSED,6
  2738  02BA  2BFB               	goto	i1l3537
  2739  02BB  2C06               	goto	i1l1016
  2740  02BC                     i1l3431:	
  2741                           
  2742                           ;1.C: 673: Match_remotekey = 0xFFFFFFFF;
  2743  02BC  30FF               	movlw	255
  2744  02BD  00A3               	movwf	_Match_remotekey+3
  2745  02BE  00A2               	movwf	_Match_remotekey+2
  2746  02BF  00A1               	movwf	_Match_remotekey+1
  2747  02C0  00A0               	movwf	_Match_remotekey
  2748                           
  2749                           ;1.C: 674: break;
  2750  02C1  2C06               	goto	i1l1016
  2751  02C2                     i1l1022:	
  2752                           ;1.C: 675: case 1:
  2753                           
  2754                           
  2755                           ;1.C: 676: PC0 = 0;
  2756  02C2  1007               	bcf	7,0
  2757                           
  2758                           ;1.C: 677: if((PRESSED&0x10) == 0x10) PA7 = 0;
  2759  02C3  1E75               	btfss	_PRESSED,4
  2760  02C4  2AC6               	goto	i1l1023
  2761  02C5  1385               	bcf	5,7
  2762  02C6                     i1l1023:	
  2763                           
  2764                           ;1.C: 678: if((PRESSED&0x20) == 0x20) PA6 = 0;
  2765  02C6  1EF5               	btfss	_PRESSED,5
  2766  02C7  2AC9               	goto	i1l1024
  2767  02C8  1305               	bcf	5,6
  2768  02C9                     i1l1024:	
  2769                           
  2770                           ;1.C: 679: if((PRESSED&0x40) == 0x40) PA5 = 0;
  2771  02C9  1F75               	btfss	_PRESSED,6
  2772  02CA  2C06               	goto	i1l1016
  2773  02CB  1285               	bcf	5,5
  2774  02CC  2C06               	goto	i1l1016
  2775  02CD                     i1l1026:	
  2776                           ;1.C: 681: case 2:
  2777                           
  2778                           
  2779                           ;1.C: 682: PC0 = 1;
  2780  02CD  1407               	bsf	7,0
  2781                           
  2782                           ;1.C: 683: if((PRESSED&0x10) == 0x10) PA7 = 1;
  2783  02CE  1E75               	btfss	_PRESSED,4
  2784  02CF  2AD1               	goto	i1l1027
  2785  02D0  1785               	bsf	5,7
  2786  02D1                     i1l1027:	
  2787                           
  2788                           ;1.C: 684: if((PRESSED&0x20) == 0x20) PA6 = 1;
  2789  02D1  1EF5               	btfss	_PRESSED,5
  2790  02D2  2AD4               	goto	i1l1028
  2791  02D3  1705               	bsf	5,6
  2792  02D4                     i1l1028:	
  2793                           
  2794                           ;1.C: 685: if((PRESSED&0x40) == 0x40) PA5 = 1;
  2795  02D4  1F75               	btfss	_PRESSED,6
  2796  02D5  2C06               	goto	i1l1016
  2797  02D6  1685               	bsf	5,5
  2798  02D7  2C06               	goto	i1l1016
  2799  02D8                     i1l1030:	
  2800                           ;1.C: 687: case 3:
  2801                           
  2802  02D8  3003               	movlw	3
  2803                           
  2804                           ;1.C: 688: KEY_Match_counter = 1;
  2805  02D9  01A5               	clrf	_KEY_Match_counter
  2806  02DA  0AA5               	incf	_KEY_Match_counter,f
  2807                           
  2808                           ;1.C: 689: if(remotekey_Receive_num >= 3){
  2809  02DB  022B               	subwf	_remotekey_Receive_num,w
  2810  02DC  1C03               	skipc
  2811  02DD  2C06               	goto	i1l1016
  2812                           
  2813                           ;1.C: 690: if((PRESSED&0x10) == 0x10){
  2814  02DE  1E75               	btfss	_PRESSED,4
  2815  02DF  2B3C               	goto	i1l3475
  2816                           
  2817                           ;1.C: 691: if( (Match_remotekey != CH1_remotekey[0]) &&
  2818                           ;1.C: 692: (Match_remotekey != CH1_remotekey[1]) &&
  2819                           ;1.C: 693: (Match_remotekey != CH1_remotekey[2]) &&
  2820                           ;1.C: 694: (Match_remotekey != CH1_remotekey[3])
  2821                           ;1.C: 695: ){
  2822  02E0  0823               	movf	_Match_remotekey+3,w
  2823  02E1  0630               	xorwf	_CH1_remotekey+3,w
  2824  02E2  1D03               	skipz
  2825  02E3  2AEE               	goto	u249_25
  2826  02E4  0822               	movf	_Match_remotekey+2,w
  2827  02E5  062F               	xorwf	_CH1_remotekey+2,w
  2828  02E6  1D03               	skipz
  2829  02E7  2AEE               	goto	u249_25
  2830  02E8  0821               	movf	_Match_remotekey+1,w
  2831  02E9  062E               	xorwf	_CH1_remotekey+1,w
  2832  02EA  1D03               	skipz
  2833  02EB  2AEE               	goto	u249_25
  2834  02EC  0820               	movf	_Match_remotekey,w
  2835  02ED  062D               	xorwf	_CH1_remotekey,w
  2836  02EE                     u249_25:	
  2837  02EE  1903               	skipnz
  2838  02EF  2B32               	goto	i1l3465
  2839  02F0  0823               	movf	_Match_remotekey+3,w
  2840  02F1  0634               	xorwf	_CH1_remotekey+7,w
  2841  02F2  1D03               	skipz
  2842  02F3  2AFE               	goto	u250_25
  2843  02F4  0822               	movf	_Match_remotekey+2,w
  2844  02F5  0633               	xorwf	_CH1_remotekey+6,w
  2845  02F6  1D03               	skipz
  2846  02F7  2AFE               	goto	u250_25
  2847  02F8  0821               	movf	_Match_remotekey+1,w
  2848  02F9  0632               	xorwf	_CH1_remotekey+5,w
  2849  02FA  1D03               	skipz
  2850  02FB  2AFE               	goto	u250_25
  2851  02FC  0820               	movf	_Match_remotekey,w
  2852  02FD  0631               	xorwf	_CH1_remotekey+4,w
  2853  02FE                     u250_25:	
  2854  02FE  1903               	skipnz
  2855  02FF  2B32               	goto	i1l3465
  2856  0300  0823               	movf	_Match_remotekey+3,w
  2857  0301  0638               	xorwf	_CH1_remotekey+11,w
  2858  0302  1D03               	skipz
  2859  0303  2B0E               	goto	u251_25
  2860  0304  0822               	movf	_Match_remotekey+2,w
  2861  0305  0637               	xorwf	_CH1_remotekey+10,w
  2862  0306  1D03               	skipz
  2863  0307  2B0E               	goto	u251_25
  2864  0308  0821               	movf	_Match_remotekey+1,w
  2865  0309  0636               	xorwf	_CH1_remotekey+9,w
  2866  030A  1D03               	skipz
  2867  030B  2B0E               	goto	u251_25
  2868  030C  0820               	movf	_Match_remotekey,w
  2869  030D  0635               	xorwf	_CH1_remotekey+8,w
  2870  030E                     u251_25:	
  2871  030E  1903               	skipnz
  2872  030F  2B32               	goto	i1l3465
  2873  0310  0823               	movf	_Match_remotekey+3,w
  2874  0311  063C               	xorwf	_CH1_remotekey+15,w
  2875  0312  1D03               	skipz
  2876  0313  2B1E               	goto	u252_25
  2877  0314  0822               	movf	_Match_remotekey+2,w
  2878  0315  063B               	xorwf	_CH1_remotekey+14,w
  2879  0316  1D03               	skipz
  2880  0317  2B1E               	goto	u252_25
  2881  0318  0821               	movf	_Match_remotekey+1,w
  2882  0319  063A               	xorwf	_CH1_remotekey+13,w
  2883  031A  1D03               	skipz
  2884  031B  2B1E               	goto	u252_25
  2885  031C  0820               	movf	_Match_remotekey,w
  2886  031D  0639               	xorwf	_CH1_remotekey+12,w
  2887  031E                     u252_25:	
  2888  031E  1903               	skipnz
  2889  031F  2B32               	goto	i1l3465
  2890                           
  2891                           ;1.C: 696: if(CH1_remotekey_num < 4){
  2892  0320  3004               	movlw	4
  2893  0321  0267               	subwf	_CH1_remotekey_num,w
  2894  0322  1803               	skipnc
  2895  0323  2B2B               	goto	i1l3463
  2896                           
  2897                           ;1.C: 697: CH1_remotekey[CH1_remotekey_num] = Match_remotekey;
  2898  0324  0867               	movf	_CH1_remotekey_num,w
  2899  0325  243C               	fcall	PL9	;call to abstracted procedure
  2900  0326  3E2D               	addlw	_CH1_remotekey& (0+255)
  2901  0327  0084               	movwf	4
  2902  0328  242F               	fcall	PL3	;call to abstracted procedure
  2903                           
  2904                           ;1.C: 698: CH1_remotekey_num++;
  2905  0329  0AE7               	incf	_CH1_remotekey_num,f
  2906                           
  2907                           ;1.C: 699: }else{
  2908  032A  2B32               	goto	i1l3465
  2909  032B                     i1l3463:	
  2910                           
  2911                           ;1.C: 700: CH1_remotekey[CH1_remotekey_Latest] = Match_remotekey;
  2912  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2913  032C  0837               	movf	_CH1_remotekey_Latest^(0+128),w
  2914  032D  243C               	fcall	PL9	;call to abstracted procedure
  2915  032E  3E2D               	addlw	_CH1_remotekey& (0+255)
  2916  032F  0084               	movwf	4
  2917  0330  1283               	bcf	3,5	;RP0=0, select bank0
  2918  0331  242F               	fcall	PL3	;call to abstracted procedure
  2919  0332                     i1l3465:	
  2920                           
  2921                           ;1.C: 701: }
  2922                           ;1.C: 702: }
  2923                           ;1.C: 703: if(CH1_remotekey_num > 4) CH1_remotekey_num = 4;
  2924  0332  3005               	movlw	5
  2925  0333  0267               	subwf	_CH1_remotekey_num,w
  2926  0334  1C03               	skipc
  2927  0335  2B38               	goto	i1l3469
  2928  0336  3004               	movlw	4
  2929  0337  00E7               	movwf	_CH1_remotekey_num
  2930  0338                     i1l3469:	
  2931                           
  2932                           ;1.C: 704: PRESSED &= ~0x10;
  2933  0338  1275               	bcf	_PRESSED,4
  2934                           
  2935                           ;1.C: 705: CH1_EEPROM_Write();
  2936  0339  2608               	fcall	_CH1_EEPROM_Write
  2937                           
  2938                           ;1.C: 706: PA7 = 1;
  2939  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2940  033B  1785               	bsf	5,7
  2941  033C                     i1l3475:	
  2942                           
  2943                           ;1.C: 707: }
  2944                           ;1.C: 708: if((PRESSED&0x20) == 0x20){
  2945  033C  1EF5               	btfss	_PRESSED,5
  2946  033D  2B9A               	goto	i1l3503
  2947                           
  2948                           ;1.C: 709: if( (Match_remotekey != CH2_remotekey[0]) &&
  2949                           ;1.C: 710: (Match_remotekey != CH2_remotekey[1]) &&
  2950                           ;1.C: 711: (Match_remotekey != CH2_remotekey[2]) &&
  2951                           ;1.C: 712: (Match_remotekey != CH2_remotekey[3])
  2952                           ;1.C: 713: ){
  2953  033E  0823               	movf	_Match_remotekey+3,w
  2954  033F  0640               	xorwf	_CH2_remotekey+3,w
  2955  0340  1D03               	skipz
  2956  0341  2B4C               	goto	u256_25
  2957  0342  0822               	movf	_Match_remotekey+2,w
  2958  0343  063F               	xorwf	_CH2_remotekey+2,w
  2959  0344  1D03               	skipz
  2960  0345  2B4C               	goto	u256_25
  2961  0346  0821               	movf	_Match_remotekey+1,w
  2962  0347  063E               	xorwf	_CH2_remotekey+1,w
  2963  0348  1D03               	skipz
  2964  0349  2B4C               	goto	u256_25
  2965  034A  0820               	movf	_Match_remotekey,w
  2966  034B  063D               	xorwf	_CH2_remotekey,w
  2967  034C                     u256_25:	
  2968  034C  1903               	skipnz
  2969  034D  2B90               	goto	i1l3493
  2970  034E  0823               	movf	_Match_remotekey+3,w
  2971  034F  0644               	xorwf	_CH2_remotekey+7,w
  2972  0350  1D03               	skipz
  2973  0351  2B5C               	goto	u257_25
  2974  0352  0822               	movf	_Match_remotekey+2,w
  2975  0353  0643               	xorwf	_CH2_remotekey+6,w
  2976  0354  1D03               	skipz
  2977  0355  2B5C               	goto	u257_25
  2978  0356  0821               	movf	_Match_remotekey+1,w
  2979  0357  0642               	xorwf	_CH2_remotekey+5,w
  2980  0358  1D03               	skipz
  2981  0359  2B5C               	goto	u257_25
  2982  035A  0820               	movf	_Match_remotekey,w
  2983  035B  0641               	xorwf	_CH2_remotekey+4,w
  2984  035C                     u257_25:	
  2985  035C  1903               	skipnz
  2986  035D  2B90               	goto	i1l3493
  2987  035E  0823               	movf	_Match_remotekey+3,w
  2988  035F  0648               	xorwf	_CH2_remotekey+11,w
  2989  0360  1D03               	skipz
  2990  0361  2B6C               	goto	u258_25
  2991  0362  0822               	movf	_Match_remotekey+2,w
  2992  0363  0647               	xorwf	_CH2_remotekey+10,w
  2993  0364  1D03               	skipz
  2994  0365  2B6C               	goto	u258_25
  2995  0366  0821               	movf	_Match_remotekey+1,w
  2996  0367  0646               	xorwf	_CH2_remotekey+9,w
  2997  0368  1D03               	skipz
  2998  0369  2B6C               	goto	u258_25
  2999  036A  0820               	movf	_Match_remotekey,w
  3000  036B  0645               	xorwf	_CH2_remotekey+8,w
  3001  036C                     u258_25:	
  3002  036C  1903               	skipnz
  3003  036D  2B90               	goto	i1l3493
  3004  036E  0823               	movf	_Match_remotekey+3,w
  3005  036F  064C               	xorwf	_CH2_remotekey+15,w
  3006  0370  1D03               	skipz
  3007  0371  2B7C               	goto	u259_25
  3008  0372  0822               	movf	_Match_remotekey+2,w
  3009  0373  064B               	xorwf	_CH2_remotekey+14,w
  3010  0374  1D03               	skipz
  3011  0375  2B7C               	goto	u259_25
  3012  0376  0821               	movf	_Match_remotekey+1,w
  3013  0377  064A               	xorwf	_CH2_remotekey+13,w
  3014  0378  1D03               	skipz
  3015  0379  2B7C               	goto	u259_25
  3016  037A  0820               	movf	_Match_remotekey,w
  3017  037B  0649               	xorwf	_CH2_remotekey+12,w
  3018  037C                     u259_25:	
  3019  037C  1903               	skipnz
  3020  037D  2B90               	goto	i1l3493
  3021                           
  3022                           ;1.C: 714: if(CH2_remotekey_num < 4){
  3023  037E  3004               	movlw	4
  3024  037F  0268               	subwf	_CH2_remotekey_num,w
  3025  0380  1803               	skipnc
  3026  0381  2B89               	goto	i1l3491
  3027                           
  3028                           ;1.C: 715: CH2_remotekey[CH2_remotekey_num] = Match_remotekey;
  3029  0382  0868               	movf	_CH2_remotekey_num,w
  3030  0383  243C               	fcall	PL9	;call to abstracted procedure
  3031  0384  3E3D               	addlw	_CH2_remotekey& (0+255)
  3032  0385  0084               	movwf	4
  3033  0386  242F               	fcall	PL3	;call to abstracted procedure
  3034                           
  3035                           ;1.C: 716: CH2_remotekey_num++;
  3036  0387  0AE8               	incf	_CH2_remotekey_num,f
  3037                           
  3038                           ;1.C: 717: }else{
  3039  0388  2B90               	goto	i1l3493
  3040  0389                     i1l3491:	
  3041                           
  3042                           ;1.C: 718: CH2_remotekey[CH2_remotekey_Latest] = Match_remotekey;
  3043  0389  1683               	bsf	3,5	;RP0=1, select bank1
  3044  038A  0838               	movf	_CH2_remotekey_Latest^(0+128),w
  3045  038B  243C               	fcall	PL9	;call to abstracted procedure
  3046  038C  3E3D               	addlw	_CH2_remotekey& (0+255)
  3047  038D  0084               	movwf	4
  3048  038E  1283               	bcf	3,5	;RP0=0, select bank0
  3049  038F  242F               	fcall	PL3	;call to abstracted procedure
  3050  0390                     i1l3493:	
  3051                           
  3052                           ;1.C: 719: }
  3053                           ;1.C: 720: }
  3054                           ;1.C: 721: if(CH2_remotekey_num > 4) CH2_remotekey_num = 4;
  3055  0390  3005               	movlw	5
  3056  0391  0268               	subwf	_CH2_remotekey_num,w
  3057  0392  1C03               	skipc
  3058  0393  2B96               	goto	i1l3497
  3059  0394  3004               	movlw	4
  3060  0395  00E8               	movwf	_CH2_remotekey_num
  3061  0396                     i1l3497:	
  3062                           
  3063                           ;1.C: 722: PRESSED &= ~0x20;
  3064  0396  12F5               	bcf	_PRESSED,5
  3065                           
  3066                           ;1.C: 723: CH2_EEPROM_Write();
  3067  0397  25C8               	fcall	_CH2_EEPROM_Write
  3068                           
  3069                           ;1.C: 724: PA6 = 1;
  3070  0398  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0399  1705               	bsf	5,6
  3072  039A                     i1l3503:	
  3073                           
  3074                           ;1.C: 725: }
  3075                           ;1.C: 726: if((PRESSED&0x40) == 0x40){
  3076  039A  1F75               	btfss	_PRESSED,6
  3077  039B  2BF8               	goto	i1l3531
  3078                           
  3079                           ;1.C: 727: if( (Match_remotekey != CH3_remotekey[0]) &&
  3080                           ;1.C: 728: (Match_remotekey != CH3_remotekey[1]) &&
  3081                           ;1.C: 729: (Match_remotekey != CH3_remotekey[2]) &&
  3082                           ;1.C: 730: (Match_remotekey != CH3_remotekey[3])
  3083                           ;1.C: 731: ){
  3084  039C  0823               	movf	_Match_remotekey+3,w
  3085  039D  0650               	xorwf	_CH3_remotekey+3,w
  3086  039E  1D03               	skipz
  3087  039F  2BAA               	goto	u263_25
  3088  03A0  0822               	movf	_Match_remotekey+2,w
  3089  03A1  064F               	xorwf	_CH3_remotekey+2,w
  3090  03A2  1D03               	skipz
  3091  03A3  2BAA               	goto	u263_25
  3092  03A4  0821               	movf	_Match_remotekey+1,w
  3093  03A5  064E               	xorwf	_CH3_remotekey+1,w
  3094  03A6  1D03               	skipz
  3095  03A7  2BAA               	goto	u263_25
  3096  03A8  0820               	movf	_Match_remotekey,w
  3097  03A9  064D               	xorwf	_CH3_remotekey,w
  3098  03AA                     u263_25:	
  3099  03AA  1903               	skipnz
  3100  03AB  2BEE               	goto	i1l3521
  3101  03AC  0823               	movf	_Match_remotekey+3,w
  3102  03AD  0654               	xorwf	_CH3_remotekey+7,w
  3103  03AE  1D03               	skipz
  3104  03AF  2BBA               	goto	u264_25
  3105  03B0  0822               	movf	_Match_remotekey+2,w
  3106  03B1  0653               	xorwf	_CH3_remotekey+6,w
  3107  03B2  1D03               	skipz
  3108  03B3  2BBA               	goto	u264_25
  3109  03B4  0821               	movf	_Match_remotekey+1,w
  3110  03B5  0652               	xorwf	_CH3_remotekey+5,w
  3111  03B6  1D03               	skipz
  3112  03B7  2BBA               	goto	u264_25
  3113  03B8  0820               	movf	_Match_remotekey,w
  3114  03B9  0651               	xorwf	_CH3_remotekey+4,w
  3115  03BA                     u264_25:	
  3116  03BA  1903               	skipnz
  3117  03BB  2BEE               	goto	i1l3521
  3118  03BC  0823               	movf	_Match_remotekey+3,w
  3119  03BD  0658               	xorwf	_CH3_remotekey+11,w
  3120  03BE  1D03               	skipz
  3121  03BF  2BCA               	goto	u265_25
  3122  03C0  0822               	movf	_Match_remotekey+2,w
  3123  03C1  0657               	xorwf	_CH3_remotekey+10,w
  3124  03C2  1D03               	skipz
  3125  03C3  2BCA               	goto	u265_25
  3126  03C4  0821               	movf	_Match_remotekey+1,w
  3127  03C5  0656               	xorwf	_CH3_remotekey+9,w
  3128  03C6  1D03               	skipz
  3129  03C7  2BCA               	goto	u265_25
  3130  03C8  0820               	movf	_Match_remotekey,w
  3131  03C9  0655               	xorwf	_CH3_remotekey+8,w
  3132  03CA                     u265_25:	
  3133  03CA  1903               	skipnz
  3134  03CB  2BEE               	goto	i1l3521
  3135  03CC  0823               	movf	_Match_remotekey+3,w
  3136  03CD  065C               	xorwf	_CH3_remotekey+15,w
  3137  03CE  1D03               	skipz
  3138  03CF  2BDA               	goto	u266_25
  3139  03D0  0822               	movf	_Match_remotekey+2,w
  3140  03D1  065B               	xorwf	_CH3_remotekey+14,w
  3141  03D2  1D03               	skipz
  3142  03D3  2BDA               	goto	u266_25
  3143  03D4  0821               	movf	_Match_remotekey+1,w
  3144  03D5  065A               	xorwf	_CH3_remotekey+13,w
  3145  03D6  1D03               	skipz
  3146  03D7  2BDA               	goto	u266_25
  3147  03D8  0820               	movf	_Match_remotekey,w
  3148  03D9  0659               	xorwf	_CH3_remotekey+12,w
  3149  03DA                     u266_25:	
  3150  03DA  1903               	skipnz
  3151  03DB  2BEE               	goto	i1l3521
  3152                           
  3153                           ;1.C: 732: if(CH3_remotekey_num < 4){
  3154  03DC  3004               	movlw	4
  3155  03DD  0269               	subwf	_CH3_remotekey_num,w
  3156  03DE  1803               	skipnc
  3157  03DF  2BE7               	goto	i1l3519
  3158                           
  3159                           ;1.C: 733: CH3_remotekey[CH3_remotekey_num] = Match_remotekey;
  3160  03E0  0869               	movf	_CH3_remotekey_num,w
  3161  03E1  243C               	fcall	PL9	;call to abstracted procedure
  3162  03E2  3E4D               	addlw	_CH3_remotekey& (0+255)
  3163  03E3  0084               	movwf	4
  3164  03E4  242F               	fcall	PL3	;call to abstracted procedure
  3165                           
  3166                           ;1.C: 734: CH3_remotekey_num++;
  3167  03E5  0AE9               	incf	_CH3_remotekey_num,f
  3168                           
  3169                           ;1.C: 735: }else{
  3170  03E6  2BEE               	goto	i1l3521
  3171  03E7                     i1l3519:	
  3172                           
  3173                           ;1.C: 736: CH3_remotekey[CH3_remotekey_Latest] = Match_remotekey;
  3174  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  3175  03E8  0839               	movf	_CH3_remotekey_Latest^(0+128),w
  3176  03E9  243C               	fcall	PL9	;call to abstracted procedure
  3177  03EA  3E4D               	addlw	_CH3_remotekey& (0+255)
  3178  03EB  0084               	movwf	4
  3179  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  3180  03ED  242F               	fcall	PL3	;call to abstracted procedure
  3181  03EE                     i1l3521:	
  3182                           
  3183                           ;1.C: 737: }
  3184                           ;1.C: 738: }
  3185                           ;1.C: 739: if(CH3_remotekey_num > 4) CH3_remotekey_num = 4;
  3186  03EE  3005               	movlw	5
  3187  03EF  0269               	subwf	_CH3_remotekey_num,w
  3188  03F0  1C03               	skipc
  3189  03F1  2BF4               	goto	i1l3525
  3190  03F2  3004               	movlw	4
  3191  03F3  00E9               	movwf	_CH3_remotekey_num
  3192  03F4                     i1l3525:	
  3193                           
  3194                           ;1.C: 740: PRESSED &= ~0x40;
  3195  03F4  1375               	bcf	_PRESSED,6
  3196                           
  3197                           ;1.C: 741: CH3_EEPROM_Write();
  3198  03F5  2588               	fcall	_CH3_EEPROM_Write
  3199                           
  3200                           ;1.C: 742: PA5 = 1;
  3201  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3202  03F7  1685               	bsf	5,5
  3203  03F8                     i1l3531:	
  3204                           
  3205                           ;1.C: 743: }
  3206                           ;1.C: 744: KEY_Match_counter = 0;
  3207  03F8  01A5               	clrf	_KEY_Match_counter
  3208                           
  3209                           ;1.C: 745: PC0 = 1;
  3210  03F9  1407               	bsf	7,0
  3211  03FA  2C06               	goto	i1l1016
  3212  03FB                     i1l3537:	
  3213  03FB  0825               	movf	_KEY_Match_counter,w
  3214                           
  3215                           ; Switch size 1, requested type "space"
  3216                           ; Number of cases is 4, Range of values is 0 to 3
  3217                           ; switch strategies available:
  3218                           ; Name         Instructions Cycles
  3219                           ; direct_byte           10     6 (fixed)
  3220                           ; simple_byte           13     7 (average)
  3221                           ; jumptable            260     6 (fixed)
  3222                           ; rangetable             8     6 (fixed)
  3223                           ; spacedrange           14     9 (fixed)
  3224                           ; locatedrange           4     3 (fixed)
  3225                           ;	Chosen strategy is direct_byte
  3226  03FC  0084               	movwf	4
  3227  03FD  3004               	movlw	4
  3228  03FE  0204               	subwf	4,w
  3229  03FF  1803               	skipnc
  3230  0400  2C06               	goto	i1l1016
  3231  0401  3006               	movlw	high i1S3877
  3232  0402  008A               	movwf	10
  3233  0403  30EC               	movlw	low i1S3877
  3234  0404  0704               	addwf	4,w
  3235  0405  0082               	movwf	2
  3236  0406                     i1l1016:	
  3237                           
  3238                           ;1.C: 749: }
  3239                           ;1.C: 752: if( ((PRESSED&0x10) == 0) &&
  3240                           ;1.C: 753: ((PRESSED&0x20) == 0) &&
  3241                           ;1.C: 754: ((PRESSED&0x40) == 0)
  3242                           ;1.C: 755: ){
  3243  0406  1E75               	btfss	_PRESSED,4
  3244  0407  1AF5               	btfsc	_PRESSED,5
  3245  0408  0008               	return
  3246  0409  1B75               	btfsc	_PRESSED,6
  3247  040A  0008               	return
  3248                           
  3249                           ;1.C: 756: if((PRESSED&0x0F) > 0){
  3250  040B  0875               	movf	_PRESSED,w
  3251  040C  390F               	andlw	15
  3252  040D  1D03               	btfss	3,2
  3253  040E  2C18               	goto	i1l3561
  3254  040F  2C2C               	goto	i1l3563
  3255  0410                     i1l3547:	
  3256                           
  3257                           ;1.C: 759: PA7 = ~PA7;
  3258  0410  3080               	movlw	128
  3259  0411                     L6:	
  3260  0411  0685               	xorwf	5,f
  3261                           
  3262                           ;1.C: 760: led1_debug();
  3263  0412  26F7               	fcall	_led1_debug
  3264                           
  3265                           ;1.C: 761: break;
  3266  0413  2C2C               	goto	i1l3563
  3267  0414                     i1l3551:	
  3268                           
  3269                           ;1.C: 763: PA6 = ~PA6;
  3270  0414  3040               	movlw	64
  3271  0415  2C11               	goto	L6
  3272  0416                     i1l3555:	
  3273                           
  3274                           ;1.C: 767: PA5 = ~PA5;
  3275  0416  3020               	movlw	32
  3276  0417  2C11               	goto	L6
  3277  0418                     i1l3561:	
  3278  0418  0875               	movf	_PRESSED,w
  3279  0419  390F               	andlw	15
  3280  041A  00F8               	movwf	??_KEY
  3281  041B  01F9               	clrf	??_KEY+1
  3282                           
  3283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3284                           ; Switch size 1, requested type "space"
  3285                           ; Number of cases is 1, Range of values is 0 to 0
  3286                           ; switch strategies available:
  3287                           ; Name         Instructions Cycles
  3288                           ; simple_byte            4     3 (average)
  3289                           ; direct_byte            7     6 (fixed)
  3290                           ; jumptable            260     6 (fixed)
  3291                           ; rangetable             5     6 (fixed)
  3292                           ; spacedrange            8     9 (fixed)
  3293                           ; locatedrange           1     3 (fixed)
  3294                           ;	Chosen strategy is simple_byte
  3295  041C  0879               	movf	??_KEY+1,w
  3296  041D  3A00               	xorlw	0	; case 0
  3297  041E  1903               	skipnz
  3298  041F  2C21               	goto	i1l3879
  3299  0420  2C2C               	goto	i1l3563
  3300  0421                     i1l3879:	
  3301                           
  3302                           ; Switch size 1, requested type "space"
  3303                           ; Number of cases is 3, Range of values is 1 to 4
  3304                           ; switch strategies available:
  3305                           ; Name         Instructions Cycles
  3306                           ; simple_byte           10     6 (average)
  3307                           ; direct_byte           13     9 (fixed)
  3308                           ; jumptable            263     9 (fixed)
  3309                           ;	Chosen strategy is simple_byte
  3310  0421  0878               	movf	??_KEY,w
  3311  0422  3A01               	xorlw	1	; case 1
  3312  0423  1903               	skipnz
  3313  0424  2C10               	goto	i1l3547
  3314  0425  3A03               	xorlw	3	; case 2
  3315  0426  1903               	skipnz
  3316  0427  2C14               	goto	i1l3551
  3317  0428  3A06               	xorlw	6	; case 4
  3318  0429  1903               	skipnz
  3319  042A  2C16               	goto	i1l3555
  3320  042B  2C2C               	goto	i1l3563
  3321  042C                     i1l3563:	
  3322                           
  3323                           ;1.C: 771: }
  3324                           ;1.C: 772: PRESSED &= 0xF0;
  3325  042C  30F0               	movlw	240
  3326  042D  05F5               	andwf	_PRESSED,f
  3327  042E  0008               	return
  3328  042F                     __end_of_KEY:	
  3329  042F                     PL3:	
  3330  042F  0820               	movf	_Match_remotekey,w
  3331  0430  1383               	bcf	3,7	;select IRP bank0
  3332  0431  0080               	movwf	0
  3333  0432  0A84               	incf	4,f
  3334  0433  0821               	movf	_Match_remotekey+1,w
  3335  0434  0080               	movwf	0
  3336  0435  0A84               	incf	4,f
  3337  0436  0822               	movf	_Match_remotekey+2,w
  3338  0437  0080               	movwf	0
  3339  0438  0A84               	incf	4,f
  3340  0439  0823               	movf	_Match_remotekey+3,w
  3341  043A  0080               	movwf	0
  3342  043B  0008               	return
  3343  043C                     PL9:	
  3344  043C  00F8               	movwf	??_KEY
  3345  043D  1003               	clrc
  3346  043E  0DF8               	rlf	??_KEY,f
  3347  043F  1003               	clrc
  3348  0440  0D78               	rlf	??_KEY,w
  3349  0441  0008               	return
  3350                           
  3351                           	psect	swtext1
  3352  06EC                     __pswtext1:	
  3353  06EC                     i1S3877:	
  3354  06EC  2ABC               	ljmp	i1l3431
  3355  06ED  2AC2               	ljmp	i1l1022
  3356  06EE  2ACD               	ljmp	i1l1026
  3357  06EF  2AD8               	ljmp	i1l1030
  3358                           
  3359                           	psect	text689
  3360  0588                     __ptext689:	
  3361 ;; =============== function _KEY ends ============
  3362                           
  3363                           
  3364 ;; *************** function _CH3_EEPROM_Write *****************
  3365 ;; Defined at:
  3366 ;;		line 536 in file "1.C"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;		None               void
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, pclath, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 20/0
  3377 ;;		On exit  : 20/20
  3378 ;;		Unchanged: FFFDF/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1
  3380 ;;      Params:         0       0       0
  3381 ;;      Locals:         0       0       0
  3382 ;;      Temps:          0       0       0
  3383 ;;      Totals:         0       0       0
  3384 ;;Total ram usage:        0 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    1
  3387 ;; This function calls:
  3388 ;;		_IAPWrite
  3389 ;; This function is called by:
  3390 ;;		_KEY
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393  0588                     _CH3_EEPROM_Write:	
  3394                           
  3395                           ;1.C: 537: IAPWrite(0x08,((CH3_remotekey[0]&0x000000FF)>>0));
  3396                           
  3397                           ; Regs used in _CH3_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3398  0588  084D               	movf	_CH3_remotekey,w
  3399  0589  00F6               	movwf	?_IAPWrite
  3400  058A  3008               	movlw	8
  3401  058B  268E               	fcall	_IAPWrite
  3402                           
  3403                           ;1.C: 538: IAPWrite(0x09,((CH3_remotekey[0]&0x0000FF00)>>8));
  3404  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3405  058D  084E               	movf	_CH3_remotekey+1,w
  3406  058E  00F6               	movwf	?_IAPWrite
  3407  058F  3009               	movlw	9
  3408  0590  268E               	fcall	_IAPWrite
  3409                           
  3410                           ;1.C: 539: IAPWrite(0x0A,((CH3_remotekey[0]&0x00FF0000)>>16));
  3411  0591  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0592  084F               	movf	_CH3_remotekey+2,w
  3413  0593  00F6               	movwf	?_IAPWrite
  3414  0594  300A               	movlw	10
  3415  0595  268E               	fcall	_IAPWrite
  3416                           
  3417                           ;1.C: 541: IAPWrite(0x14,((CH3_remotekey[1]&0x000000FF)>>0));
  3418  0596  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0597  0851               	movf	_CH3_remotekey+4,w
  3420  0598  00F6               	movwf	?_IAPWrite
  3421  0599  3014               	movlw	20
  3422  059A  268E               	fcall	_IAPWrite
  3423                           
  3424                           ;1.C: 542: IAPWrite(0x15,((CH3_remotekey[1]&0x0000FF00)>>8));
  3425  059B  1283               	bcf	3,5	;RP0=0, select bank0
  3426  059C  0852               	movf	_CH3_remotekey+5,w
  3427  059D  00F6               	movwf	?_IAPWrite
  3428  059E  3015               	movlw	21
  3429  059F  268E               	fcall	_IAPWrite
  3430                           
  3431                           ;1.C: 543: IAPWrite(0x16,((CH3_remotekey[1]&0x00FF0000)>>16));
  3432  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  3433  05A1  0853               	movf	_CH3_remotekey+6,w
  3434  05A2  00F6               	movwf	?_IAPWrite
  3435  05A3  3016               	movlw	22
  3436  05A4  268E               	fcall	_IAPWrite
  3437                           
  3438                           ;1.C: 545: IAPWrite(0x20,((CH3_remotekey[2]&0x000000FF)>>0));
  3439  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  3440  05A6  0855               	movf	_CH3_remotekey+8,w
  3441  05A7  00F6               	movwf	?_IAPWrite
  3442  05A8  3020               	movlw	32
  3443  05A9  268E               	fcall	_IAPWrite
  3444                           
  3445                           ;1.C: 546: IAPWrite(0x21,((CH3_remotekey[2]&0x0000FF00)>>8));
  3446  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  3447  05AB  0856               	movf	_CH3_remotekey+9,w
  3448  05AC  00F6               	movwf	?_IAPWrite
  3449  05AD  3021               	movlw	33
  3450  05AE  268E               	fcall	_IAPWrite
  3451                           
  3452                           ;1.C: 547: IAPWrite(0x22,((CH3_remotekey[2]&0x00FF0000)>>16));
  3453  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3454  05B0  0857               	movf	_CH3_remotekey+10,w
  3455  05B1  00F6               	movwf	?_IAPWrite
  3456  05B2  3022               	movlw	34
  3457  05B3  268E               	fcall	_IAPWrite
  3458                           
  3459                           ;1.C: 549: IAPWrite(0x2C,((CH3_remotekey[3]&0x000000FF)>>0));
  3460  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  3461  05B5  0859               	movf	_CH3_remotekey+12,w
  3462  05B6  00F6               	movwf	?_IAPWrite
  3463  05B7  302C               	movlw	44
  3464  05B8  268E               	fcall	_IAPWrite
  3465                           
  3466                           ;1.C: 550: IAPWrite(0x2D,((CH3_remotekey[3]&0x0000FF00)>>8));
  3467  05B9  1283               	bcf	3,5	;RP0=0, select bank0
  3468  05BA  085A               	movf	_CH3_remotekey+13,w
  3469  05BB  00F6               	movwf	?_IAPWrite
  3470  05BC  302D               	movlw	45
  3471  05BD  268E               	fcall	_IAPWrite
  3472                           
  3473                           ;1.C: 551: IAPWrite(0x2E,((CH3_remotekey[3]&0x00FF0000)>>16));
  3474  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  3475  05BF  085B               	movf	_CH3_remotekey+14,w
  3476  05C0  00F6               	movwf	?_IAPWrite
  3477  05C1  302E               	movlw	46
  3478  05C2  268E               	fcall	_IAPWrite
  3479                           
  3480                           ;1.C: 553: IAPWrite(0x32,CH3_remotekey_num);
  3481  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  3482  05C4  0869               	movf	_CH3_remotekey_num,w
  3483  05C5  00F6               	movwf	?_IAPWrite
  3484  05C6  3032               	movlw	50
  3485  05C7  2E8E               	ljmp	_IAPWrite
  3486  05C8                     __end_of_CH3_EEPROM_Write:	
  3487                           
  3488                           	psect	text690
  3489  05C8                     __ptext690:	
  3490 ;; =============== function _CH3_EEPROM_Write ends ============
  3491                           
  3492                           
  3493 ;; *************** function _CH2_EEPROM_Write *****************
  3494 ;; Defined at:
  3495 ;;		line 517 in file "1.C"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;		None
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;		None               void
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0, pclath, cstack
  3504 ;; Tracked objects:
  3505 ;;		On entry : 20/0
  3506 ;;		On exit  : 20/20
  3507 ;;		Unchanged: FFFDF/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1
  3509 ;;      Params:         0       0       0
  3510 ;;      Locals:         0       0       0
  3511 ;;      Temps:          0       0       0
  3512 ;;      Totals:         0       0       0
  3513 ;;Total ram usage:        0 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		_IAPWrite
  3518 ;; This function is called by:
  3519 ;;		_KEY
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522  05C8                     _CH2_EEPROM_Write:	
  3523                           
  3524                           ;1.C: 518: IAPWrite(0x04,((CH2_remotekey[0]&0x000000FF)>>0));
  3525                           
  3526                           ; Regs used in _CH2_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3527  05C8  083D               	movf	_CH2_remotekey,w
  3528  05C9  00F6               	movwf	?_IAPWrite
  3529  05CA  3004               	movlw	4
  3530  05CB  268E               	fcall	_IAPWrite
  3531                           
  3532                           ;1.C: 519: IAPWrite(0x05,((CH2_remotekey[0]&0x0000FF00)>>8));
  3533  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  3534  05CD  083E               	movf	_CH2_remotekey+1,w
  3535  05CE  00F6               	movwf	?_IAPWrite
  3536  05CF  3005               	movlw	5
  3537  05D0  268E               	fcall	_IAPWrite
  3538                           
  3539                           ;1.C: 520: IAPWrite(0x06,((CH2_remotekey[0]&0x00FF0000)>>16));
  3540  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3541  05D2  083F               	movf	_CH2_remotekey+2,w
  3542  05D3  00F6               	movwf	?_IAPWrite
  3543  05D4  3006               	movlw	6
  3544  05D5  268E               	fcall	_IAPWrite
  3545                           
  3546                           ;1.C: 522: IAPWrite(0x10,((CH2_remotekey[1]&0x000000FF)>>0));
  3547  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3548  05D7  0841               	movf	_CH2_remotekey+4,w
  3549  05D8  00F6               	movwf	?_IAPWrite
  3550  05D9  3010               	movlw	16
  3551  05DA  268E               	fcall	_IAPWrite
  3552                           
  3553                           ;1.C: 523: IAPWrite(0x11,((CH2_remotekey[1]&0x0000FF00)>>8));
  3554  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3555  05DC  0842               	movf	_CH2_remotekey+5,w
  3556  05DD  00F6               	movwf	?_IAPWrite
  3557  05DE  3011               	movlw	17
  3558  05DF  268E               	fcall	_IAPWrite
  3559                           
  3560                           ;1.C: 524: IAPWrite(0x12,((CH2_remotekey[1]&0x00FF0000)>>16));
  3561  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3562  05E1  0843               	movf	_CH2_remotekey+6,w
  3563  05E2  00F6               	movwf	?_IAPWrite
  3564  05E3  3012               	movlw	18
  3565  05E4  268E               	fcall	_IAPWrite
  3566                           
  3567                           ;1.C: 526: IAPWrite(0x1C,((CH2_remotekey[2]&0x000000FF)>>0));
  3568  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3569  05E6  0845               	movf	_CH2_remotekey+8,w
  3570  05E7  00F6               	movwf	?_IAPWrite
  3571  05E8  301C               	movlw	28
  3572  05E9  268E               	fcall	_IAPWrite
  3573                           
  3574                           ;1.C: 527: IAPWrite(0x1D,((CH2_remotekey[2]&0x0000FF00)>>8));
  3575  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3576  05EB  0846               	movf	_CH2_remotekey+9,w
  3577  05EC  00F6               	movwf	?_IAPWrite
  3578  05ED  301D               	movlw	29
  3579  05EE  268E               	fcall	_IAPWrite
  3580                           
  3581                           ;1.C: 528: IAPWrite(0x1E,((CH2_remotekey[2]&0x00FF0000)>>16));
  3582  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3583  05F0  0847               	movf	_CH2_remotekey+10,w
  3584  05F1  00F6               	movwf	?_IAPWrite
  3585  05F2  301E               	movlw	30
  3586  05F3  268E               	fcall	_IAPWrite
  3587                           
  3588                           ;1.C: 530: IAPWrite(0x28,((CH2_remotekey[3]&0x000000FF)>>0));
  3589  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3590  05F5  0849               	movf	_CH2_remotekey+12,w
  3591  05F6  00F6               	movwf	?_IAPWrite
  3592  05F7  3028               	movlw	40
  3593  05F8  268E               	fcall	_IAPWrite
  3594                           
  3595                           ;1.C: 531: IAPWrite(0x29,((CH2_remotekey[3]&0x0000FF00)>>8));
  3596  05F9  1283               	bcf	3,5	;RP0=0, select bank0
  3597  05FA  084A               	movf	_CH2_remotekey+13,w
  3598  05FB  00F6               	movwf	?_IAPWrite
  3599  05FC  3029               	movlw	41
  3600  05FD  268E               	fcall	_IAPWrite
  3601                           
  3602                           ;1.C: 532: IAPWrite(0x2A,((CH2_remotekey[3]&0x00FF0000)>>16));
  3603  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3604  05FF  084B               	movf	_CH2_remotekey+14,w
  3605  0600  00F6               	movwf	?_IAPWrite
  3606  0601  302A               	movlw	42
  3607  0602  268E               	fcall	_IAPWrite
  3608                           
  3609                           ;1.C: 534: IAPWrite(0x31,CH2_remotekey_num);
  3610  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0604  0868               	movf	_CH2_remotekey_num,w
  3612  0605  00F6               	movwf	?_IAPWrite
  3613  0606  3031               	movlw	49
  3614  0607  2E8E               	ljmp	_IAPWrite
  3615  0608                     __end_of_CH2_EEPROM_Write:	
  3616                           
  3617                           	psect	text691
  3618  0608                     __ptext691:	
  3619 ;; =============== function _CH2_EEPROM_Write ends ============
  3620                           
  3621                           
  3622 ;; *************** function _CH1_EEPROM_Write *****************
  3623 ;; Defined at:
  3624 ;;		line 498 in file "1.C"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;		None
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;		None
  3629 ;; Return value:  Size  Location     Type
  3630 ;;		None               void
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, pclath, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 20/0
  3635 ;;		On exit  : 20/20
  3636 ;;		Unchanged: FFFDF/0
  3637 ;; Data sizes:     COMMON   BANK0   BANK1
  3638 ;;      Params:         0       0       0
  3639 ;;      Locals:         0       0       0
  3640 ;;      Temps:          0       0       0
  3641 ;;      Totals:         0       0       0
  3642 ;;Total ram usage:        0 bytes
  3643 ;; Hardware stack levels used:    1
  3644 ;; Hardware stack levels required when called:    1
  3645 ;; This function calls:
  3646 ;;		_IAPWrite
  3647 ;; This function is called by:
  3648 ;;		_KEY
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651  0608                     _CH1_EEPROM_Write:	
  3652                           
  3653                           ;1.C: 499: IAPWrite(0x00,((CH1_remotekey[0]&0x000000FF)>>0));
  3654                           
  3655                           ; Regs used in _CH1_EEPROM_Write: [wreg+status,2+status,0+pclath+cstack]
  3656  0608  082D               	movf	_CH1_remotekey,w
  3657  0609  00F6               	movwf	?_IAPWrite
  3658  060A  3000               	movlw	0
  3659  060B  268E               	fcall	_IAPWrite
  3660                           
  3661                           ;1.C: 500: IAPWrite(0x01,((CH1_remotekey[0]&0x0000FF00)>>8));
  3662  060C  1283               	bcf	3,5	;RP0=0, select bank0
  3663  060D  082E               	movf	_CH1_remotekey+1,w
  3664  060E  00F6               	movwf	?_IAPWrite
  3665  060F  3001               	movlw	1
  3666  0610  268E               	fcall	_IAPWrite
  3667                           
  3668                           ;1.C: 501: IAPWrite(0x02,((CH1_remotekey[0]&0x00FF0000)>>16));
  3669  0611  1283               	bcf	3,5	;RP0=0, select bank0
  3670  0612  082F               	movf	_CH1_remotekey+2,w
  3671  0613  00F6               	movwf	?_IAPWrite
  3672  0614  3002               	movlw	2
  3673  0615  268E               	fcall	_IAPWrite
  3674                           
  3675                           ;1.C: 503: IAPWrite(0x0C,((CH1_remotekey[1]&0x000000FF)>>0));
  3676  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0617  0831               	movf	_CH1_remotekey+4,w
  3678  0618  00F6               	movwf	?_IAPWrite
  3679  0619  300C               	movlw	12
  3680  061A  268E               	fcall	_IAPWrite
  3681                           
  3682                           ;1.C: 504: IAPWrite(0x0D,((CH1_remotekey[1]&0x0000FF00)>>8));
  3683  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3684  061C  0832               	movf	_CH1_remotekey+5,w
  3685  061D  00F6               	movwf	?_IAPWrite
  3686  061E  300D               	movlw	13
  3687  061F  268E               	fcall	_IAPWrite
  3688                           
  3689                           ;1.C: 505: IAPWrite(0x0E,((CH1_remotekey[1]&0x00FF0000)>>16));
  3690  0620  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0621  0833               	movf	_CH1_remotekey+6,w
  3692  0622  00F6               	movwf	?_IAPWrite
  3693  0623  300E               	movlw	14
  3694  0624  268E               	fcall	_IAPWrite
  3695                           
  3696                           ;1.C: 507: IAPWrite(0x18,((CH1_remotekey[2]&0x000000FF)>>0));
  3697  0625  1283               	bcf	3,5	;RP0=0, select bank0
  3698  0626  0835               	movf	_CH1_remotekey+8,w
  3699  0627  00F6               	movwf	?_IAPWrite
  3700  0628  3018               	movlw	24
  3701  0629  268E               	fcall	_IAPWrite
  3702                           
  3703                           ;1.C: 508: IAPWrite(0x19,((CH1_remotekey[2]&0x0000FF00)>>8));
  3704  062A  1283               	bcf	3,5	;RP0=0, select bank0
  3705  062B  0836               	movf	_CH1_remotekey+9,w
  3706  062C  00F6               	movwf	?_IAPWrite
  3707  062D  3019               	movlw	25
  3708  062E  268E               	fcall	_IAPWrite
  3709                           
  3710                           ;1.C: 509: IAPWrite(0x1A,((CH1_remotekey[2]&0x00FF0000)>>16));
  3711  062F  1283               	bcf	3,5	;RP0=0, select bank0
  3712  0630  0837               	movf	_CH1_remotekey+10,w
  3713  0631  00F6               	movwf	?_IAPWrite
  3714  0632  301A               	movlw	26
  3715  0633  268E               	fcall	_IAPWrite
  3716                           
  3717                           ;1.C: 511: IAPWrite(0x24,((CH1_remotekey[3]&0x000000FF)>>0));
  3718  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0635  0839               	movf	_CH1_remotekey+12,w
  3720  0636  00F6               	movwf	?_IAPWrite
  3721  0637  3024               	movlw	36
  3722  0638  268E               	fcall	_IAPWrite
  3723                           
  3724                           ;1.C: 512: IAPWrite(0x25,((CH1_remotekey[3]&0x0000FF00)>>8));
  3725  0639  1283               	bcf	3,5	;RP0=0, select bank0
  3726  063A  083A               	movf	_CH1_remotekey+13,w
  3727  063B  00F6               	movwf	?_IAPWrite
  3728  063C  3025               	movlw	37
  3729  063D  268E               	fcall	_IAPWrite
  3730                           
  3731                           ;1.C: 513: IAPWrite(0x26,((CH1_remotekey[3]&0x00FF0000)>>16));
  3732  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3733  063F  083B               	movf	_CH1_remotekey+14,w
  3734  0640  00F6               	movwf	?_IAPWrite
  3735  0641  3026               	movlw	38
  3736  0642  268E               	fcall	_IAPWrite
  3737                           
  3738                           ;1.C: 515: IAPWrite(0x30,CH1_remotekey_num);
  3739  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0644  0867               	movf	_CH1_remotekey_num,w
  3741  0645  00F6               	movwf	?_IAPWrite
  3742  0646  3030               	movlw	48
  3743  0647  2E8E               	ljmp	_IAPWrite
  3744  0648                     __end_of_CH1_EEPROM_Write:	
  3745                           
  3746                           	psect	text692
  3747  06F0                     __ptext692:	
  3748 ;; =============== function _CH1_EEPROM_Write ends ============
  3749                           
  3750                           
  3751 ;; *************** function i1_EX_INT_FallingEdge *****************
  3752 ;; Defined at:
  3753 ;;		line 414 in file "1.C"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;		None               void
  3760 ;; Registers used:
  3761 ;;		None
  3762 ;; Tracked objects:
  3763 ;;		On entry : 20/0
  3764 ;;		On exit  : 20/20
  3765 ;;		Unchanged: FFFDF/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1
  3767 ;;      Params:         0       0       0
  3768 ;;      Locals:         0       0       0
  3769 ;;      Temps:          0       0       0
  3770 ;;      Totals:         0       0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_ISR
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779  06F0                     i1_EX_INT_FallingEdge:	
  3780                           
  3781                           ;1.C: 415: INTEDG =0;
  3782                           
  3783                           ; Regs used in i1_EX_INT_FallingEdge: []
  3784  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  3785  06F1  1301               	bcf	1,6
  3786                           
  3787                           ;1.C: 416: FLAGs &= ~0x01;
  3788  06F2  1072               	bcf	_FLAGs,0
  3789  06F3  0008               	return
  3790  06F4                     __end_ofi1_EX_INT_FallingEdge:	
  3791                           
  3792                           	psect	text693
  3793  0661                     __ptext693:	
  3794 ;; =============== function i1_EX_INT_FallingEdge ends ============
  3795                           
  3796                           
  3797 ;; *************** function ___wmul *****************
  3798 ;; Defined at:
  3799 ;;		line 3 in file "f:\program files (x86)\fmd\fmdide\data\sources\wmul.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;  multiplier      2    0[COMMON] unsigned int 
  3802 ;;  multiplicand    2    2[COMMON] unsigned int 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  product         2    4[COMMON] unsigned int 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  2    0[COMMON] unsigned int 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 20/20
  3811 ;;		On exit  : 20/20
  3812 ;;		Unchanged: FFFDF/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1
  3814 ;;      Params:         4       0       0
  3815 ;;      Locals:         2       0       0
  3816 ;;      Temps:          0       0       0
  3817 ;;      Totals:         6       0       0
  3818 ;;Total ram usage:        6 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_ISR
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826  0661                     ___wmul:	
  3827                           
  3828                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3829  0661  01FA               	clrf	___wmul@product
  3830  0662  01FB               	clrf	___wmul@product+1
  3831  0663                     i1l3601:	
  3832  0663  1C76               	btfss	___wmul@multiplier,0
  3833  0664  2E6B               	goto	i1l3605
  3834  0665  0878               	movf	___wmul@multiplicand,w
  3835  0666  07FA               	addwf	___wmul@product,f
  3836  0667  1803               	skipnc
  3837  0668  0AFB               	incf	___wmul@product+1,f
  3838  0669  0879               	movf	___wmul@multiplicand+1,w
  3839  066A  07FB               	addwf	___wmul@product+1,f
  3840  066B                     i1l3605:	
  3841  066B  1003               	clrc
  3842  066C  0DF8               	rlf	___wmul@multiplicand,f
  3843  066D  0DF9               	rlf	___wmul@multiplicand+1,f
  3844  066E  1003               	clrc
  3845  066F  0CF7               	rrf	___wmul@multiplier+1,f
  3846  0670  0CF6               	rrf	___wmul@multiplier,f
  3847  0671  0877               	movf	___wmul@multiplier+1,w
  3848  0672  0476               	iorwf	___wmul@multiplier,w
  3849  0673  1D03               	skipz
  3850  0674  2E63               	goto	i1l3601
  3851  0675  087B               	movf	___wmul@product+1,w
  3852  0676  00F7               	movwf	?___wmul+1
  3853  0677  087A               	movf	___wmul@product,w
  3854  0678  00F6               	movwf	?___wmul
  3855  0679  0008               	return
  3856  067A                     __end_of___wmul:	
  3857                           
  3858                           	psect	text694
  3859  068E                     __ptext694:	
  3860 ;; =============== function ___wmul ends ============
  3861                           
  3862                           
  3863 ;; *************** function _IAPWrite *****************
  3864 ;; Defined at:
  3865 ;;		line 487 in file "1.C"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  EEAddr          1    wreg     unsigned char 
  3868 ;;  Data            1    0[COMMON] unsigned char 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  EEAddr          1    1[COMMON] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;		None               void
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 20/0
  3877 ;;		On exit  : 20/20
  3878 ;;		Unchanged: FFFDF/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1
  3880 ;;      Params:         1       0       0
  3881 ;;      Locals:         1       0       0
  3882 ;;      Temps:          0       0       0
  3883 ;;      Totals:         2       0       0
  3884 ;;Total ram usage:        2 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_CH1_EEPROM_Write
  3890 ;;		_CH2_EEPROM_Write
  3891 ;;		_CH3_EEPROM_Write
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894  068E                     _IAPWrite:	
  3895                           
  3896                           ; Regs used in _IAPWrite: [wreg+status,2+status,0]
  3897                           ;IAPWrite@EEAddr stored from wreg
  3898  068E  00F7               	movwf	IAPWrite@EEAddr
  3899                           
  3900                           ;1.C: 488: GIE = 0;
  3901  068F  138B               	bcf	11,7
  3902  0690                     i1l969:	
  3903                           ;1.C: 489: while(GIE);
  3904                           
  3905  0690  1B8B               	btfsc	11,7
  3906  0691  2E90               	goto	i1l969
  3907                           
  3908                           ;1.C: 490: EEADR = EEAddr;
  3909  0692  0877               	movf	IAPWrite@EEAddr,w
  3910  0693  1683               	bsf	3,5	;RP0=1, select bank1
  3911  0694  009B               	movwf	27	;volatile
  3912                           
  3913                           ;1.C: 491: EEDAT = Data;
  3914  0695  0876               	movf	IAPWrite@Data,w
  3915  0696  009A               	movwf	26	;volatile
  3916  0697  3034               	movlw	52
  3917                           
  3918                           ;1.C: 492: EEIF = 0;
  3919  0698  1283               	bcf	3,5	;RP0=0, select bank0
  3920  0699  138C               	bcf	12,7
  3921                           
  3922                           ;1.C: 493: EECON1 |= 0x34;
  3923  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3924  069B  049C               	iorwf	28,f	;volatile
  3925                           
  3926                           ;1.C: 494: WR = 1;
  3927  069C  141D               	bsf	29,0
  3928  069D                     i1l972:	
  3929                           ;1.C: 495: while(WR);
  3930                           
  3931  069D  181D               	btfsc	29,0
  3932  069E  2E9D               	goto	i1l972
  3933                           
  3934                           ;1.C: 496: GIE = 1;
  3935  069F  178B               	bsf	11,7
  3936  06A0  0008               	return
  3937  06A1                     __end_of_IAPWrite:	
  3938                           
  3939                           	psect	text695
  3940  0442                     __ptext695:	
  3941 ;; =============== function _IAPWrite ends ============
  3942                           
  3943                           
  3944 ;; *************** function _KEYSCAN *****************
  3945 ;; Defined at:
  3946 ;;		line 583 in file "1.C"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;		None
  3951 ;; Return value:  Size  Location     Type
  3952 ;;		None               void
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0
  3955 ;; Tracked objects:
  3956 ;;		On entry : 20/0
  3957 ;;		On exit  : 20/0
  3958 ;;		Unchanged: FFFDF/0
  3959 ;; Data sizes:     COMMON   BANK0   BANK1
  3960 ;;      Params:         0       0       0
  3961 ;;      Locals:         0       0       0
  3962 ;;      Temps:          0       0       0
  3963 ;;      Totals:         0       0       0
  3964 ;;Total ram usage:        0 bytes
  3965 ;; Hardware stack levels used:    1
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_ISR
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972  0442                     _KEYSCAN:	
  3973                           
  3974                           ;1.C: 584: if(PRESSED == 0){
  3975                           
  3976                           ; Regs used in _KEYSCAN: [wreg+status,2+status,0]
  3977  0442  08F5               	movf	_PRESSED,f
  3978  0443  1D03               	skipz
  3979  0444  0008               	return
  3980                           
  3981                           ;1.C: 585: if(PC5 == 0){
  3982  0445  1A87               	btfsc	7,5
  3983  0446  2C7C               	goto	i1l3327
  3984                           
  3985                           ;1.C: 586: if(KEY1_LongPress < 125) PRESS_FLAG |= 0x01;
  3986  0447  307D               	movlw	125
  3987  0448  0273               	subwf	_KEY1_LongPress,w
  3988  0449  1803               	skipnc
  3989  044A  2C4C               	goto	i1l3293
  3990  044B  1427               	bsf	_PRESS_FLAG,0
  3991  044C                     i1l3293:	
  3992                           
  3993                           ;1.C: 587: if(KEY1_LongPress < 254) KEY1_LongPress++;
  3994  044C  30FE               	movlw	254
  3995  044D  0273               	subwf	_KEY1_LongPress,w
  3996  044E  1C03               	btfss	3,0
  3997  044F  0AF3               	incf	_KEY1_LongPress,f
  3998                           
  3999                           ;1.C: 588: if((KEY1_LongPress > 125) && (KEY1_LongPress < 250)){
  4000  0450  307E               	movlw	126
  4001  0451  0273               	subwf	_KEY1_LongPress,w
  4002  0452  1C03               	skipc
  4003  0453  2C5D               	goto	i1l3309
  4004  0454  30FA               	movlw	250
  4005  0455  0273               	subwf	_KEY1_LongPress,w
  4006  0456  1803               	skipnc
  4007  0457  2C5D               	goto	i1l3309
  4008                           
  4009                           ;1.C: 589: PRESS_FLAG |= 0x10;
  4010  0458  1627               	bsf	_PRESS_FLAG,4
  4011                           
  4012                           ;1.C: 590: match_slice = 0;
  4013  0459  01A8               	clrf	_match_slice
  4014                           
  4015                           ;1.C: 591: PC0 = 0;
  4016  045A  1007               	bcf	7,0
  4017                           
  4018                           ;1.C: 592: PA7 = 0;
  4019  045B  1385               	bcf	5,7
  4020                           
  4021                           ;1.C: 593: LONGPRESS_OverTime_Counter = 0;
  4022  045C  01A6               	clrf	_LONGPRESS_OverTime_Counter
  4023  045D                     i1l3309:	
  4024                           
  4025                           ;1.C: 594: }
  4026                           ;1.C: 595: if(KEY1_LongPress > 250){
  4027  045D  30FB               	movlw	251
  4028  045E  0273               	subwf	_KEY1_LongPress,w
  4029  045F  1C03               	skipc
  4030  0460  2C7D               	goto	i1l3329
  4031                           
  4032                           ;1.C: 596: CH1_remotekey[0] = 0xFFFFFFFF;
  4033  0461  30FF               	movlw	255
  4034  0462  00B0               	movwf	_CH1_remotekey+3
  4035  0463  00AF               	movwf	_CH1_remotekey+2
  4036  0464  00AE               	movwf	_CH1_remotekey+1
  4037  0465  00AD               	movwf	_CH1_remotekey
  4038                           
  4039                           ;1.C: 597: CH1_remotekey[1] = 0xFFFFFFFF;
  4040  0466  00B4               	movwf	_CH1_remotekey+7
  4041  0467  00B3               	movwf	_CH1_remotekey+6
  4042  0468  00B2               	movwf	_CH1_remotekey+5
  4043  0469  00B1               	movwf	_CH1_remotekey+4
  4044                           
  4045                           ;1.C: 598: CH1_remotekey[2] = 0xFFFFFFFF;
  4046  046A  00B8               	movwf	_CH1_remotekey+11
  4047  046B  00B7               	movwf	_CH1_remotekey+10
  4048  046C  00B6               	movwf	_CH1_remotekey+9
  4049  046D  00B5               	movwf	_CH1_remotekey+8
  4050                           
  4051                           ;1.C: 599: CH1_remotekey[3] = 0xFFFFFFFF;
  4052  046E  00BC               	movwf	_CH1_remotekey+15
  4053  046F  00BB               	movwf	_CH1_remotekey+14
  4054  0470  00BA               	movwf	_CH1_remotekey+13
  4055  0471  00B9               	movwf	_CH1_remotekey+12
  4056                           
  4057                           ;1.C: 600: CH1_remotekey_num = 0;
  4058  0472  01E7               	clrf	_CH1_remotekey_num
  4059                           
  4060                           ;1.C: 601: CH1_remotekey_Latest = 0;
  4061  0473  1683               	bsf	3,5	;RP0=1, select bank1
  4062  0474  01B7               	clrf	_CH1_remotekey_Latest^(0+128)
  4063                           
  4064                           ;1.C: 602: PRESS_FLAG &= ~0x10;
  4065  0475  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0476  1227               	bcf	_PRESS_FLAG,4
  4067                           
  4068                           ;1.C: 603: PRESS_FLAG &= ~0x01;
  4069  0477  1027               	bcf	_PRESS_FLAG,0
  4070                           
  4071                           ;1.C: 604: PC0 = 1;
  4072  0478  1407               	bsf	7,0
  4073                           
  4074                           ;1.C: 605: PA7 = 1;
  4075  0479  1785               	bsf	5,7
  4076                           
  4077                           ;1.C: 606: KEY_Match_counter = 0;
  4078  047A  01A5               	clrf	_KEY_Match_counter
  4079  047B  2C7D               	goto	i1l3329
  4080  047C                     i1l3327:	
  4081  047C  01F3               	clrf	_KEY1_LongPress
  4082  047D                     i1l3329:	
  4083                           
  4084                           ;1.C: 610: if(PA4 == 0){
  4085  047D  1A05               	btfsc	5,4
  4086  047E  2CB4               	goto	i1l3369
  4087                           
  4088                           ;1.C: 611: if(KEY2_LongPress < 125) PRESS_FLAG |= 0x02;
  4089  047F  307D               	movlw	125
  4090  0480  0274               	subwf	_KEY2_LongPress,w
  4091  0481  1803               	skipnc
  4092  0482  2C84               	goto	i1l3335
  4093  0483  14A7               	bsf	_PRESS_FLAG,1
  4094  0484                     i1l3335:	
  4095                           
  4096                           ;1.C: 612: if(KEY2_LongPress < 254) KEY2_LongPress++;
  4097  0484  30FE               	movlw	254
  4098  0485  0274               	subwf	_KEY2_LongPress,w
  4099  0486  1C03               	btfss	3,0
  4100  0487  0AF4               	incf	_KEY2_LongPress,f
  4101                           
  4102                           ;1.C: 613: if((KEY2_LongPress > 125) && (KEY2_LongPress < 250)){
  4103  0488  307E               	movlw	126
  4104  0489  0274               	subwf	_KEY2_LongPress,w
  4105  048A  1C03               	skipc
  4106  048B  2C95               	goto	i1l3351
  4107  048C  30FA               	movlw	250
  4108  048D  0274               	subwf	_KEY2_LongPress,w
  4109  048E  1803               	skipnc
  4110  048F  2C95               	goto	i1l3351
  4111                           
  4112                           ;1.C: 614: PRESS_FLAG |= 0x20;
  4113  0490  16A7               	bsf	_PRESS_FLAG,5
  4114                           
  4115                           ;1.C: 615: match_slice = 0;
  4116  0491  01A8               	clrf	_match_slice
  4117                           
  4118                           ;1.C: 616: PC0 = 0;
  4119  0492  1007               	bcf	7,0
  4120                           
  4121                           ;1.C: 617: PA6 = 0;
  4122  0493  1305               	bcf	5,6
  4123                           
  4124                           ;1.C: 618: LONGPRESS_OverTime_Counter = 0;
  4125  0494  01A6               	clrf	_LONGPRESS_OverTime_Counter
  4126  0495                     i1l3351:	
  4127                           
  4128                           ;1.C: 619: }
  4129                           ;1.C: 620: if(KEY2_LongPress > 250){
  4130  0495  30FB               	movlw	251
  4131  0496  0274               	subwf	_KEY2_LongPress,w
  4132  0497  1C03               	skipc
  4133  0498  2CB5               	goto	i1l3371
  4134                           
  4135                           ;1.C: 621: CH2_remotekey[0] = 0xFFFFFFFF;
  4136  0499  30FF               	movlw	255
  4137  049A  00C0               	movwf	_CH2_remotekey+3
  4138  049B  00BF               	movwf	_CH2_remotekey+2
  4139  049C  00BE               	movwf	_CH2_remotekey+1
  4140  049D  00BD               	movwf	_CH2_remotekey
  4141                           
  4142                           ;1.C: 622: CH2_remotekey[1] = 0xFFFFFFFF;
  4143  049E  00C4               	movwf	_CH2_remotekey+7
  4144  049F  00C3               	movwf	_CH2_remotekey+6
  4145  04A0  00C2               	movwf	_CH2_remotekey+5
  4146  04A1  00C1               	movwf	_CH2_remotekey+4
  4147                           
  4148                           ;1.C: 623: CH2_remotekey[2] = 0xFFFFFFFF;
  4149  04A2  00C8               	movwf	_CH2_remotekey+11
  4150  04A3  00C7               	movwf	_CH2_remotekey+10
  4151  04A4  00C6               	movwf	_CH2_remotekey+9
  4152  04A5  00C5               	movwf	_CH2_remotekey+8
  4153                           
  4154                           ;1.C: 624: CH2_remotekey[3] = 0xFFFFFFFF;
  4155  04A6  00CC               	movwf	_CH2_remotekey+15
  4156  04A7  00CB               	movwf	_CH2_remotekey+14
  4157  04A8  00CA               	movwf	_CH2_remotekey+13
  4158  04A9  00C9               	movwf	_CH2_remotekey+12
  4159                           
  4160                           ;1.C: 625: CH2_remotekey_num = 0;
  4161  04AA  01E8               	clrf	_CH2_remotekey_num
  4162                           
  4163                           ;1.C: 626: CH2_remotekey_Latest = 0;
  4164  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  4165  04AC  01B8               	clrf	_CH2_remotekey_Latest^(0+128)
  4166                           
  4167                           ;1.C: 627: PRESS_FLAG &= ~0x20;
  4168  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  4169  04AE  12A7               	bcf	_PRESS_FLAG,5
  4170                           
  4171                           ;1.C: 628: PRESS_FLAG &= ~0x02;
  4172  04AF  10A7               	bcf	_PRESS_FLAG,1
  4173                           
  4174                           ;1.C: 629: PC0 = 1;
  4175  04B0  1407               	bsf	7,0
  4176                           
  4177                           ;1.C: 630: PA6 = 1;
  4178  04B1  1705               	bsf	5,6
  4179                           
  4180                           ;1.C: 631: KEY_Match_counter = 0;
  4181  04B2  01A5               	clrf	_KEY_Match_counter
  4182  04B3  2CB5               	goto	i1l3371
  4183  04B4                     i1l3369:	
  4184  04B4  01F4               	clrf	_KEY2_LongPress
  4185  04B5                     i1l3371:	
  4186                           
  4187                           ;1.C: 635: if(PC4 == 0){
  4188  04B5  1A07               	btfsc	7,4
  4189  04B6  2CEC               	goto	i1l3411
  4190                           
  4191                           ;1.C: 636: if(KEY3_LongPress < 125) PRESS_FLAG |= 0x04;
  4192  04B7  307D               	movlw	125
  4193  04B8  0224               	subwf	_KEY3_LongPress,w
  4194  04B9  1803               	skipnc
  4195  04BA  2CBC               	goto	i1l3377
  4196  04BB  1527               	bsf	_PRESS_FLAG,2
  4197  04BC                     i1l3377:	
  4198                           
  4199                           ;1.C: 637: if(KEY3_LongPress < 254) KEY3_LongPress++;
  4200  04BC  30FE               	movlw	254
  4201  04BD  0224               	subwf	_KEY3_LongPress,w
  4202  04BE  1C03               	btfss	3,0
  4203  04BF  0AA4               	incf	_KEY3_LongPress,f
  4204                           
  4205                           ;1.C: 638: if((KEY3_LongPress > 125) && (KEY3_LongPress < 250)){
  4206  04C0  307E               	movlw	126
  4207  04C1  0224               	subwf	_KEY3_LongPress,w
  4208  04C2  1C03               	skipc
  4209  04C3  2CCD               	goto	i1l3393
  4210  04C4  30FA               	movlw	250
  4211  04C5  0224               	subwf	_KEY3_LongPress,w
  4212  04C6  1803               	skipnc
  4213  04C7  2CCD               	goto	i1l3393
  4214                           
  4215                           ;1.C: 639: PRESS_FLAG |= 0x40;
  4216  04C8  1727               	bsf	_PRESS_FLAG,6
  4217                           
  4218                           ;1.C: 640: match_slice = 0;
  4219  04C9  01A8               	clrf	_match_slice
  4220                           
  4221                           ;1.C: 641: PC0 = 0;
  4222  04CA  1007               	bcf	7,0
  4223                           
  4224                           ;1.C: 642: PA5 = 0;
  4225  04CB  1285               	bcf	5,5
  4226                           
  4227                           ;1.C: 643: LONGPRESS_OverTime_Counter = 0;
  4228  04CC  01A6               	clrf	_LONGPRESS_OverTime_Counter
  4229  04CD                     i1l3393:	
  4230                           
  4231                           ;1.C: 644: }
  4232                           ;1.C: 645: if(KEY3_LongPress > 250){
  4233  04CD  30FB               	movlw	251
  4234  04CE  0224               	subwf	_KEY3_LongPress,w
  4235  04CF  1C03               	skipc
  4236  04D0  2CED               	goto	i1l3413
  4237                           
  4238                           ;1.C: 646: CH3_remotekey[0] = 0xFFFFFFFF;
  4239  04D1  30FF               	movlw	255
  4240  04D2  00D0               	movwf	_CH3_remotekey+3
  4241  04D3  00CF               	movwf	_CH3_remotekey+2
  4242  04D4  00CE               	movwf	_CH3_remotekey+1
  4243  04D5  00CD               	movwf	_CH3_remotekey
  4244                           
  4245                           ;1.C: 647: CH3_remotekey[1] = 0xFFFFFFFF;
  4246  04D6  00D4               	movwf	_CH3_remotekey+7
  4247  04D7  00D3               	movwf	_CH3_remotekey+6
  4248  04D8  00D2               	movwf	_CH3_remotekey+5
  4249  04D9  00D1               	movwf	_CH3_remotekey+4
  4250                           
  4251                           ;1.C: 648: CH3_remotekey[2] = 0xFFFFFFFF;
  4252  04DA  00D8               	movwf	_CH3_remotekey+11
  4253  04DB  00D7               	movwf	_CH3_remotekey+10
  4254  04DC  00D6               	movwf	_CH3_remotekey+9
  4255  04DD  00D5               	movwf	_CH3_remotekey+8
  4256                           
  4257                           ;1.C: 649: CH3_remotekey[3] = 0xFFFFFFFF;
  4258  04DE  00DC               	movwf	_CH3_remotekey+15
  4259  04DF  00DB               	movwf	_CH3_remotekey+14
  4260  04E0  00DA               	movwf	_CH3_remotekey+13
  4261  04E1  00D9               	movwf	_CH3_remotekey+12
  4262                           
  4263                           ;1.C: 650: CH3_remotekey_num = 0;
  4264  04E2  01E9               	clrf	_CH3_remotekey_num
  4265                           
  4266                           ;1.C: 651: CH3_remotekey_Latest = 0;
  4267  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  4268  04E4  01B9               	clrf	_CH3_remotekey_Latest^(0+128)
  4269                           
  4270                           ;1.C: 652: PRESS_FLAG &= ~0x40;
  4271  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  4272  04E6  1327               	bcf	_PRESS_FLAG,6
  4273                           
  4274                           ;1.C: 653: PRESS_FLAG &= ~0x04;
  4275  04E7  1127               	bcf	_PRESS_FLAG,2
  4276                           
  4277                           ;1.C: 654: PC0 = 1;
  4278  04E8  1407               	bsf	7,0
  4279                           
  4280                           ;1.C: 655: PA5 = 1;
  4281  04E9  1685               	bsf	5,5
  4282                           
  4283                           ;1.C: 656: KEY_Match_counter = 0;
  4284  04EA  01A5               	clrf	_KEY_Match_counter
  4285  04EB  2CED               	goto	i1l3413
  4286  04EC                     i1l3411:	
  4287  04EC  01A4               	clrf	_KEY3_LongPress
  4288  04ED                     i1l3413:	
  4289                           
  4290                           ;1.C: 660: if((PRESS_FLAG>0)&&(PC5==1)&&(PA4==1)&&(PC4==1)){
  4291  04ED  0827               	movf	_PRESS_FLAG,w
  4292  04EE  1D03               	skipz
  4293  04EF  1E87               	btfss	7,5
  4294  04F0  0008               	return
  4295  04F1  1A05               	btfsc	5,4
  4296  04F2  1E07               	btfss	7,4
  4297  04F3  0008               	return
  4298                           
  4299                           ;1.C: 661: PRESSED = PRESS_FLAG;
  4300  04F4  00F5               	movwf	_PRESSED
  4301                           
  4302                           ;1.C: 662: PRESS_FLAG = 0;
  4303  04F5  01A7               	clrf	_PRESS_FLAG
  4304  04F6  0008               	return
  4305  04F7                     __end_of_KEYSCAN:	
  4306                           
  4307                           	psect	text696
  4308  06F7                     __ptext696:	
  4309 ;; =============== function _KEYSCAN ends ============
  4310                           
  4311                           
  4312 ;; *************** function _led1_debug *****************
  4313 ;; Defined at:
  4314 ;;		line 397 in file "1.C"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;		None
  4317 ;; Auto vars:     Size  Location     Type
  4318 ;;		None
  4319 ;; Return value:  Size  Location     Type
  4320 ;;		None               void
  4321 ;; Registers used:
  4322 ;;		None
  4323 ;; Tracked objects:
  4324 ;;		On entry : 20/0
  4325 ;;		On exit  : 20/0
  4326 ;;		Unchanged: FFFFFFDF/0
  4327 ;; Data sizes:     COMMON   BANK0   BANK1
  4328 ;;      Params:         0       0       0
  4329 ;;      Locals:         0       0       0
  4330 ;;      Temps:          0       0       0
  4331 ;;      Totals:         0       0       0
  4332 ;;Total ram usage:        0 bytes
  4333 ;; Hardware stack levels used:    1
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_ISR
  4338 ;;		_KEY
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341  06F7                     _led1_debug:	
  4342                           
  4343                           ; Regs used in _led1_debug: []
  4344  06F7  0008               	return
  4345  06F8                     __end_of_led1_debug:	
  4346                           
  4347                           	psect	text697
  4348  06F4                     __ptext697:	
  4349 ;; =============== function _led1_debug ends ============
  4350                           
  4351                           
  4352 ;; *************** function _EX_INT_RisingEdge *****************
  4353 ;; Defined at:
  4354 ;;		line 410 in file "1.C"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;		None
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;		None
  4359 ;; Return value:  Size  Location     Type
  4360 ;;		None               void
  4361 ;; Registers used:
  4362 ;;		None
  4363 ;; Tracked objects:
  4364 ;;		On entry : 20/20
  4365 ;;		On exit  : 20/20
  4366 ;;		Unchanged: FFFDF/0
  4367 ;; Data sizes:     COMMON   BANK0   BANK1
  4368 ;;      Params:         0       0       0
  4369 ;;      Locals:         0       0       0
  4370 ;;      Temps:          0       0       0
  4371 ;;      Totals:         0       0       0
  4372 ;;Total ram usage:        0 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; This function calls:
  4375 ;;		Nothing
  4376 ;; This function is called by:
  4377 ;;		_ISR
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380  06F4                     _EX_INT_RisingEdge:	
  4381                           
  4382                           ;1.C: 411: INTEDG =1;
  4383                           
  4384                           ; Regs used in _EX_INT_RisingEdge: []
  4385  06F4  1701               	bsf	1,6
  4386                           
  4387                           ;1.C: 412: FLAGs |= 0x01;
  4388  06F5  1472               	bsf	_FLAGs,0
  4389  06F6  0008               	return
  4390  06F7                     __end_of_EX_INT_RisingEdge:	
  4391                           
  4392                           	psect	text698
  4393  0000                     __ptext698:	
  4394 ;; =============== function _EX_INT_RisingEdge ends ============
  4395                           
  4396  007E                     btemp	set	126	;btemp
  4397  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Feb 15 18:46:00 2020

                IAPRead@EEAddr 00AF                              _i 00AE                              pc 0002  
                           _RD 04E0                             _WR 04E8                             fsr 0004  
          ___wmul@multiplicand 0078                 _KEY3_LongPress 0024                            _C1R 08CA  
                          _C2R 08D2                            l951 0000                            l960 0000  
                          l945 0000                            l954 0000                            l963 0000  
                          l957 0000                            l966 0000                            l990 0000  
                          l987 0000                            _GIE 005F                            _PA2 002A  
                          _PA3 002B                            _PC0 0038                            _PA4 002C  
                          _PA5 002D                            _PA6 002E                            _PA7 002F  
                          _PC4 003C                            _PC5 003D                            _KEY 02B6  
                          _ISR 0010                            _SR0 0CF6                            _SR1 0CF7  
                          _PSA 040B                            _VR0 08C0                            _VR1 08C1  
                          _VR2 08C2                            _VR3 08C3                            _VRR 08C5  
                          _num 002A                            fsr0 0004                            indf 0000  
     __end_of_CH2_EEPROM_Write 0608                __end_of_IAPRead 06E3                           ?_KEY 0076  
                         ?_ISR 0076                __end_of_KEYSCAN 04F7                           _C1OE 08CD  
                         _C2OE 08D5                           _C1ON 08CF                           _C2ON 08D7  
                         l3721 0000                           l3801 0000                           l3715 0000  
                         l3731 0000                           l3723 0000                           l3803 0000  
                         l3811 0000                           l3733 0000                           l3725 0000  
                         l3717 0000                           l3741 0000                           l3821 0000  
                         l3813 0000                           l3805 0000                           l3735 0000  
                         l3727 0000                           l3719 0000                           l3751 0000  
                         l3743 0000                           l3831 0000                           l3823 0000  
                         l3815 0000                           l3807 0000                           l3737 0000  
                         l3729 0000                           l3745 0000                           l3761 0000  
                         l3753 0000                           l3833 0000                           l3825 0000  
                         l3817 0000                           l3809 0000                           l3739 0000  
                         l3747 0000                           l3763 0000                           l3755 0000  
                         l3771 0000                           l3835 068C                           l3827 0000  
                         l3819 0000                           l3749 0000                           l3765 0000  
                         l3757 0000                           l3781 0000                           l3829 0000  
                         l3767 0000                           l3759 0000                           l3775 0000  
                         l3791 0000                           l3783 0000                           l3769 0000  
                         l3777 0000                           l3793 0000                           l3785 0000  
                         l3779 0000                           l3795 0000                           l3787 0000  
                         l3789 0000                           l3797 0000                           l3799 0000  
                         _EEIF 0067                           _ANS0 08F0                           _ANS1 08F1  
                         _ANS2 08F2                           _ANS3 08F3                           _ANS4 08F4  
                         _ANS5 08F5                           _ANS6 08F6                           _ANS7 08F7  
                         _ANS8 08F8                           _ANS9 08F9                           _T0IE 005D  
                         _T0IF 005A                           _T0CS 040D                           _IOCB 0116  
                         _PEIE 005E                           _INTE 005C                           _INTF 0059  
                         _PR2H 0092                           _PR2L 0091                           _TMR0 0001  
                         _STRA 0CE8                           _STRB 0CE9                           _STRC 0CEA  
                         _STRD 0CEB                           _WREN 0C62                           _WPUA 0095  
                         _WPUB 0115                           _WPUC 0093         ??i1_EX_INT_FallingEdge 0076  
                         _buff 0070                           _main 067A                           btemp 007E  
                         start 000F       __size_of_EEPROM_ReadWord 001A                          ??_KEY 0078  
                        ??_ISR 005D                 _Ctrl_remotekey 00A0                 _TIMER0_INITIAL 06C2  
             __end_of_IAPWrite 06A1                          _C1CH0 08C8                          _C1CH1 08C9  
                        _C2CH0 08D0                          _C2CH1 08D1                          _C1SEN 0CF5  
                        _C2REN 0CF4                          _C1POL 08CC                          _C2POL 08D4  
                        _C1OUT 08CE                          _C2OUT 08D6                          ?_main 0076  
                        _EEADR 009B                          _EEDAT 009A                          _ANS10 08FA  
                        _ANS11 08FB                          _EEPGD 0C67                 _TIMER2_INITIAL 06A1  
                        _ANSEL 011E                          _FLAGs 0072                          _IOCA2 04B2  
                        _IOCB4 08B4                          _IOCB5 08B5                          _IOCB6 08B6  
                        _IOCB7 08B7                          _T1GSS 08D9                          i1l922 0204  
                        i1l925 0207                          i1l942 0000                          i1l870 013C  
                        i1l951 0000                          i1l871 00D0                          i1l865 0053  
                        i1l858 001D                          i1l939 025A                          i1l867 008C  
                        i1l948 0000                          i1l972 069D                          i1l892 0169  
                        i1l876 0106                          i1l981 0000                          i1l975 0000  
                        i1l984 0000                          i1l969 0690                          i1l978 0000  
                        i1l899 0192                          _VP6EN 08C4                          _TMR2H 0013  
                        _TMR2L 0011                          _PSRCA 0088                          _PSRCC 0094  
                        _PORTA 0005                          _PORTC 0007                          _SRCON 019E  
                 ?_INT_INITIAL 0076                          _PULSR 0CF2                          _PULSS 0CF3  
                        _TRISA 0085                          _TRISC 0087                          _VRCON 0118  
                        _WPUB4 08AC                          _WPUB5 08AD                          _WPUB6 08AE  
                        _WPUB7 08AF               __end_of_OSC_INIT 0661            IAPRead@ReEEPROMread 00B0  
                        pclath 000A                          status 0003                          wtemp0 007E  
           _EX_INT_FallingEdge 06E8           __size_of_EEPROM_Read 0042                   _ms16_counter 0029  
                 __end_of_main 068E         __end_of_TIMER0_INITIAL 06CE            ?_EX_INT_FallingEdge 0076  
       __end_of_TIMER2_INITIAL 06B3                _Match_remotekey 0020                         ??_main 00B7  
                 IAPWrite@Data 0076                      ??_IAPRead 00AF                      ??_KEYSCAN 0076  
            ?_CH1_EEPROM_Write 0076       __end_of_CH3_EEPROM_Write 05C8                         _C1VREN 08C7  
                       _C2VREN 08C6                         _C2SYNC 08D8             ??_CH1_EEPROM_Write 0078  
                       i1S3877 06EC                         _EEADRH 010F                         _EEDATH 010E  
                       _EECON1 009C           ??_EX_INT_FallingEdge 00AF                         _ANSELH 011F  
                       _MC1OUT 08DF                         _MC2OUT 08DE                         _T2CON0 0012  
                       _T2CON1 009E                         i1l1030 02D8                         i1l1022 02C2  
                       i1l1023 02C6                         i1l1024 02C9                         i1l1016 0406  
                       i1l1026 02CD                         i1l1027 02D1                         i1l1028 02D4  
                       i1l3001 0043                         i1l3101 0000                         i1l3021 0000  
                       i1l3015 0000                         i1l3007 0055                         i1l3103 0158  
                       i1l3121 0000                         i1l3105 0000                         i1l3041 00CC  
                       i1l3017 0079                         i1l3211 0000                         i1l3203 01EB  
                       i1l3131 0194                         i1l3123 0000                         i1l3051 0000  
                       i1l3035 0000                         i1l3043 009E                         i1l3107 015B  
                       i1l3213 0000                         i1l3141 0000                         i1l3133 0195  
                       i1l3053 0000                         i1l3037 0000                         i1l3303 0000  
                       i1l3231 0000                         i1l3215 0000                         i1l3207 0000  
                       i1l3151 01BF                         i1l3143 0000                         i1l3119 0172  
                       i1l3071 0000                         i1l3055 0000                         i1l3039 0000  
                       i1l3401 0000                         i1l3321 0000                         i1l3313 0000  
                       i1l3305 0000                         i1l3241 0000                         i1l3225 0000  
                       i1l3217 0000                         i1l3209 0000                         i1l3161 0000  
                       i1l3153 01C1                         i1l3081 0000                         i1l3073 0138  
                       i1l3057 0102                         i1l3403 0000                         i1l3411 04EC  
                       i1l3323 0000                         i1l3315 0000                         i1l3307 0000  
                       i1l3251 0000                         i1l3227 020C                         i1l3219 01FA  
                       i1l3171 0000                         i1l3155 01C2                         i1l3139 019F  
                       i1l3163 01CA                         i1l3091 0000                         i1l3067 0000  
                       i1l3075 010A                         i1l3059 00D4                         i1l3083 0145  
                       i1l1732 0000                         i1l3405 0000                         i1l3413 04ED  
                       i1l3325 0000                         i1l3317 0000                         i1l3309 045D  
                       i1l3501 0000                         i1l3261 0000                         i1l3245 0000  
                       i1l3237 0216                         i1l3157 01C3                         i1l3093 0000  
                       i1l3077 0000                         i1l3069 0000                         i1l3423 0000  
                       i1l3415 0000                         i1l3407 0000                         i1l3351 0495  
                       i1l3335 0484                         i1l3319 0000                         i1l3327 047C  
                       i1l3503 039A                         i1l3431 02BC                         i1l3263 0000  
                       i1l3255 0000                         i1l3183 0000                         i1l3191 01DF  
                       i1l3079 0000                         i1l3409 0000                         i1l3361 0000  
                       i1l3345 0000                         i1l3329 047D                         i1l3601 0663  
                       i1l3521 03EE                         i1l3425 0000                         i1l3273 0000  
                       i1l3281 0259                         i1l3249 0000                         i1l3257 0233  
                       i1l3185 0000                         i1l3177 01D5                         i1l3169 0000  
                       i1l3089 0000                         i1l3283 0000                         i1l3363 0000  
                       i1l3355 0000                         i1l3371 04B5                         i1l3347 0000  
                       i1l3531 03F8                         i1l3275 0000                         i1l3267 0000  
                       i1l3187 0000                         i1l3179 0000                         i1l3099 0155  
                       i1l3365 0000                         i1l3357 0000                         i1l3349 0000  
                       i1l3293 044C                         i1l3285 0000                         i1l3605 066B  
                       i1l3533 0000                         i1l3525 03F4                         i1l3517 0000  
                       i1l3461 0000                         i1l3445 0000                         i1l3269 0246  
                       i1l3197 01E4                         i1l3189 0000                         i1l3391 0000  
                       i1l3367 0000                         i1l3359 0000                         i1l3607 0000  
                       i1l3615 0000                         i1l3551 0414                         i1l3527 0000  
                       i1l3519 03E7                         i1l3471 0000                         i1l3463 032B  
                       i1l3279 0000                         i1l3199 0000                         i1l3393 04CD  
                       i1l3377 04BC                         i1l3369 04B4                         i1l3609 0000  
                       i1l3561 0418                         i1l3529 0000                         i1l3473 0000  
                       i1l3465 0332                         i1l3537 03FB                         i1l3387 0000  
                       i1l3555 0416                         i1l3547 0410                         i1l3563 042C  
                       i1l3491 0389                         i1l3475 033C                         i1l3397 0000  
                       i1l3389 0000                         i1l3493 0390                         i1l3469 0338  
                       i1l3399 0000                         i1l3591 0000                         i1l3583 0000  
                       i1l3593 0000                         i1l3497 0396                         i1l3489 0000  
                       i1l3587 0000                         i1l3595 0000                         i1l3499 0000  
                       i1l3589 0000                         i1l3597 0000                         i1l2981 0000  
                       i1l3599 0000                         i1l2983 0000                         i1l2975 0000  
                       i1l2967 0000                         i1l2979 0000                         i1l3879 0421  
                       i1l2999 0000                         _INTEDG 040E                         u160_25 00C3  
                       _INTCON 000B                         u161_25 00A8                         u250_25 02FE  
                       u154_25 0075                         u251_25 030E                         u163_25 00F9  
                       u252_25 031E                         u164_25 00DE                         u166_25 012F  
                       u263_25 03AA                         u167_25 0114                         u264_25 03BA  
                       u256_25 034C                         u265_25 03CA                         u257_25 035C  
                       u249_25 02EE                         u266_25 03DA                         u258_25 036C  
                       u259_25 037C                         _OSCCON 008F                         _TMR2IE 0461  
                       _TMR2IF 0061                         _PSINKA 0097                         _PSINKC 009F  
                       _OPTION 0081                         _TMR2ON 0092                         _WDTCON 0018  
                       _TRISA2 042A                         _Indata 00AA                ?_TIMER0_INITIAL 0076  
                       ___wmul 0661              _EX_INT_RisingEdge 06F4                ?_TIMER2_INITIAL 0076  
            ??_EEPROM_ReadWord 00B2             ?_EX_INT_RisingEdge 0076                         clrloop 06CF  
                       saved_w 007E            ??_EX_INT_RisingEdge 0076                   ?_WDT_INITIAL 0076  
        _remotekey_Receive_num 002B                      ?_IAPWrite 0076      __end_of_EX_INT_RisingEdge 06F7  
               __pcstackCOMMON 0076                      ?_OSC_INIT 0076              ?_CH2_EEPROM_Write 0076  
         _CH1_remotekey_Latest 00B7           __size_of_INT_INITIAL 0007             ??_CH2_EEPROM_Write 0078  
                   __pbssBANK0 0020                     __pbssBANK1 00A0                     _led1_debug 06F7  
                   ??_IAPWrite 0077                     __pmaintext 067A                     ??_OSC_INIT 00AF  
                      ?___wmul 0076                     __pintentry 0004                        _CM1CON0 0119  
                      _CM2CON0 011A                        _CM2CON1 011B                        _IAPRead 06DD  
                      _EE_Buff 00BA                        _KEYSCAN 0442                        _PRESSED 0075  
                      _HIndata 00A8                        _PSTRCON 019D                        _LIndata 00AC  
                      _STRSYNC 0CEC  __size_ofi1_EX_INT_FallingEdge 0004     __size_of_EX_INT_RisingEdge 0003  
                _CH1_remotekey 002D                __size_of___wmul 0019              _CH1_remotekey_num 0067  
                _CH2_remotekey 003D                   __size_of_KEY 0179                   __size_of_ISR 0256  
                _CH3_remotekey 004D              ?_CH3_EEPROM_Write 0076             ??_CH3_EEPROM_Write 0078  
         end_of_initialization 06C0                    ?_led1_debug 0076                  ??_EEPROM_Read 00B7  
         __size_of_WDT_INITIAL 0005               ??_TIMER0_INITIAL 00AF                _EEPROM_ReadWord 04F7  
    __size_of_CH1_EEPROM_Write 0040               ??_TIMER2_INITIAL 00AF           _CH2_remotekey_Latest 00B8  
  __size_of_EX_INT_FallingEdge 0004              __size_of_IAPWrite 0013            __end_of_EEPROM_Read 0588  
               __end_of___wmul 067A              __size_of_OSC_INIT 0019            __size_of_led1_debug 0001  
          start_initialization 06B3                    __end_of_KEY 042F                    __end_of_ISR 0266  
      __end_of_EEPROM_ReadWord 0511      __size_of_CH2_EEPROM_Write 0040              _KEY_Match_counter 0025  
               IAPWrite@EEAddr 0077                       ??___wmul 007A                       ?_IAPRead 0076  
                ??_INT_INITIAL 00AF                       ?_KEYSCAN 0076                    __pbssCOMMON 0070  
                __pcstackBANK0 005D                  __pcstackBANK1 00AF           _CH3_remotekey_Latest 00B9  
                  _EEPROM_Read 0546                      __pnvBANK0 0067                      __pnvBANK1 00B7  
             _CH1_EEPROM_Write 0608                      __ptext680 06D6                      __ptext681 06DD  
                    __ptext690 05C8                      __ptext682 06A1                      __ptext691 0608  
                    __ptext683 06C2                      __ptext692 06F0                      __ptext684 06E3  
                    __ptext693 0661                      __ptext685 0648                      __ptext677 0000  
                    __ptext694 068E                      __ptext686 06E8                      __ptext678 0546  
                    __ptext695 0442                      __ptext687 0010                      __ptext679 04F7  
                    __ptext696 06F7                      __ptext688 02B6                      __ptext697 06F4  
                    __ptext689 0588                      __ptext698 0000     _LONGPRESS_OverTime_Counter 0026  
                    __pswtext1 06EC              _CH2_remotekey_num 0068   __end_ofi1_EX_INT_FallingEdge 06F4  
          __end_of_INT_INITIAL 06DD               ?_EEPROM_ReadWord 00B1                   ??_led1_debug 0076  
            interrupt_function 0004                       _IAPWrite 068E                 ___wmul@product 007A  
    __size_of_CH3_EEPROM_Write 0040                      _remotekey 00A4                       _OSC_INIT 0648  
            ___wmul@multiplier 0076             __end_of_led1_debug 06F8               __size_of_IAPRead 0006  
             __size_of_KEYSCAN 00B5                  ??_WDT_INITIAL 00AF               _CH2_EEPROM_Write 05C8  
                  _match_slice 0028                    _INT_INITIAL 06D6     __end_of_EX_INT_FallingEdge 06EC  
                __size_of_main 0014           i1_EX_INT_FallingEdge 06F0            __end_of_WDT_INITIAL 06E8  
                     clear_ram 06CE                _remotekey_slice 002C        __size_of_TIMER0_INITIAL 000C  
      __size_of_TIMER2_INITIAL 0012       __end_of_CH1_EEPROM_Write 0648                       intlevel1 0000  
                 ?_EEPROM_Read 0076          ?i1_EX_INT_FallingEdge 0076               _CH3_EEPROM_Write 0588  
                   _PRESS_FLAG 0027              _CH3_remotekey_num 0069                    _WDT_INITIAL 06E3  
               _KEY1_LongPress 0073            EEPROM_ReadWord@data 00B1            EEPROM_ReadWord@buff 00B6  
               _KEY2_LongPress 0074  
